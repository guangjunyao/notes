#+SETUPFILE: ../../configOrg/level1.org
#+OPTIONS: H:2 toc:2 num:3 ^:nil
#+TITLES: C++
#+AUTHORs: weiwu
#+begin_src c++

#+end_src

* C++ Basics

** Comments
- //
- /* */
** Variables, Operators and Expressions

*** naming

**** Variables:

***** common variables names
#+begin_src c++
int price_count_reader;    // No abbreviation.
int num_errors;            // "num" is a widespread convention.
int num_dns_connections;   // Most people know what "DNS" stands for.
#+end_src

***** Class Data Members
Data members of classes, both static and non-static, are named like ordinary nonmember variables, but with a trailing underscore.
#+begin_src c++
class TableInfo {
  ...
 private:
  string table_name_;  // OK - underscore at end.
  string tablename_;   // OK.
  static Pool<TableInfo>* pool_;  // OK.
};
#+end_src

**** Constant Names
Variables declared constexpr or const, and whose value is fixed for the duration of the program, are named with a leading "k" followed by mixed case. For example:
#+begin_src c++
const int kDaysInAWeek = 7;
#+end_src

**** Function Names
#+begin_src c++ :tangle yes
AddTableEntry()
DeleteUrl()
OpenFileOrDie()
#+end_src

**** File Names
- my_useful_class.cc
- my-useful-class.cc
- myusefulclass.cc
- myusefulclass_test.cc // _unittest and _regtest are deprecated.
*** logic operation
- --i and i--.
- logical and arithmetic shift.

*** scientific output expression
- use “%10.1f” as format specifier.

** Pointers and Arrays

*** swap value of two variables using pointers
#+begin_src c++
#include <stdio.h>

void Swap(int* a, int* b)
{
	int temp;		//use the variable temp to store one value.
	temp = (*b);	//temp equals to content of pointer b
	(*b) = (*a);	//pointer b equals to content of pointer a
	(*a) = temp;	//content of pointer a equals to temp

}
int main()
{
	int i = 123, j = 456;
	int* x = &i;	//x points to i
	int* y = &j;	//y points to j
	printf("Before swapping: i = %d, j = %d\n",i , j);

	Swap(x, y);
	printf("After swapping: i = %d, j = %d\n",i , j);
return 0;
}
#+end_src
