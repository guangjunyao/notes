{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Ipython markdown forum\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nworkon data_analysis\n - work on a virtual environement of python.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs build --clean\n - Clean extra files.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-ipython-markdown-forum", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to Ipython markdown forum"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  workon data_analysis  - work on a virtual environement of python.  mkdocs build  - Build the documentation site.  mkdocs build --clean  - Clean extra files.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/python_rules/", 
            "text": "Python\u8bed\u8a00\u89c4\u8303\n\n\nLint\n\n\n.. tip::\n    \u5bf9\u4f60\u7684\u4ee3\u7801\u8fd0\u884cpylint\n\n\n\u5b9a\u4e49:\n    pylint\u662f\u4e00\u4e2a\u5728Python\u6e90\u4ee3\u7801\u4e2d\u67e5\u627ebug\u7684\u5de5\u5177. \u5bf9\u4e8eC\u548cC++\u8fd9\u6837\u7684\u4e0d\u90a3\u4e48\u52a8\u6001\u7684(\u8bd1\u8005\u6ce8: \u539f\u6587\u662fless dynamic)\u8bed\u8a00, \u8fd9\u4e9bbug\u901a\u5e38\u7531\u7f16\u8bd1\u5668\u6765\u6355\u83b7. \u7531\u4e8ePython\u7684\u52a8\u6001\u7279\u6027, \u6709\u4e9b\u8b66\u544a\u53ef\u80fd\u4e0d\u5bf9. \u4e0d\u8fc7\u4f2a\u544a\u8b66\u5e94\u8be5\u5f88\u5c11.\n\n\n\u4f18\u70b9:\n    \u53ef\u4ee5\u6355\u83b7\u5bb9\u6613\u5ffd\u89c6\u7684\u9519\u8bef, \u4f8b\u5982\u8f93\u5165\u9519\u8bef, \u4f7f\u7528\u672a\u8d4b\u503c\u7684\u53d8\u91cf\u7b49.\n\n\n\u7f3a\u70b9:\n    pylint\u4e0d\u5b8c\u7f8e. \u8981\u5229\u7528\u5176\u4f18\u52bf, \u6211\u4eec\u6709\u65f6\u4faf\u9700\u8981: a) \u56f4\u7ed5\u7740\u5b83\u6765\u5199\u4ee3\u7801 b) \u6291\u5236\u5176\u544a\u8b66 c) \u6539\u8fdb\u5b83, \u6216\u8005d) \u5ffd\u7565\u5b83.\n\n\n\u7ed3\u8bba:\n    \u786e\u4fdd\u5bf9\u4f60\u7684\u4ee3\u7801\u8fd0\u884cpylint.\u6291\u5236\u4e0d\u51c6\u786e\u7684\u8b66\u544a,\u4ee5\u4fbf\u80fd\u591f\u5c06\u5176\u4ed6\u8b66\u544a\u66b4\u9732\u51fa\u6765\u3002\n\n\n\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u884c\u6ce8\u91ca\u6765\u6291\u5236\u544a\u8b66. \u4f8b\u5982:\n\n.. code-block:: python\n\n    dict = 'something awful'  # Bad Idea... pylint: disable=redefined-builtin\n\npylint\u8b66\u544a\u662f\u4ee5\u4e00\u4e2a\u6570\u5b57\u7f16\u53f7(\u5982 ``C0112`` )\u548c\u4e00\u4e2a\u7b26\u53f7\u540d(\u5982 ``empty-docstring`` )\u6765\u6807\u8bc6\u7684. \u5728\u7f16\u5199\u65b0\u4ee3\u7801\u6216\u66f4\u65b0\u5df2\u6709\u4ee3\u7801\u65f6\u5bf9\u544a\u8b66\u8fdb\u884c\u533b\u6cbb, \u63a8\u8350\u4f7f\u7528\u7b26\u53f7\u540d\u6765\u6807\u8bc6.\n\n\u5982\u679c\u8b66\u544a\u7684\u7b26\u53f7\u540d\u4e0d\u591f\u89c1\u540d\u77e5\u610f\uff0c\u90a3\u4e48\u8bf7\u5bf9\u5176\u589e\u52a0\u4e00\u4e2a\u8be6\u7ec6\u89e3\u91ca\u3002\n\n\u91c7\u7528\u8fd9\u79cd\u6291\u5236\u65b9\u5f0f\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u67e5\u627e\u6291\u5236\u5e76\u56de\u987e\u5b83\u4eec.\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 ``pylint --list-msgs`` \u6765\u83b7\u53d6pylint\u544a\u8b66\u5217\u8868. \u4f60\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 ``pylint --help-msg=C6409`` , \u4ee5\u83b7\u53d6\u5173\u4e8e\u7279\u5b9a\u6d88\u606f\u7684\u66f4\u591a\u4fe1\u606f.\n\n\u76f8\u6bd4\u8f83\u4e8e\u4e4b\u524d\u4f7f\u7528\u7684 ``pylint: disable-msg`` , \u672c\u6587\u63a8\u8350\u4f7f\u7528 ``pylint: disable`` .\n\n\u8981\u6291\u5236\"\u53c2\u6570\u672a\u4f7f\u7528\"\u544a\u8b66, \u4f60\u53ef\u4ee5\u7528\"_\"\u4f5c\u4e3a\u53c2\u6570\u6807\u8bc6\u7b26, \u6216\u8005\u5728\u53c2\u6570\u540d\u524d\u52a0\"unused\\_\". \u9047\u5230\u4e0d\u80fd\u6539\u53d8\u53c2\u6570\u540d\u7684\u60c5\u51b5, \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u51fd\u6570\u5f00\u5934\"\u63d0\u5230\"\u5b83\u4eec\u6765\u6d88\u9664\u544a\u8b66. \u4f8b\u5982:\n\n.. code-block:: python\n\n    def foo(a, unused_b, unused_c, d=None, e=None):\n        _ = d, e\n        return a\n\n\n\n\u5bfc\u5165\n\n\n.. tip::\n    \u4ec5\u5bf9\u5305\u548c\u6a21\u5757\u4f7f\u7528\u5bfc\u5165\n\n\n\u5b9a\u4e49:\n    \u6a21\u5757\u95f4\u5171\u4eab\u4ee3\u7801\u7684\u91cd\u7528\u673a\u5236.\n\n\n\u4f18\u70b9:\n    \u547d\u540d\u7a7a\u95f4\u7ba1\u7406\u7ea6\u5b9a\u5341\u5206\u7b80\u5355. \u6bcf\u4e2a\u6807\u8bc6\u7b26\u7684\u6e90\u90fd\u7528\u4e00\u79cd\u4e00\u81f4\u7684\u65b9\u5f0f\u6307\u793a. x.Obj\u8868\u793aObj\u5bf9\u8c61\u5b9a\u4e49\u5728\u6a21\u5757x\u4e2d.\n\n\n\u7f3a\u70b9:\n    \u6a21\u5757\u540d\u4ecd\u53ef\u80fd\u51b2\u7a81. \u6709\u4e9b\u6a21\u5757\u540d\u592a\u957f, \u4e0d\u592a\u65b9\u4fbf.\n\n\n\u7ed3\u8bba:\n    \u4f7f\u7528 \nimport x\n \u6765\u5bfc\u5165\u5305\u548c\u6a21\u5757.\n\n\n\u4f7f\u7528 ``from x import y`` , \u5176\u4e2dx\u662f\u5305\u524d\u7f00, y\u662f\u4e0d\u5e26\u524d\u7f00\u7684\u6a21\u5757\u540d.\n\n\u4f7f\u7528 ``from x import y as z``, \u5982\u679c\u4e24\u4e2a\u8981\u5bfc\u5165\u7684\u6a21\u5757\u90fd\u53eb\u505ay\u6216\u8005y\u592a\u957f\u4e86.\n\n\u4f8b\u5982, \u6a21\u5757 ``sound.effects.echo`` \u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u5bfc\u5165:\n\n.. code-block:: python\n\n    from sound.effects import echo\n    ...\n    echo.EchoFilter(input, output, delay=0.7, atten=4)\n\n\u5bfc\u5165\u65f6\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0. \u5373\u4f7f\u6a21\u5757\u5728\u540c\u4e00\u4e2a\u5305\u4e2d, \u4e5f\u8981\u4f7f\u7528\u5b8c\u6574\u5305\u540d. \u8fd9\u80fd\u5e2e\u52a9\u4f60\u907f\u514d\u65e0\u610f\u95f4\u5bfc\u5165\u4e00\u4e2a\u5305\u4e24\u6b21.\n\n\n\n\u5305\n\n\n.. tip::\n    \u4f7f\u7528\u6a21\u5757\u7684\u5168\u8def\u5f84\u540d\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757\n\n\n\u4f18\u70b9:\n    \u907f\u514d\u6a21\u5757\u540d\u51b2\u7a81. \u67e5\u627e\u5305\u66f4\u5bb9\u6613.\n\n\n\u7f3a\u70b9:\n    \u90e8\u7f72\u4ee3\u7801\u53d8\u96be, \u56e0\u4e3a\u4f60\u5fc5\u987b\u590d\u5236\u5305\u5c42\u6b21.\n\n\n\u7ed3\u8bba:\n    \u6240\u6709\u7684\u65b0\u4ee3\u7801\u90fd\u5e94\u8be5\u7528\u5b8c\u6574\u5305\u540d\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757.\n\n\n\u5e94\u8be5\u50cf\u4e0b\u9762\u8fd9\u6837\u5bfc\u5165:\n\n.. code-block:: python\n\n    # Reference in code with complete name.\n    import sound.effects.echo\n\n    # Reference in code with just module name (preferred).\n    from sound.effects import echo\n\n\n\n\u5f02\u5e38\n\n\n.. tip::\n    \u5141\u8bb8\u4f7f\u7528\u5f02\u5e38, \u4f46\u5fc5\u987b\u5c0f\u5fc3\n\n\n\u5b9a\u4e49:\n    \u5f02\u5e38\u662f\u4e00\u79cd\u8df3\u51fa\u4ee3\u7801\u5757\u7684\u6b63\u5e38\u63a7\u5236\u6d41\u6765\u5904\u7406\u9519\u8bef\u6216\u8005\u5176\u5b83\u5f02\u5e38\u6761\u4ef6\u7684\u65b9\u5f0f.\n\n\n\u4f18\u70b9:\n    \u6b63\u5e38\u64cd\u4f5c\u4ee3\u7801\u7684\u63a7\u5236\u6d41\u4e0d\u4f1a\u548c\u9519\u8bef\u5904\u7406\u4ee3\u7801\u6df7\u5728\u4e00\u8d77. \u5f53\u67d0\u79cd\u6761\u4ef6\u53d1\u751f\u65f6, \u5b83\u4e5f\u5141\u8bb8\u63a7\u5236\u6d41\u8df3\u8fc7\u591a\u4e2a\u6846\u67b6. \u4f8b\u5982, \u4e00\u6b65\u8df3\u51faN\u4e2a\u5d4c\u5957\u7684\u51fd\u6570, \u800c\u4e0d\u5fc5\u7ee7\u7eed\u6267\u884c\u9519\u8bef\u7684\u4ee3\u7801.\n\n\n\u7f3a\u70b9:\n    \u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba9\u4eba\u56f0\u60d1\u7684\u63a7\u5236\u6d41. \u8c03\u7528\u5e93\u65f6\u5bb9\u6613\u9519\u8fc7\u9519\u8bef\u60c5\u51b5.\n\n\n\u7ed3\u8bba:\n    \u5f02\u5e38\u5fc5\u987b\u9075\u5b88\u7279\u5b9a\u6761\u4ef6:\n\n\n#. \u50cf\u8fd9\u6837\u89e6\u53d1\u5f02\u5e38: ``raise MyException(\"Error message\")`` \u6216\u8005 ``raise MyException`` . \u4e0d\u8981\u4f7f\u7528\u4e24\u4e2a\u53c2\u6570\u7684\u5f62\u5f0f( ``raise MyException, \"Error message\"`` )\u6216\u8005\u8fc7\u65f6\u7684\u5b57\u7b26\u4e32\u5f02\u5e38( ``raise \"Error message\"`` ).\n#. \u6a21\u5757\u6216\u5305\u5e94\u8be5\u5b9a\u4e49\u81ea\u5df1\u7684\u7279\u5b9a\u57df\u7684\u5f02\u5e38\u57fa\u7c7b, \u8fd9\u4e2a\u57fa\u7c7b\u5e94\u8be5\u4ece\u5185\u5efa\u7684Exception\u7c7b\u7ee7\u627f. \u6a21\u5757\u7684\u5f02\u5e38\u57fa\u7c7b\u5e94\u8be5\u53eb\u505a\"Error\".\n\n    .. code-block:: python\n\n        class Error(Exception):\n            pass\n\n#. \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 ``except:`` \u8bed\u53e5\u6765\u6355\u83b7\u6240\u6709\u5f02\u5e38, \u4e5f\u4e0d\u8981\u6355\u83b7 ``Exception`` \u6216\u8005 ``StandardError`` , \u9664\u975e\u4f60\u6253\u7b97\u91cd\u65b0\u89e6\u53d1\u8be5\u5f02\u5e38, \u6216\u8005\u4f60\u5df2\u7ecf\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u6700\u5916\u5c42(\u8bb0\u5f97\u8fd8\u662f\u8981\u6253\u5370\u4e00\u6761\u9519\u8bef\u6d88\u606f). \u5728\u5f02\u5e38\u8fd9\u65b9\u9762, Python\u975e\u5e38\u5bbd\u5bb9, ``except:`` \u771f\u7684\u4f1a\u6355\u83b7\u5305\u62ecPython\u8bed\u6cd5\u9519\u8bef\u5728\u5185\u7684\u4efb\u4f55\u9519\u8bef. \u4f7f\u7528 ``except:`` \u5f88\u5bb9\u6613\u9690\u85cf\u771f\u6b63\u7684bug.\n#. \u5c3d\u91cf\u51cf\u5c11try/except\u5757\u4e2d\u7684\u4ee3\u7801\u91cf. try\u5757\u7684\u4f53\u79ef\u8d8a\u5927, \u671f\u671b\u4e4b\u5916\u7684\u5f02\u5e38\u5c31\u8d8a\u5bb9\u6613\u88ab\u89e6\u53d1. \u8fd9\u79cd\u60c5\u51b5\u4e0b, try/except\u5757\u5c06\u9690\u85cf\u771f\u6b63\u7684\u9519\u8bef.\n#. \u4f7f\u7528finally\u5b50\u53e5\u6765\u6267\u884c\u90a3\u4e9b\u65e0\u8bbatry\u5757\u4e2d\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u5e94\u8be5\u88ab\u6267\u884c\u7684\u4ee3\u7801. \u8fd9\u5bf9\u4e8e\u6e05\u7406\u8d44\u6e90\u5e38\u5e38\u5f88\u6709\u7528, \u4f8b\u5982\u5173\u95ed\u6587\u4ef6.\n#. \u5f53\u6355\u83b7\u5f02\u5e38\u65f6, \u4f7f\u7528 ``as`` \u800c\u4e0d\u8981\u7528\u9017\u53f7. \u4f8b\u5982\n\n    .. code-block:: python\n\n        try:\n            raise Error\n        except Error as error:\n            pass\n\n\n\n\u5168\u5c40\u53d8\u91cf\n\n\n.. tip::\n    \u907f\u514d\u5168\u5c40\u53d8\u91cf\n\n\n\u5b9a\u4e49:\n    \u5b9a\u4e49\u5728\u6a21\u5757\u7ea7\u7684\u53d8\u91cf.\n\n\n\u4f18\u70b9:\n    \u5076\u5c14\u6709\u7528.\n\n\n\u7f3a\u70b9:\n    \u5bfc\u5165\u65f6\u53ef\u80fd\u6539\u53d8\u6a21\u5757\u884c\u4e3a, \u56e0\u4e3a\u5bfc\u5165\u6a21\u5757\u65f6\u4f1a\u5bf9\u6a21\u5757\u7ea7\u53d8\u91cf\u8d4b\u503c.\n\n\n\u7ed3\u8bba:\n    \u907f\u514d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf, \u7528\u7c7b\u53d8\u91cf\u6765\u4ee3\u66ff. \u4f46\u4e5f\u6709\u4e00\u4e9b\u4f8b\u5916:\n\n\n#. \u811a\u672c\u7684\u9ed8\u8ba4\u9009\u9879.\n#. \u6a21\u5757\u7ea7\u5e38\u91cf. \u4f8b\u5982:\u3000PI = 3.14159. \u5e38\u91cf\u5e94\u8be5\u5168\u5927\u5199, \u7528\u4e0b\u5212\u7ebf\u8fde\u63a5.\n#. \u6709\u65f6\u5019\u7528\u5168\u5c40\u53d8\u91cf\u6765\u7f13\u5b58\u503c\u6216\u8005\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u5f88\u6709\u7528.\n#. \u5982\u679c\u9700\u8981, \u5168\u5c40\u53d8\u91cf\u5e94\u8be5\u4ec5\u5728\u6a21\u5757\u5185\u90e8\u53ef\u7528, \u5e76\u901a\u8fc7\u6a21\u5757\u7ea7\u7684\u516c\u5171\u51fd\u6570\u6765\u8bbf\u95ee.\n\n\n\n\u5d4c\u5957/\u5c40\u90e8/\u5185\u90e8\u7c7b\u6216\u51fd\u6570\n\n\n.. tip::\n    \u9f13\u52b1\u4f7f\u7528\u5d4c\u5957/\u672c\u5730/\u5185\u90e8\u7c7b\u6216\u51fd\u6570\n\n\n\u5b9a\u4e49:\n    \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5, \u51fd\u6570\u6216\u8005\u7c7b\u4e2d. \u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u4e2d. \u5c01\u95ed\u533a\u95f4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5bf9\u5d4c\u5957\u51fd\u6570\u662f\u53ea\u8bfb\u7684.\n\n\n\u4f18\u70b9:\n    \u5141\u8bb8\u5b9a\u4e49\u4ec5\u7528\u4e8e\u6709\u6548\u8303\u56f4\u7684\u5de5\u5177\u7c7b\u548c\u51fd\u6570.\n\n\n\u7f3a\u70b9:\n    \u5d4c\u5957\u7c7b\u6216\u5c40\u90e8\u7c7b\u7684\u5b9e\u4f8b\u4e0d\u80fd\u5e8f\u5217\u5316(pickled).\n\n\n\u7ed3\u8bba:\n    \u63a8\u8350\u4f7f\u7528.\n\n\n\u5217\u8868\u63a8\u5bfc(List Comprehensions)\n\n\n.. tip::\n    \u53ef\u4ee5\u5728\u7b80\u5355\u60c5\u51b5\u4e0b\u4f7f\u7528\n\n\n\u5b9a\u4e49:\n    \u5217\u8868\u63a8\u5bfc(list comprehensions)\u4e0e\u751f\u6210\u5668\u8868\u8fbe\u5f0f(generator expression)\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5217\u8868\u548c\u8fed\u4ee3\u5668, \u800c\u4e0d\u5fc5\u501f\u52a9map(), filter(), \u6216\u8005lambda.\n\n\n\u4f18\u70b9:\n    \u7b80\u5355\u7684\u5217\u8868\u63a8\u5bfc\u53ef\u4ee5\u6bd4\u5176\u5b83\u7684\u5217\u8868\u521b\u5efa\u65b9\u6cd5\u66f4\u52a0\u6e05\u6670\u7b80\u5355. \u751f\u6210\u5668\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5341\u5206\u9ad8\u6548, \u56e0\u4e3a\u5b83\u4eec\u907f\u514d\u4e86\u521b\u5efa\u6574\u4e2a\u5217\u8868.\n\n\n\u7f3a\u70b9:\n    \u590d\u6742\u7684\u5217\u8868\u63a8\u5bfc\u6216\u8005\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u53ef\u80fd\u96be\u4ee5\u9605\u8bfb.\n\n\n\u7ed3\u8bba:\n    \u9002\u7528\u4e8e\u7b80\u5355\u60c5\u51b5. \u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u5355\u72ec\u7f6e\u4e8e\u4e00\u884c: \u6620\u5c04\u8868\u8fbe\u5f0f, for\u8bed\u53e5, \u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f. \u7981\u6b62\u591a\u91cdfor\u8bed\u53e5\u6216\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f. \u590d\u6742\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f7f\u7528\u5faa\u73af.\n\n\n.. code-block:: python\n\n    Yes:\n      result = []\n      for x in range(10):\n          for y in range(5):\n              if x * y \n 10:\n                  result.append((x, y))\n\n      for x in xrange(5):\n          for y in xrange(5):\n              if x != y:\n                  for z in xrange(5):\n                      if y != z:\n                          yield (x, y, z)\n\n      return ((x, complicated_transform(x))\n              for x in long_generator_function(parameter)\n              if x is not None)\n\n      squares = [x * x for x in range(10)]\n\n      eat(jelly_bean for jelly_bean in jelly_beans\n          if jelly_bean.color == 'black')\n\n.. code-block:: python\n\n    No:\n      result = [(x, y) for x in range(10) for y in range(5) if x * y \n 10]\n\n      return ((x, y, z)\n              for x in xrange(5)\n              for y in xrange(5)\n              if x != y\n              for z in xrange(5)\n              if y != z)\n\n\n\n\u9ed8\u8ba4\u8fed\u4ee3\u5668\u548c\u64cd\u4f5c\u7b26\n\n\n.. tip::\n    \u5982\u679c\u7c7b\u578b\u652f\u6301, \u5c31\u4f7f\u7528\u9ed8\u8ba4\u8fed\u4ee3\u5668\u548c\u64cd\u4f5c\u7b26. \u6bd4\u5982\u5217\u8868, \u5b57\u5178\u53ca\u6587\u4ef6\u7b49.\n\n\n\u5b9a\u4e49:\n    \u5bb9\u5668\u7c7b\u578b, \u50cf\u5b57\u5178\u548c\u5217\u8868, \u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u8fed\u4ee3\u5668\u548c\u5173\u7cfb\u6d4b\u8bd5\u64cd\u4f5c\u7b26(in\u548cnot in)\n\n\n\u4f18\u70b9:\n    \u9ed8\u8ba4\u64cd\u4f5c\u7b26\u548c\u8fed\u4ee3\u5668\u7b80\u5355\u9ad8\u6548, \u5b83\u4eec\u76f4\u63a5\u8868\u8fbe\u4e86\u64cd\u4f5c, \u6ca1\u6709\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528. \u4f7f\u7528\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u7684\u51fd\u6570\u662f\u901a\u7528\u7684. \u5b83\u53ef\u4ee5\u7528\u4e8e\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u4efb\u4f55\u7c7b\u578b.\n\n\n\u7f3a\u70b9:\n    \u4f60\u6ca1\u6cd5\u901a\u8fc7\u9605\u8bfb\u65b9\u6cd5\u540d\u6765\u533a\u5206\u5bf9\u8c61\u7684\u7c7b\u578b(\u4f8b\u5982, has_key()\u610f\u5473\u7740\u5b57\u5178). \u4e0d\u8fc7\u8fd9\u4e5f\u662f\u4f18\u70b9.\n\n\n\u7ed3\u8bba:\n    \u5982\u679c\u7c7b\u578b\u652f\u6301, \u5c31\u4f7f\u7528\u9ed8\u8ba4\u8fed\u4ee3\u5668\u548c\u64cd\u4f5c\u7b26, \u4f8b\u5982\u5217\u8868, \u5b57\u5178\u548c\u6587\u4ef6. \u5185\u5efa\u7c7b\u578b\u4e5f\u5b9a\u4e49\u4e86\u8fed\u4ee3\u5668\u65b9\u6cd5. \u4f18\u5148\u8003\u8651\u8fd9\u4e9b\u65b9\u6cd5, \u800c\u4e0d\u662f\u90a3\u4e9b\u8fd4\u56de\u5217\u8868\u7684\u65b9\u6cd5. \u5f53\u7136\uff0c\u8fd9\u6837\u904d\u5386\u5bb9\u5668\u65f6\uff0c\u4f60\u5c06\u4e0d\u80fd\u4fee\u6539\u5bb9\u5668.\n\n\n.. code-block:: python\n\n    Yes:  for key in adict: ...\n          if key not in adict: ...\n          if obj in alist: ...\n          for line in afile: ...\n          for k, v in dict.iteritems(): ...\n\n.. code-block:: python\n\n    No:   for key in adict.keys(): ...\n          if not adict.has_key(key): ...\n          for line in afile.readlines(): ...\n\n\n\n\u751f\u6210\u5668\n\n\n.. tip::\n    \u6309\u9700\u4f7f\u7528\u751f\u6210\u5668.\n\n\n\u5b9a\u4e49:\n    \u6240\u8c13\u751f\u6210\u5668\u51fd\u6570, \u5c31\u662f\u6bcf\u5f53\u5b83\u6267\u884c\u4e00\u6b21\u751f\u6210(yield)\u8bed\u53e5, \u5b83\u5c31\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668, \u8fd9\u4e2a\u8fed\u4ee3\u5668\u751f\u6210\u4e00\u4e2a\u503c. \u751f\u6210\u503c\u540e, \u751f\u6210\u5668\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u5c06\u88ab\u6302\u8d77, \u76f4\u5230\u4e0b\u4e00\u6b21\u751f\u6210.\n\n\n\u4f18\u70b9:\n    \u7b80\u5316\u4ee3\u7801, \u56e0\u4e3a\u6bcf\u6b21\u8c03\u7528\u65f6, \u5c40\u90e8\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7684\u72b6\u6001\u90fd\u4f1a\u88ab\u4fdd\u5b58. \u6bd4\u8d77\u4e00\u6b21\u521b\u5efa\u4e00\u7cfb\u5217\u503c\u7684\u51fd\u6570, \u751f\u6210\u5668\u4f7f\u7528\u7684\u5185\u5b58\u66f4\u5c11.\n\n\n\u7f3a\u70b9:\n    \u6ca1\u6709.\n\n\n\u7ed3\u8bba:\n    \u9f13\u52b1\u4f7f\u7528. \u6ce8\u610f\u5728\u751f\u6210\u5668\u51fd\u6570\u7684\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\"Yields:\"\u800c\u4e0d\u662f\"Returns:\".\n\n\n(\u8bd1\u8005\u6ce8: \u53c2\u770b :ref:`\u6ce8\u91ca\ncomments\n` )\n\n\n\nLambda\u51fd\u6570\n\n\n.. tip::\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570\n\n\n\u5b9a\u4e49:\n    \u4e0e\u8bed\u53e5\u76f8\u53cd, lambda\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u533f\u540d\u51fd\u6570. \u5e38\u7528\u4e8e\u4e3a \nmap()\n \u548c \nfilter()\n \u4e4b\u7c7b\u7684\u9ad8\u9636\u51fd\u6570\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\u6216\u8005\u64cd\u4f5c\u7b26.\n\n\n\u4f18\u70b9:\n    \u65b9\u4fbf.\n\n\n\u7f3a\u70b9:\n    \u6bd4\u672c\u5730\u51fd\u6570\u66f4\u96be\u9605\u8bfb\u548c\u8c03\u8bd5. \u6ca1\u6709\u51fd\u6570\u540d\u610f\u5473\u7740\u5806\u6808\u8ddf\u8e2a\u66f4\u96be\u7406\u89e3. \u7531\u4e8elambda\u51fd\u6570\u901a\u5e38\u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f, \u56e0\u6b64\u5176\u8868\u8fbe\u80fd\u529b\u6709\u9650.\n\n\n\u7ed3\u8bba:\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570. \u5982\u679c\u4ee3\u7801\u8d85\u8fc760-80\u4e2a\u5b57\u7b26, \u6700\u597d\u8fd8\u662f\u5b9a\u4e49\u6210\u5e38\u89c4(\u5d4c\u5957)\u51fd\u6570.\n\n\n\u5bf9\u4e8e\u5e38\u89c1\u7684\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff0c\u4f7f\u7528 ``operator`` \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u4ee5\u4ee3\u66fflambda\u51fd\u6570. \u4f8b\u5982, \u63a8\u8350\u4f7f\u7528 ``operator.mul`` , \u800c\u4e0d\u662f ``lambda x, y: x * y`` .\n\n\n\n\u6761\u4ef6\u8868\u8fbe\u5f0f\n\n\n.. tip::\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570\n\n\n\u5b9a\u4e49:\n    \u6761\u4ef6\u8868\u8fbe\u5f0f\u662f\u5bf9\u4e8eif\u8bed\u53e5\u7684\u4e00\u79cd\u66f4\u4e3a\u7b80\u77ed\u7684\u53e5\u6cd5\u89c4\u5219. \u4f8b\u5982: \nx = 1 if cond else 2\n .\n\n\n\u4f18\u70b9:\n    \u6bd4if\u8bed\u53e5\u66f4\u52a0\u7b80\u77ed\u548c\u65b9\u4fbf.\n\n\n\u7f3a\u70b9:\n    \u6bd4if\u8bed\u53e5\u96be\u4e8e\u9605\u8bfb. \u5982\u679c\u8868\u8fbe\u5f0f\u5f88\u957f\uff0c \u96be\u4e8e\u5b9a\u4f4d\u6761\u4ef6.\n\n\n\u7ed3\u8bba:\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570. \u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528\u5b8c\u6574\u7684if\u8bed\u53e5.\n\n\n\u9ed8\u8ba4\u53c2\u6570\u503c\n\n\n.. tip::\n    \u9002\u7528\u4e8e\u5927\u90e8\u5206\u60c5\u51b5.\n\n\n\u5b9a\u4e49:\n    \u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u6307\u5b9a\u53d8\u91cf\u7684\u503c, \u4f8b\u5982, \ndef foo(a, b = 0):\n . \u5982\u679c\u8c03\u7528foo\u65f6\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570, \u5219b\u88ab\u8bbe\u4e3a0. \u5982\u679c\u5e26\u4e24\u4e2a\u53c2\u6570, \u5219b\u7684\u503c\u7b49\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570.\n\n\n\u4f18\u70b9:\n    \u4f60\u7ecf\u5e38\u4f1a\u78b0\u5230\u4e00\u4e9b\u4f7f\u7528\u5927\u91cf\u9ed8\u8ba4\u503c\u7684\u51fd\u6570, \u4f46\u5076\u5c14(\u6bd4\u8f83\u5c11\u89c1)\u4f60\u60f3\u8981\u8986\u76d6\u8fd9\u4e9b\u9ed8\u8ba4\u503c. \u9ed8\u8ba4\u53c2\u6570\u503c\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u8fd9\u4ef6\u4e8b, \u4f60\u4e0d\u9700\u8981\u4e3a\u8fd9\u4e9b\u7f55\u89c1\u7684\u4f8b\u5916\u5b9a\u4e49\u5927\u91cf\u51fd\u6570. \u540c\u65f6, Python\u4e5f\u4e0d\u652f\u6301\u91cd\u8f7d\u65b9\u6cd5\u548c\u51fd\u6570, \u9ed8\u8ba4\u53c2\u6570\u662f\u4e00\u79cd\"\u4eff\u9020\"\u91cd\u8f7d\u884c\u4e3a\u7684\u7b80\u5355\u65b9\u5f0f.\n\n\n\u7f3a\u70b9:\n    \u9ed8\u8ba4\u53c2\u6570\u53ea\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u6c42\u503c\u4e00\u6b21. \u5982\u679c\u53c2\u6570\u662f\u5217\u8868\u6216\u5b57\u5178\u4e4b\u7c7b\u7684\u53ef\u53d8\u7c7b\u578b, \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898. \u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u5bf9\u8c61(\u4f8b\u5982\u5411\u5217\u8868\u8ffd\u52a0\u9879), \u9ed8\u8ba4\u503c\u5c31\u88ab\u4fee\u6539\u4e86.\n\n\n\u7ed3\u8bba:\n    \u9f13\u52b1\u4f7f\u7528, \u4e0d\u8fc7\u6709\u5982\u4e0b\u6ce8\u610f\u4e8b\u9879:\n\n\n\u4e0d\u8981\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u4f7f\u7528\u53ef\u53d8\u5bf9\u8c61\u4f5c\u4e3a\u9ed8\u8ba4\u503c.\n\n.. code-block:: python\n\n    Yes: def foo(a, b=None):\n             if b is None:\n                 b = []\n\n.. code-block:: python\n\n    No:  def foo(a, b=[]):\n             ...\n    No:  def foo(a, b=time.time()):  # The time the module was loaded???\n             ...\n    No:  def foo(a, b=FLAGS.my_thing):  # sys.argv has not yet been parsed...\n             ...\n\n\n\n\u5c5e\u6027(properties)\n\n\n.. tip::\n    \u8bbf\u95ee\u548c\u8bbe\u7f6e\u6570\u636e\u6210\u5458\u65f6, \u4f60\u901a\u5e38\u4f1a\u4f7f\u7528\u7b80\u5355, \u8f7b\u91cf\u7ea7\u7684\u8bbf\u95ee\u548c\u8bbe\u7f6e\u51fd\u6570. \u5efa\u8bae\u7528\u5c5e\u6027\uff08properties\uff09\u6765\u4ee3\u66ff\u5b83\u4eec.\n\n\n\u5b9a\u4e49:\n    \u4e00\u79cd\u7528\u4e8e\u5305\u88c5\u65b9\u6cd5\u8c03\u7528\u7684\u65b9\u5f0f. \u5f53\u8fd0\u7b97\u91cf\u4e0d\u5927, \u5b83\u662f\u83b7\u53d6\u548c\u8bbe\u7f6e\u5c5e\u6027(attribute)\u7684\u6807\u51c6\u65b9\u5f0f.\n\n\n\u4f18\u70b9:\n    \u901a\u8fc7\u6d88\u9664\u7b80\u5355\u7684\u5c5e\u6027(attribute)\u8bbf\u95ee\u65f6\u663e\u5f0f\u7684get\u548cset\u65b9\u6cd5\u8c03\u7528, \u53ef\u8bfb\u6027\u63d0\u9ad8\u4e86. \u5141\u8bb8\u61d2\u60f0\u7684\u8ba1\u7b97. \u7528Pythonic\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\u7c7b\u7684\u63a5\u53e3. \u5c31\u6027\u80fd\u800c\u8a00, \u5f53\u76f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u662f\u5408\u7406\u7684, \u6dfb\u52a0\u8bbf\u95ee\u65b9\u6cd5\u5c31\u663e\u5f97\u7410\u788e\u800c\u65e0\u610f\u4e49. \u4f7f\u7528\u5c5e\u6027(properties)\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898. \u5c06\u6765\u4e5f\u53ef\u4ee5\u5728\u4e0d\u7834\u574f\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u5c06\u8bbf\u95ee\u65b9\u6cd5\u52a0\u4e0a.\n\n\n\u7f3a\u70b9:\n    \u5c5e\u6027(properties)\u662f\u5728get\u548cset\u65b9\u6cd5\u58f0\u660e\u540e\u6307\u5b9a, \u8fd9\u9700\u8981\u4f7f\u7528\u8005\u5728\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u4e2d\u6ce8\u610f: set\u548cget\u662f\u7528\u4e8e\u5c5e\u6027(properties)\u7684(\u9664\u4e86\u7528 \n@property\n \u88c5\u9970\u5668\u521b\u5efa\u7684\u53ea\u8bfb\u5c5e\u6027).  \u5fc5\u987b\u7ee7\u627f\u81eaobject\u7c7b. \u53ef\u80fd\u9690\u85cf\u6bd4\u5982\u64cd\u4f5c\u7b26\u91cd\u8f7d\u4e4b\u7c7b\u7684\u526f\u4f5c\u7528. \u7ee7\u627f\u65f6\u53ef\u80fd\u4f1a\u8ba9\u4eba\u56f0\u60d1.\n\n\n\u7ed3\u8bba:\n    \u4f60\u901a\u5e38\u4e60\u60ef\u4e8e\u4f7f\u7528\u8bbf\u95ee\u6216\u8bbe\u7f6e\u65b9\u6cd5\u6765\u8bbf\u95ee\u6216\u8bbe\u7f6e\u6570\u636e, \u5b83\u4eec\u7b80\u5355\u800c\u8f7b\u91cf. \u4e0d\u8fc7\u6211\u4eec\u5efa\u8bae\u4f60\u5728\u65b0\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u5c5e\u6027. \u53ea\u8bfb\u5c5e\u6027\u5e94\u8be5\u7528 \n@property\n \n\u88c5\u9970\u5668 \nhttp://google-styleguide.googlecode.com/svn/trunk/pyguide.html#Function_and_Method_Decorators\n_ \u6765\u521b\u5efa.\n\n\n\u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u8986\u76d6\u5c5e\u6027, \u90a3\u4e48\u5c5e\u6027\u7684\u7ee7\u627f\u53ef\u80fd\u770b\u4e0a\u53bb\u4e0d\u660e\u663e. \u56e0\u6b64\u4f7f\u7528\u8005\u5fc5\u987b\u786e\u4fdd\u8bbf\u95ee\u65b9\u6cd5\u95f4\u63a5\u88ab\u8c03\u7528, \u4ee5\u4fdd\u8bc1\u5b50\u7c7b\u4e2d\u7684\u91cd\u8f7d\u65b9\u6cd5\u88ab\u5c5e\u6027\u8c03\u7528(\u4f7f\u7528\u6a21\u677f\u65b9\u6cd5\u8bbe\u8ba1\u6a21\u5f0f).\n\n.. code-block:: python\n\n    Yes: import math\n\n         class Square(object):\n             \"\"\"A square with two properties: a writable area and a read-only perimeter.\n\n             To use:\n             \n sq = Square(3)\n             \n sq.area\n             9\n             \n sq.perimeter\n             12\n             \n sq.area = 16\n             \n sq.side\n             4\n             \n sq.perimeter\n             16\n             \"\"\"\n\n             def __init__(self, side):\n                 self.side = side\n\n             def __get_area(self):\n                 \"\"\"Calculates the 'area' property.\"\"\"\n                 return self.side ** 2\n\n             def ___get_area(self):\n                 \"\"\"Indirect accessor for 'area' property.\"\"\"\n                 return self.__get_area()\n\n             def __set_area(self, area):\n                 \"\"\"Sets the 'area' property.\"\"\"\n                 self.side = math.sqrt(area)\n\n             def ___set_area(self, area):\n                 \"\"\"Indirect setter for 'area' property.\"\"\"\n                 self._SetArea(area)\n\n             area = property(___get_area, ___set_area,\n                             doc=\"\"\"Gets or sets the area of the square.\"\"\")\n\n             @property\n             def perimeter(self):\n                 return self.side * 4\n\n\n(\u8bd1\u8005\u6ce8: \u8001\u5b9e\u8bf4, \u6211\u89c9\u5f97\u8fd9\u6bb5\u793a\u4f8b\u4ee3\u7801\u5f88\u4e0d\u6070\u5f53, \u6709\u5fc5\u8981\u8fd9\u4e48\u86cb\u75bc\u5417?)\n\n\n\nTrue/False\u7684\u6c42\u503c\n\n\n.. tip::\n    \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0ffalse\n\n\n\u5b9a\u4e49:\n    Python\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u5c06\u67d0\u4e9b\u503c\u6c42\u503c\u4e3afalse. \u6309\u7b80\u5355\u7684\u76f4\u89c9\u6765\u8bb2, \u5c31\u662f\u6240\u6709\u7684\"\u7a7a\"\u503c\u90fd\u88ab\u8ba4\u4e3a\u662ffalse. \u56e0\u6b640\uff0c None, [], {}, \"\" \u90fd\u88ab\u8ba4\u4e3a\u662ffalse.\n\n\n\u4f18\u70b9:\n    \u4f7f\u7528Python\u5e03\u5c14\u503c\u7684\u6761\u4ef6\u8bed\u53e5\u66f4\u6613\u8bfb\u4e5f\u66f4\u4e0d\u6613\u72af\u9519. \u5927\u90e8\u5206\u60c5\u51b5\u4e0b, \u4e5f\u66f4\u5feb.\n\n\n\u7f3a\u70b9:\n    \u5bf9C/C++\u5f00\u53d1\u4eba\u5458\u6765\u8bf4, \u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u602a.\n\n\n\u7ed3\u8bba:\n    \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0f\u7684false, \u4f8b\u5982: \u4f7f\u7528 \nif foo:\n \u800c\u4e0d\u662f \nif foo != []:\n . \u4e0d\u8fc7\u8fd8\u662f\u6709\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\u9700\u8981\u4f60\u94ed\u8bb0\u5728\u5fc3:\n\n\n#. \u6c38\u8fdc\u4e0d\u8981\u7528==\u6216\u8005!=\u6765\u6bd4\u8f83\u5355\u4ef6, \u6bd4\u5982None. \u4f7f\u7528is\u6216\u8005is not.\n#. \u6ce8\u610f: \u5f53\u4f60\u5199\u4e0b ``if x:`` \u65f6, \u4f60\u5176\u5b9e\u8868\u793a\u7684\u662f ``if x is not None`` . \u4f8b\u5982: \u5f53\u4f60\u8981\u6d4b\u8bd5\u4e00\u4e2a\u9ed8\u8ba4\u503c\u662fNone\u7684\u53d8\u91cf\u6216\u53c2\u6570\u662f\u5426\u88ab\u8bbe\u4e3a\u5176\u5b83\u503c. \u8fd9\u4e2a\u503c\u5728\u5e03\u5c14\u8bed\u4e49\u4e0b\u53ef\u80fd\u662ffalse!\n#. \u6c38\u8fdc\u4e0d\u8981\u7528==\u5c06\u4e00\u4e2a\u5e03\u5c14\u91cf\u4e0efalse\u76f8\u6bd4\u8f83. \u4f7f\u7528 ``if not x:`` \u4ee3\u66ff. \u5982\u679c\u4f60\u9700\u8981\u533a\u5206false\u548cNone, \u4f60\u5e94\u8be5\u7528\u50cf ``if not x and x is not None:`` \u8fd9\u6837\u7684\u8bed\u53e5.\n#. \u5bf9\u4e8e\u5e8f\u5217(\u5b57\u7b26\u4e32, \u5217\u8868, \u5143\u7ec4), \u8981\u6ce8\u610f\u7a7a\u5e8f\u5217\u662ffalse. \u56e0\u6b64 ``if not seq:`` \u6216\u8005 ``if seq:`` \u6bd4 ``if len(seq):`` \u6216 ``if not len(seq):`` \u8981\u66f4\u597d.\n#. \u5904\u7406\u6574\u6570\u65f6, \u4f7f\u7528\u9690\u5f0ffalse\u53ef\u80fd\u4f1a\u5f97\u4e0d\u507f\u5931(\u5373\u4e0d\u5c0f\u5fc3\u5c06None\u5f53\u505a0\u6765\u5904\u7406). \u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u77e5\u662f\u6574\u578b(\u4e14\u4e0d\u662flen()\u7684\u8fd4\u56de\u7ed3\u679c)\u7684\u503c\u4e0e0\u6bd4\u8f83.\n\n    .. code-block:: python\n\n        Yes: if not users:\n                 print 'no users'\n\n             if foo == 0:\n                 self.handle_zero()\n\n             if i % 10 == 0:\n                 self.handle_multiple_of_ten()\n\n    .. code-block:: python\n\n        No:  if len(users) == 0:\n                 print 'no users'\n\n             if foo is not None and not foo:\n                 self.handle_zero()\n\n             if not i % 10:\n                 self.handle_multiple_of_ten()\n\n#. \u6ce8\u610f'0'(\u5b57\u7b26\u4e32)\u4f1a\u88ab\u5f53\u505atrue.\n\n\n\n\u8fc7\u65f6\u7684\u8bed\u8a00\u7279\u6027\n\n\n.. tip::\n    \u5c3d\u53ef\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u53d6\u4ee3\u5b57\u7b26\u4e32\u6a21\u5757. \u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u53d6\u4ee3apply(). \u4f7f\u7528\u5217\u8868\u63a8\u5bfc, for\u5faa\u73af\u53d6\u4ee3filter(), map()\u4ee5\u53careduce().\n\n\n\u5b9a\u4e49:\n    \u5f53\u524d\u7248\u672c\u7684Python\u63d0\u4f9b\u4e86\u5927\u5bb6\u901a\u5e38\u66f4\u559c\u6b22\u7684\u66ff\u4ee3\u54c1.\n\n\n\u7ed3\u8bba:\n    \u6211\u4eec\u4e0d\u4f7f\u7528\u4e0d\u652f\u6301\u8fd9\u4e9b\u7279\u6027\u7684Python\u7248\u672c, \u6240\u4ee5\u6ca1\u7406\u7531\u4e0d\u7528\u65b0\u7684\u65b9\u5f0f.\n\n\n.. code-block:: python\n\n    Yes: words = foo.split(':')\n\n         [x[1] for x in my_list if x[2] == 5]\n\n         map(math.sqrt, data)    # Ok. No inlined lambda expression.\n\n         fn(*args, **kwargs)\n\n.. code-block:: python\n\n    No:  words = string.split(foo, ':')\n\n         map(lambda x: x[1], filter(lambda x: x[2] == 5, my_list))\n\n         apply(fn, args, kwargs)\n\n\n\n\u8bcd\u6cd5\u4f5c\u7528\u57df(Lexical Scoping)\n\n\n.. tip::\n    \u63a8\u8350\u4f7f\u7528\n\n\n\u5b9a\u4e49:\n    \u5d4c\u5957\u7684Python\u51fd\u6570\u53ef\u4ee5\u5f15\u7528\u5916\u5c42\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf, \u4f46\u662f\u4e0d\u80fd\u591f\u5bf9\u5b83\u4eec\u8d4b\u503c. \u53d8\u91cf\u7ed1\u5b9a\u7684\u89e3\u6790\u662f\u4f7f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df, \u4e5f\u5c31\u662f\u57fa\u4e8e\u9759\u6001\u7684\u7a0b\u5e8f\u6587\u672c. \u5bf9\u4e00\u4e2a\u5757\u4e2d\u7684\u67d0\u4e2a\u540d\u79f0\u7684\u4efb\u4f55\u8d4b\u503c\u90fd\u4f1a\u5bfc\u81f4Python\u5c06\u5bf9\u8be5\u540d\u79f0\u7684\u5168\u90e8\u5f15\u7528\u5f53\u505a\u5c40\u90e8\u53d8\u91cf, \u751a\u81f3\u662f\u8d4b\u503c\u524d\u7684\u5904\u7406. \u5982\u679c\u78b0\u5230global\u58f0\u660e, \u8be5\u540d\u79f0\u5c31\u4f1a\u88ab\u89c6\u4f5c\u5168\u5c40\u53d8\u91cf.\n\n\n\u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u7684\u4f8b\u5b50:\n\n.. code-block:: python\n\n    def get_adder(summand1):\n        \"\"\"Returns a function that adds numbers to a given number.\"\"\"\n        def adder(summand2):\n            return summand1 + summand2\n\n        return adder\n\n(\u8bd1\u8005\u6ce8: \u8fd9\u4e2a\u4f8b\u5b50\u6709\u70b9\u8be1\u5f02, \u4f60\u5e94\u8be5\u8fd9\u6837\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570: ``sum = get_adder(summand1)(summand2)`` )\n\n\n\n\u4f18\u70b9:\n    \u901a\u5e38\u53ef\u4ee5\u5e26\u6765\u66f4\u52a0\u6e05\u6670, \u4f18\u96c5\u7684\u4ee3\u7801. \u5c24\u5176\u4f1a\u8ba9\u6709\u7ecf\u9a8c\u7684Lisp\u548cScheme(\u8fd8\u6709Haskell, ML\u7b49)\u7a0b\u5e8f\u5458\u611f\u5230\u6b23\u6170.\n\n\n\u7f3a\u70b9:\n    \u53ef\u80fd\u5bfc\u81f4\u8ba9\u4eba\u8ff7\u60d1\u7684bug. \u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f9d\u636e \nPEP-0227 \nhttp://www.python.org/dev/peps/pep-0227/\n_ \u7684\u4f8b\u5b50:\n\n\n.. code-block:: python\n\n    i = 4\n    def foo(x):\n        def bar():\n            print i,\n        # ...\n        # A bunch of code here\n        # ...\n        for i in x:  # Ah, i *is* local to Foo, so this is what Bar sees\n            print i,\n        bar()\n\n\u56e0\u6b64 ``foo([1, 2, 3])`` \u4f1a\u6253\u5370 ``1 2 3 3`` , \u4e0d\u662f ``1 2 3 4`` .\n\n(\u8bd1\u8005\u6ce8: x\u662f\u4e00\u4e2a\u5217\u8868, for\u5faa\u73af\u5176\u5b9e\u662f\u5c06x\u4e2d\u7684\u503c\u4f9d\u6b21\u8d4b\u7ed9i.\u8fd9\u6837\u5bf9i\u7684\u8d4b\u503c\u5c31\u9690\u5f0f\u7684\u53d1\u751f\u4e86, \u6574\u4e2afoo\u51fd\u6570\u4f53\u4e2d\u7684i\u90fd\u4f1a\u88ab\u5f53\u505a\u5c40\u90e8\u53d8\u91cf, \u5305\u62ecbar()\u4e2d\u7684\u90a3\u4e2a. \u8fd9\u4e00\u70b9\u4e0eC++\u4e4b\u7c7b\u7684\u9759\u6001\u8bed\u8a00\u8fd8\u662f\u6709\u5f88\u5927\u5dee\u522b\u7684.)\n\n\n\n\u7ed3\u8bba:\n    \u9f13\u52b1\u4f7f\u7528.\n\n\n\u51fd\u6570\u4e0e\u65b9\u6cd5\u88c5\u9970\u5668\n\n\n.. tip::\n    \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668\n\n\n\u5b9a\u4e49:\n    \n\u7528\u4e8e\u51fd\u6570\u53ca\u65b9\u6cd5\u7684\u88c5\u9970\u5668 \nhttps://docs.python.org/release/2.4.3/whatsnew/node6.html\n_ (\u4e5f\u5c31\u662f@\u6807\u8bb0). \u6700\u5e38\u89c1\u7684\u88c5\u9970\u5668\u662f@classmethod \u548c@staticmethod, \u7528\u4e8e\u5c06\u5e38\u89c4\u51fd\u6570\u8f6c\u6362\u6210\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5. \u4e0d\u8fc7, \u88c5\u9970\u5668\u8bed\u6cd5\u4e5f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u88c5\u9970\u5668. \u7279\u522b\u5730, \u5bf9\u4e8e\u67d0\u4e2a\u51fd\u6570 \nmy_decorator\n , \u4e0b\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u662f\u7b49\u6548\u7684:\n\n\n.. code-block:: python\n\n     class C(object):\n        @my_decorator\n        def method(self):\n            # method body ...\n\n.. code-block:: python\n\n    class C(object):\n        def method(self):\n            # method body ...\n        method = my_decorator(method)\n\n\n\n\u4f18\u70b9:\n    \u4f18\u96c5\u7684\u5728\u51fd\u6570\u4e0a\u6307\u5b9a\u4e00\u4e9b\u8f6c\u6362. \u8be5\u8f6c\u6362\u53ef\u80fd\u51cf\u5c11\u4e00\u4e9b\u91cd\u590d\u4ee3\u7801, \u4fdd\u6301\u5df2\u6709\u51fd\u6570\u4e0d\u53d8(enforce invariants), \u7b49.\n\n\n\u7f3a\u70b9:\n    \u88c5\u9970\u5668\u53ef\u4ee5\u5728\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u4e0a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c, \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8ba9\u4eba\u60ca\u5f02\u7684\u9690\u85cf\u884c\u4e3a. \u800c\u4e14, \u88c5\u9970\u5668\u5728\u5bfc\u5165\u65f6\u6267\u884c. \u4ece\u88c5\u9970\u5668\u4ee3\u7801\u7684\u5931\u8d25\u4e2d\u6062\u590d\u66f4\u52a0\u4e0d\u53ef\u80fd.\n\n\n\u7ed3\u8bba:\n    \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668. \u88c5\u9970\u5668\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u4e00\u6837\u7684\u5bfc\u5165\u548c\u547d\u540d\u89c4\u5219. \u88c5\u9970\u5668\u7684python\u6587\u6863\u5e94\u8be5\u6e05\u6670\u7684\u8bf4\u660e\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668. \u8bf7\u4e3a\u88c5\u9970\u5668\u7f16\u5199\u5355\u5143\u6d4b\u8bd5.\n\n\n\u907f\u514d\u88c5\u9970\u5668\u81ea\u8eab\u5bf9\u5916\u754c\u7684\u4f9d\u8d56(\u5373\u4e0d\u8981\u4f9d\u8d56\u4e8e\u6587\u4ef6, socket, \u6570\u636e\u5e93\u8fde\u63a5\u7b49), \u56e0\u4e3a\u88c5\u9970\u5668\u8fd0\u884c\u65f6\u8fd9\u4e9b\u8d44\u6e90\u53ef\u80fd\u4e0d\u53ef\u7528(\u7531 ``pydoc`` \u6216\u5176\u5b83\u5de5\u5177\u5bfc\u5165). \u5e94\u8be5\u4fdd\u8bc1\u4e00\u4e2a\u7528\u6709\u6548\u53c2\u6570\u8c03\u7528\u7684\u88c5\u9970\u5668\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u662f\u6210\u529f\u7684.\n\n\u88c5\u9970\u5668\u662f\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\"\u9876\u7ea7\u4ee3\u7801\". \u53c2\u8003\u540e\u9762\u5173\u4e8e :ref:`Main \nmain\n` \u7684\u8bdd\u9898.\n\n\n\n\u7ebf\u7a0b\n\n\n.. tip::\n    \u4e0d\u8981\u4f9d\u8d56\u5185\u5efa\u7c7b\u578b\u7684\u539f\u5b50\u6027.\n\n\n\u867d\u7136Python\u7684\u5185\u5efa\u7c7b\u578b\u4f8b\u5982\u5b57\u5178\u770b\u4e0a\u53bb\u62e5\u6709\u539f\u5b50\u64cd\u4f5c, \u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u5f62\u4e0b\u5b83\u4eec\u4ecd\u7136\u4e0d\u662f\u539f\u5b50\u7684(\u5373: \u5982\u679c\nhash\n\u6216\neq\n\u88ab\u5b9e\u73b0\u4e3aPython\u65b9\u6cd5)\u4e14\u5b83\u4eec\u7684\u539f\u5b50\u6027\u662f\u9760\u4e0d\u4f4f\u7684. \u4f60\u4e5f\u4e0d\u80fd\u6307\u671b\u539f\u5b50\u53d8\u91cf\u8d4b\u503c(\u56e0\u4e3a\u8fd9\u4e2a\u53cd\u8fc7\u6765\u4f9d\u8d56\u5b57\u5178).\n\n\n\u4f18\u5148\u4f7f\u7528Queue\u6a21\u5757\u7684 \nQueue\n \u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u7ebf\u7a0b\u95f4\u7684\u6570\u636e\u901a\u4fe1\u65b9\u5f0f. \u53e6\u5916, \u4f7f\u7528threading\u6a21\u5757\u53ca\u5176\u9501\u539f\u8bed(locking primitives). \u4e86\u89e3\u6761\u4ef6\u53d8\u91cf\u7684\u5408\u9002\u4f7f\u7528\u65b9\u5f0f, \u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 \nthreading.Condition\n \u6765\u53d6\u4ee3\u4f4e\u7ea7\u522b\u7684\u9501\u4e86.\n\n\n\u5a01\u529b\u8fc7\u5927\u7684\u7279\u6027\n\n\n.. tip::\n    \u907f\u514d\u4f7f\u7528\u8fd9\u4e9b\u7279\u6027\n\n\n\u5b9a\u4e49:\n    Python\u662f\u4e00\u79cd\u5f02\u5e38\u7075\u6d3b\u7684\u8bed\u8a00, \u5b83\u4e3a\u4f60\u63d0\u4f9b\u4e86\u5f88\u591a\u82b1\u54e8\u7684\u7279\u6027, \u8bf8\u5982\u5143\u7c7b(metaclasses), \u5b57\u8282\u7801\u8bbf\u95ee, \u4efb\u610f\u7f16\u8bd1(on-the-fly compilation), \u52a8\u6001\u7ee7\u627f, \u5bf9\u8c61\u7236\u7c7b\u91cd\u5b9a\u4e49(object reparenting), \u5bfc\u5165\u9ed1\u5ba2(import hacks), \u53cd\u5c04, \u7cfb\u7edf\u5185\u4fee\u6539(modification of system internals), \u7b49\u7b49.\n\n\n\u4f18\u70b9:\n    \u5f3a\u5927\u7684\u8bed\u8a00\u7279\u6027, \u80fd\u8ba9\u4f60\u7684\u4ee3\u7801\u66f4\u7d27\u51d1.\n\n\n\u7f3a\u70b9:\n    \u4f7f\u7528\u8fd9\u4e9b\u5f88\"\u9177\"\u7684\u7279\u6027\u5341\u5206\u8bf1\u4eba, \u4f46\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981. \u4f7f\u7528\u5947\u6280\u6deb\u5de7\u7684\u4ee3\u7801\u5c06\u66f4\u52a0\u96be\u4ee5\u9605\u8bfb\u548c\u8c03\u8bd5. \u5f00\u59cb\u53ef\u80fd\u8fd8\u597d(\u5bf9\u539f\u4f5c\u8005\u800c\u8a00), \u4f46\u5f53\u4f60\u56de\u987e\u4ee3\u7801, \u5b83\u4eec\u53ef\u80fd\u4f1a\u6bd4\u90a3\u4e9b\u7a0d\u957f\u4e00\u70b9\u4f46\u662f\u5f88\u76f4\u63a5\u7684\u4ee3\u7801\u66f4\u52a0\u96be\u4ee5\u7406\u89e3.\n\n\n\u7ed3\u8bba:\n    \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u907f\u514d\u8fd9\u4e9b\u7279\u6027.", 
            "title": "Python \u98ce\u683c\u6307\u5357"
        }, 
        {
            "location": "/python_rules/#python", 
            "text": "", 
            "title": "Python\u8bed\u8a00\u89c4\u8303"
        }, 
        {
            "location": "/python_rules/#lint", 
            "text": ".. tip::\n    \u5bf9\u4f60\u7684\u4ee3\u7801\u8fd0\u884cpylint  \u5b9a\u4e49:\n    pylint\u662f\u4e00\u4e2a\u5728Python\u6e90\u4ee3\u7801\u4e2d\u67e5\u627ebug\u7684\u5de5\u5177. \u5bf9\u4e8eC\u548cC++\u8fd9\u6837\u7684\u4e0d\u90a3\u4e48\u52a8\u6001\u7684(\u8bd1\u8005\u6ce8: \u539f\u6587\u662fless dynamic)\u8bed\u8a00, \u8fd9\u4e9bbug\u901a\u5e38\u7531\u7f16\u8bd1\u5668\u6765\u6355\u83b7. \u7531\u4e8ePython\u7684\u52a8\u6001\u7279\u6027, \u6709\u4e9b\u8b66\u544a\u53ef\u80fd\u4e0d\u5bf9. \u4e0d\u8fc7\u4f2a\u544a\u8b66\u5e94\u8be5\u5f88\u5c11.  \u4f18\u70b9:\n    \u53ef\u4ee5\u6355\u83b7\u5bb9\u6613\u5ffd\u89c6\u7684\u9519\u8bef, \u4f8b\u5982\u8f93\u5165\u9519\u8bef, \u4f7f\u7528\u672a\u8d4b\u503c\u7684\u53d8\u91cf\u7b49.  \u7f3a\u70b9:\n    pylint\u4e0d\u5b8c\u7f8e. \u8981\u5229\u7528\u5176\u4f18\u52bf, \u6211\u4eec\u6709\u65f6\u4faf\u9700\u8981: a) \u56f4\u7ed5\u7740\u5b83\u6765\u5199\u4ee3\u7801 b) \u6291\u5236\u5176\u544a\u8b66 c) \u6539\u8fdb\u5b83, \u6216\u8005d) \u5ffd\u7565\u5b83.  \u7ed3\u8bba:\n    \u786e\u4fdd\u5bf9\u4f60\u7684\u4ee3\u7801\u8fd0\u884cpylint.\u6291\u5236\u4e0d\u51c6\u786e\u7684\u8b66\u544a,\u4ee5\u4fbf\u80fd\u591f\u5c06\u5176\u4ed6\u8b66\u544a\u66b4\u9732\u51fa\u6765\u3002  \u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u884c\u6ce8\u91ca\u6765\u6291\u5236\u544a\u8b66. \u4f8b\u5982:\n\n.. code-block:: python\n\n    dict = 'something awful'  # Bad Idea... pylint: disable=redefined-builtin\n\npylint\u8b66\u544a\u662f\u4ee5\u4e00\u4e2a\u6570\u5b57\u7f16\u53f7(\u5982 ``C0112`` )\u548c\u4e00\u4e2a\u7b26\u53f7\u540d(\u5982 ``empty-docstring`` )\u6765\u6807\u8bc6\u7684. \u5728\u7f16\u5199\u65b0\u4ee3\u7801\u6216\u66f4\u65b0\u5df2\u6709\u4ee3\u7801\u65f6\u5bf9\u544a\u8b66\u8fdb\u884c\u533b\u6cbb, \u63a8\u8350\u4f7f\u7528\u7b26\u53f7\u540d\u6765\u6807\u8bc6.\n\n\u5982\u679c\u8b66\u544a\u7684\u7b26\u53f7\u540d\u4e0d\u591f\u89c1\u540d\u77e5\u610f\uff0c\u90a3\u4e48\u8bf7\u5bf9\u5176\u589e\u52a0\u4e00\u4e2a\u8be6\u7ec6\u89e3\u91ca\u3002\n\n\u91c7\u7528\u8fd9\u79cd\u6291\u5236\u65b9\u5f0f\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u67e5\u627e\u6291\u5236\u5e76\u56de\u987e\u5b83\u4eec.\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 ``pylint --list-msgs`` \u6765\u83b7\u53d6pylint\u544a\u8b66\u5217\u8868. \u4f60\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 ``pylint --help-msg=C6409`` , \u4ee5\u83b7\u53d6\u5173\u4e8e\u7279\u5b9a\u6d88\u606f\u7684\u66f4\u591a\u4fe1\u606f.\n\n\u76f8\u6bd4\u8f83\u4e8e\u4e4b\u524d\u4f7f\u7528\u7684 ``pylint: disable-msg`` , \u672c\u6587\u63a8\u8350\u4f7f\u7528 ``pylint: disable`` .\n\n\u8981\u6291\u5236\"\u53c2\u6570\u672a\u4f7f\u7528\"\u544a\u8b66, \u4f60\u53ef\u4ee5\u7528\"_\"\u4f5c\u4e3a\u53c2\u6570\u6807\u8bc6\u7b26, \u6216\u8005\u5728\u53c2\u6570\u540d\u524d\u52a0\"unused\\_\". \u9047\u5230\u4e0d\u80fd\u6539\u53d8\u53c2\u6570\u540d\u7684\u60c5\u51b5, \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u51fd\u6570\u5f00\u5934\"\u63d0\u5230\"\u5b83\u4eec\u6765\u6d88\u9664\u544a\u8b66. \u4f8b\u5982:\n\n.. code-block:: python\n\n    def foo(a, unused_b, unused_c, d=None, e=None):\n        _ = d, e\n        return a", 
            "title": "Lint"
        }, 
        {
            "location": "/python_rules/#_1", 
            "text": ".. tip::\n    \u4ec5\u5bf9\u5305\u548c\u6a21\u5757\u4f7f\u7528\u5bfc\u5165  \u5b9a\u4e49:\n    \u6a21\u5757\u95f4\u5171\u4eab\u4ee3\u7801\u7684\u91cd\u7528\u673a\u5236.  \u4f18\u70b9:\n    \u547d\u540d\u7a7a\u95f4\u7ba1\u7406\u7ea6\u5b9a\u5341\u5206\u7b80\u5355. \u6bcf\u4e2a\u6807\u8bc6\u7b26\u7684\u6e90\u90fd\u7528\u4e00\u79cd\u4e00\u81f4\u7684\u65b9\u5f0f\u6307\u793a. x.Obj\u8868\u793aObj\u5bf9\u8c61\u5b9a\u4e49\u5728\u6a21\u5757x\u4e2d.  \u7f3a\u70b9:\n    \u6a21\u5757\u540d\u4ecd\u53ef\u80fd\u51b2\u7a81. \u6709\u4e9b\u6a21\u5757\u540d\u592a\u957f, \u4e0d\u592a\u65b9\u4fbf.  \u7ed3\u8bba:\n    \u4f7f\u7528  import x  \u6765\u5bfc\u5165\u5305\u548c\u6a21\u5757.  \u4f7f\u7528 ``from x import y`` , \u5176\u4e2dx\u662f\u5305\u524d\u7f00, y\u662f\u4e0d\u5e26\u524d\u7f00\u7684\u6a21\u5757\u540d.\n\n\u4f7f\u7528 ``from x import y as z``, \u5982\u679c\u4e24\u4e2a\u8981\u5bfc\u5165\u7684\u6a21\u5757\u90fd\u53eb\u505ay\u6216\u8005y\u592a\u957f\u4e86.\n\n\u4f8b\u5982, \u6a21\u5757 ``sound.effects.echo`` \u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u5bfc\u5165:\n\n.. code-block:: python\n\n    from sound.effects import echo\n    ...\n    echo.EchoFilter(input, output, delay=0.7, atten=4)\n\n\u5bfc\u5165\u65f6\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0. \u5373\u4f7f\u6a21\u5757\u5728\u540c\u4e00\u4e2a\u5305\u4e2d, \u4e5f\u8981\u4f7f\u7528\u5b8c\u6574\u5305\u540d. \u8fd9\u80fd\u5e2e\u52a9\u4f60\u907f\u514d\u65e0\u610f\u95f4\u5bfc\u5165\u4e00\u4e2a\u5305\u4e24\u6b21.", 
            "title": "\u5bfc\u5165"
        }, 
        {
            "location": "/python_rules/#_2", 
            "text": ".. tip::\n    \u4f7f\u7528\u6a21\u5757\u7684\u5168\u8def\u5f84\u540d\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757  \u4f18\u70b9:\n    \u907f\u514d\u6a21\u5757\u540d\u51b2\u7a81. \u67e5\u627e\u5305\u66f4\u5bb9\u6613.  \u7f3a\u70b9:\n    \u90e8\u7f72\u4ee3\u7801\u53d8\u96be, \u56e0\u4e3a\u4f60\u5fc5\u987b\u590d\u5236\u5305\u5c42\u6b21.  \u7ed3\u8bba:\n    \u6240\u6709\u7684\u65b0\u4ee3\u7801\u90fd\u5e94\u8be5\u7528\u5b8c\u6574\u5305\u540d\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757.  \u5e94\u8be5\u50cf\u4e0b\u9762\u8fd9\u6837\u5bfc\u5165:\n\n.. code-block:: python\n\n    # Reference in code with complete name.\n    import sound.effects.echo\n\n    # Reference in code with just module name (preferred).\n    from sound.effects import echo", 
            "title": "\u5305"
        }, 
        {
            "location": "/python_rules/#_3", 
            "text": ".. tip::\n    \u5141\u8bb8\u4f7f\u7528\u5f02\u5e38, \u4f46\u5fc5\u987b\u5c0f\u5fc3  \u5b9a\u4e49:\n    \u5f02\u5e38\u662f\u4e00\u79cd\u8df3\u51fa\u4ee3\u7801\u5757\u7684\u6b63\u5e38\u63a7\u5236\u6d41\u6765\u5904\u7406\u9519\u8bef\u6216\u8005\u5176\u5b83\u5f02\u5e38\u6761\u4ef6\u7684\u65b9\u5f0f.  \u4f18\u70b9:\n    \u6b63\u5e38\u64cd\u4f5c\u4ee3\u7801\u7684\u63a7\u5236\u6d41\u4e0d\u4f1a\u548c\u9519\u8bef\u5904\u7406\u4ee3\u7801\u6df7\u5728\u4e00\u8d77. \u5f53\u67d0\u79cd\u6761\u4ef6\u53d1\u751f\u65f6, \u5b83\u4e5f\u5141\u8bb8\u63a7\u5236\u6d41\u8df3\u8fc7\u591a\u4e2a\u6846\u67b6. \u4f8b\u5982, \u4e00\u6b65\u8df3\u51faN\u4e2a\u5d4c\u5957\u7684\u51fd\u6570, \u800c\u4e0d\u5fc5\u7ee7\u7eed\u6267\u884c\u9519\u8bef\u7684\u4ee3\u7801.  \u7f3a\u70b9:\n    \u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba9\u4eba\u56f0\u60d1\u7684\u63a7\u5236\u6d41. \u8c03\u7528\u5e93\u65f6\u5bb9\u6613\u9519\u8fc7\u9519\u8bef\u60c5\u51b5.  \u7ed3\u8bba:\n    \u5f02\u5e38\u5fc5\u987b\u9075\u5b88\u7279\u5b9a\u6761\u4ef6:  #. \u50cf\u8fd9\u6837\u89e6\u53d1\u5f02\u5e38: ``raise MyException(\"Error message\")`` \u6216\u8005 ``raise MyException`` . \u4e0d\u8981\u4f7f\u7528\u4e24\u4e2a\u53c2\u6570\u7684\u5f62\u5f0f( ``raise MyException, \"Error message\"`` )\u6216\u8005\u8fc7\u65f6\u7684\u5b57\u7b26\u4e32\u5f02\u5e38( ``raise \"Error message\"`` ).\n#. \u6a21\u5757\u6216\u5305\u5e94\u8be5\u5b9a\u4e49\u81ea\u5df1\u7684\u7279\u5b9a\u57df\u7684\u5f02\u5e38\u57fa\u7c7b, \u8fd9\u4e2a\u57fa\u7c7b\u5e94\u8be5\u4ece\u5185\u5efa\u7684Exception\u7c7b\u7ee7\u627f. \u6a21\u5757\u7684\u5f02\u5e38\u57fa\u7c7b\u5e94\u8be5\u53eb\u505a\"Error\".\n\n    .. code-block:: python\n\n        class Error(Exception):\n            pass\n\n#. \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 ``except:`` \u8bed\u53e5\u6765\u6355\u83b7\u6240\u6709\u5f02\u5e38, \u4e5f\u4e0d\u8981\u6355\u83b7 ``Exception`` \u6216\u8005 ``StandardError`` , \u9664\u975e\u4f60\u6253\u7b97\u91cd\u65b0\u89e6\u53d1\u8be5\u5f02\u5e38, \u6216\u8005\u4f60\u5df2\u7ecf\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u6700\u5916\u5c42(\u8bb0\u5f97\u8fd8\u662f\u8981\u6253\u5370\u4e00\u6761\u9519\u8bef\u6d88\u606f). \u5728\u5f02\u5e38\u8fd9\u65b9\u9762, Python\u975e\u5e38\u5bbd\u5bb9, ``except:`` \u771f\u7684\u4f1a\u6355\u83b7\u5305\u62ecPython\u8bed\u6cd5\u9519\u8bef\u5728\u5185\u7684\u4efb\u4f55\u9519\u8bef. \u4f7f\u7528 ``except:`` \u5f88\u5bb9\u6613\u9690\u85cf\u771f\u6b63\u7684bug.\n#. \u5c3d\u91cf\u51cf\u5c11try/except\u5757\u4e2d\u7684\u4ee3\u7801\u91cf. try\u5757\u7684\u4f53\u79ef\u8d8a\u5927, \u671f\u671b\u4e4b\u5916\u7684\u5f02\u5e38\u5c31\u8d8a\u5bb9\u6613\u88ab\u89e6\u53d1. \u8fd9\u79cd\u60c5\u51b5\u4e0b, try/except\u5757\u5c06\u9690\u85cf\u771f\u6b63\u7684\u9519\u8bef.\n#. \u4f7f\u7528finally\u5b50\u53e5\u6765\u6267\u884c\u90a3\u4e9b\u65e0\u8bbatry\u5757\u4e2d\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u5e94\u8be5\u88ab\u6267\u884c\u7684\u4ee3\u7801. \u8fd9\u5bf9\u4e8e\u6e05\u7406\u8d44\u6e90\u5e38\u5e38\u5f88\u6709\u7528, \u4f8b\u5982\u5173\u95ed\u6587\u4ef6.\n#. \u5f53\u6355\u83b7\u5f02\u5e38\u65f6, \u4f7f\u7528 ``as`` \u800c\u4e0d\u8981\u7528\u9017\u53f7. \u4f8b\u5982\n\n    .. code-block:: python\n\n        try:\n            raise Error\n        except Error as error:\n            pass", 
            "title": "\u5f02\u5e38"
        }, 
        {
            "location": "/python_rules/#_4", 
            "text": ".. tip::\n    \u907f\u514d\u5168\u5c40\u53d8\u91cf  \u5b9a\u4e49:\n    \u5b9a\u4e49\u5728\u6a21\u5757\u7ea7\u7684\u53d8\u91cf.  \u4f18\u70b9:\n    \u5076\u5c14\u6709\u7528.  \u7f3a\u70b9:\n    \u5bfc\u5165\u65f6\u53ef\u80fd\u6539\u53d8\u6a21\u5757\u884c\u4e3a, \u56e0\u4e3a\u5bfc\u5165\u6a21\u5757\u65f6\u4f1a\u5bf9\u6a21\u5757\u7ea7\u53d8\u91cf\u8d4b\u503c.  \u7ed3\u8bba:\n    \u907f\u514d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf, \u7528\u7c7b\u53d8\u91cf\u6765\u4ee3\u66ff. \u4f46\u4e5f\u6709\u4e00\u4e9b\u4f8b\u5916:  #. \u811a\u672c\u7684\u9ed8\u8ba4\u9009\u9879.\n#. \u6a21\u5757\u7ea7\u5e38\u91cf. \u4f8b\u5982:\u3000PI = 3.14159. \u5e38\u91cf\u5e94\u8be5\u5168\u5927\u5199, \u7528\u4e0b\u5212\u7ebf\u8fde\u63a5.\n#. \u6709\u65f6\u5019\u7528\u5168\u5c40\u53d8\u91cf\u6765\u7f13\u5b58\u503c\u6216\u8005\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u5f88\u6709\u7528.\n#. \u5982\u679c\u9700\u8981, \u5168\u5c40\u53d8\u91cf\u5e94\u8be5\u4ec5\u5728\u6a21\u5757\u5185\u90e8\u53ef\u7528, \u5e76\u901a\u8fc7\u6a21\u5757\u7ea7\u7684\u516c\u5171\u51fd\u6570\u6765\u8bbf\u95ee.", 
            "title": "\u5168\u5c40\u53d8\u91cf"
        }, 
        {
            "location": "/python_rules/#_5", 
            "text": ".. tip::\n    \u9f13\u52b1\u4f7f\u7528\u5d4c\u5957/\u672c\u5730/\u5185\u90e8\u7c7b\u6216\u51fd\u6570  \u5b9a\u4e49:\n    \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5, \u51fd\u6570\u6216\u8005\u7c7b\u4e2d. \u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u4e2d. \u5c01\u95ed\u533a\u95f4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5bf9\u5d4c\u5957\u51fd\u6570\u662f\u53ea\u8bfb\u7684.  \u4f18\u70b9:\n    \u5141\u8bb8\u5b9a\u4e49\u4ec5\u7528\u4e8e\u6709\u6548\u8303\u56f4\u7684\u5de5\u5177\u7c7b\u548c\u51fd\u6570.  \u7f3a\u70b9:\n    \u5d4c\u5957\u7c7b\u6216\u5c40\u90e8\u7c7b\u7684\u5b9e\u4f8b\u4e0d\u80fd\u5e8f\u5217\u5316(pickled).  \u7ed3\u8bba:\n    \u63a8\u8350\u4f7f\u7528.", 
            "title": "\u5d4c\u5957/\u5c40\u90e8/\u5185\u90e8\u7c7b\u6216\u51fd\u6570"
        }, 
        {
            "location": "/python_rules/#list-comprehensions", 
            "text": ".. tip::\n    \u53ef\u4ee5\u5728\u7b80\u5355\u60c5\u51b5\u4e0b\u4f7f\u7528  \u5b9a\u4e49:\n    \u5217\u8868\u63a8\u5bfc(list comprehensions)\u4e0e\u751f\u6210\u5668\u8868\u8fbe\u5f0f(generator expression)\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5217\u8868\u548c\u8fed\u4ee3\u5668, \u800c\u4e0d\u5fc5\u501f\u52a9map(), filter(), \u6216\u8005lambda.  \u4f18\u70b9:\n    \u7b80\u5355\u7684\u5217\u8868\u63a8\u5bfc\u53ef\u4ee5\u6bd4\u5176\u5b83\u7684\u5217\u8868\u521b\u5efa\u65b9\u6cd5\u66f4\u52a0\u6e05\u6670\u7b80\u5355. \u751f\u6210\u5668\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5341\u5206\u9ad8\u6548, \u56e0\u4e3a\u5b83\u4eec\u907f\u514d\u4e86\u521b\u5efa\u6574\u4e2a\u5217\u8868.  \u7f3a\u70b9:\n    \u590d\u6742\u7684\u5217\u8868\u63a8\u5bfc\u6216\u8005\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u53ef\u80fd\u96be\u4ee5\u9605\u8bfb.  \u7ed3\u8bba:\n    \u9002\u7528\u4e8e\u7b80\u5355\u60c5\u51b5. \u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u5355\u72ec\u7f6e\u4e8e\u4e00\u884c: \u6620\u5c04\u8868\u8fbe\u5f0f, for\u8bed\u53e5, \u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f. \u7981\u6b62\u591a\u91cdfor\u8bed\u53e5\u6216\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f. \u590d\u6742\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f7f\u7528\u5faa\u73af.  .. code-block:: python\n\n    Yes:\n      result = []\n      for x in range(10):\n          for y in range(5):\n              if x * y   10:\n                  result.append((x, y))\n\n      for x in xrange(5):\n          for y in xrange(5):\n              if x != y:\n                  for z in xrange(5):\n                      if y != z:\n                          yield (x, y, z)\n\n      return ((x, complicated_transform(x))\n              for x in long_generator_function(parameter)\n              if x is not None)\n\n      squares = [x * x for x in range(10)]\n\n      eat(jelly_bean for jelly_bean in jelly_beans\n          if jelly_bean.color == 'black')\n\n.. code-block:: python\n\n    No:\n      result = [(x, y) for x in range(10) for y in range(5) if x * y   10]\n\n      return ((x, y, z)\n              for x in xrange(5)\n              for y in xrange(5)\n              if x != y\n              for z in xrange(5)\n              if y != z)", 
            "title": "\u5217\u8868\u63a8\u5bfc(List Comprehensions)"
        }, 
        {
            "location": "/python_rules/#_6", 
            "text": ".. tip::\n    \u5982\u679c\u7c7b\u578b\u652f\u6301, \u5c31\u4f7f\u7528\u9ed8\u8ba4\u8fed\u4ee3\u5668\u548c\u64cd\u4f5c\u7b26. \u6bd4\u5982\u5217\u8868, \u5b57\u5178\u53ca\u6587\u4ef6\u7b49.  \u5b9a\u4e49:\n    \u5bb9\u5668\u7c7b\u578b, \u50cf\u5b57\u5178\u548c\u5217\u8868, \u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u8fed\u4ee3\u5668\u548c\u5173\u7cfb\u6d4b\u8bd5\u64cd\u4f5c\u7b26(in\u548cnot in)  \u4f18\u70b9:\n    \u9ed8\u8ba4\u64cd\u4f5c\u7b26\u548c\u8fed\u4ee3\u5668\u7b80\u5355\u9ad8\u6548, \u5b83\u4eec\u76f4\u63a5\u8868\u8fbe\u4e86\u64cd\u4f5c, \u6ca1\u6709\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528. \u4f7f\u7528\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u7684\u51fd\u6570\u662f\u901a\u7528\u7684. \u5b83\u53ef\u4ee5\u7528\u4e8e\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u4efb\u4f55\u7c7b\u578b.  \u7f3a\u70b9:\n    \u4f60\u6ca1\u6cd5\u901a\u8fc7\u9605\u8bfb\u65b9\u6cd5\u540d\u6765\u533a\u5206\u5bf9\u8c61\u7684\u7c7b\u578b(\u4f8b\u5982, has_key()\u610f\u5473\u7740\u5b57\u5178). \u4e0d\u8fc7\u8fd9\u4e5f\u662f\u4f18\u70b9.  \u7ed3\u8bba:\n    \u5982\u679c\u7c7b\u578b\u652f\u6301, \u5c31\u4f7f\u7528\u9ed8\u8ba4\u8fed\u4ee3\u5668\u548c\u64cd\u4f5c\u7b26, \u4f8b\u5982\u5217\u8868, \u5b57\u5178\u548c\u6587\u4ef6. \u5185\u5efa\u7c7b\u578b\u4e5f\u5b9a\u4e49\u4e86\u8fed\u4ee3\u5668\u65b9\u6cd5. \u4f18\u5148\u8003\u8651\u8fd9\u4e9b\u65b9\u6cd5, \u800c\u4e0d\u662f\u90a3\u4e9b\u8fd4\u56de\u5217\u8868\u7684\u65b9\u6cd5. \u5f53\u7136\uff0c\u8fd9\u6837\u904d\u5386\u5bb9\u5668\u65f6\uff0c\u4f60\u5c06\u4e0d\u80fd\u4fee\u6539\u5bb9\u5668.  .. code-block:: python\n\n    Yes:  for key in adict: ...\n          if key not in adict: ...\n          if obj in alist: ...\n          for line in afile: ...\n          for k, v in dict.iteritems(): ...\n\n.. code-block:: python\n\n    No:   for key in adict.keys(): ...\n          if not adict.has_key(key): ...\n          for line in afile.readlines(): ...", 
            "title": "\u9ed8\u8ba4\u8fed\u4ee3\u5668\u548c\u64cd\u4f5c\u7b26"
        }, 
        {
            "location": "/python_rules/#_7", 
            "text": ".. tip::\n    \u6309\u9700\u4f7f\u7528\u751f\u6210\u5668.  \u5b9a\u4e49:\n    \u6240\u8c13\u751f\u6210\u5668\u51fd\u6570, \u5c31\u662f\u6bcf\u5f53\u5b83\u6267\u884c\u4e00\u6b21\u751f\u6210(yield)\u8bed\u53e5, \u5b83\u5c31\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668, \u8fd9\u4e2a\u8fed\u4ee3\u5668\u751f\u6210\u4e00\u4e2a\u503c. \u751f\u6210\u503c\u540e, \u751f\u6210\u5668\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u5c06\u88ab\u6302\u8d77, \u76f4\u5230\u4e0b\u4e00\u6b21\u751f\u6210.  \u4f18\u70b9:\n    \u7b80\u5316\u4ee3\u7801, \u56e0\u4e3a\u6bcf\u6b21\u8c03\u7528\u65f6, \u5c40\u90e8\u53d8\u91cf\u548c\u63a7\u5236\u6d41\u7684\u72b6\u6001\u90fd\u4f1a\u88ab\u4fdd\u5b58. \u6bd4\u8d77\u4e00\u6b21\u521b\u5efa\u4e00\u7cfb\u5217\u503c\u7684\u51fd\u6570, \u751f\u6210\u5668\u4f7f\u7528\u7684\u5185\u5b58\u66f4\u5c11.  \u7f3a\u70b9:\n    \u6ca1\u6709.  \u7ed3\u8bba:\n    \u9f13\u52b1\u4f7f\u7528. \u6ce8\u610f\u5728\u751f\u6210\u5668\u51fd\u6570\u7684\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528\"Yields:\"\u800c\u4e0d\u662f\"Returns:\".  (\u8bd1\u8005\u6ce8: \u53c2\u770b :ref:`\u6ce8\u91ca comments ` )", 
            "title": "\u751f\u6210\u5668"
        }, 
        {
            "location": "/python_rules/#lambda", 
            "text": ".. tip::\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570  \u5b9a\u4e49:\n    \u4e0e\u8bed\u53e5\u76f8\u53cd, lambda\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u533f\u540d\u51fd\u6570. \u5e38\u7528\u4e8e\u4e3a  map()  \u548c  filter()  \u4e4b\u7c7b\u7684\u9ad8\u9636\u51fd\u6570\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\u6216\u8005\u64cd\u4f5c\u7b26.  \u4f18\u70b9:\n    \u65b9\u4fbf.  \u7f3a\u70b9:\n    \u6bd4\u672c\u5730\u51fd\u6570\u66f4\u96be\u9605\u8bfb\u548c\u8c03\u8bd5. \u6ca1\u6709\u51fd\u6570\u540d\u610f\u5473\u7740\u5806\u6808\u8ddf\u8e2a\u66f4\u96be\u7406\u89e3. \u7531\u4e8elambda\u51fd\u6570\u901a\u5e38\u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f, \u56e0\u6b64\u5176\u8868\u8fbe\u80fd\u529b\u6709\u9650.  \u7ed3\u8bba:\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570. \u5982\u679c\u4ee3\u7801\u8d85\u8fc760-80\u4e2a\u5b57\u7b26, \u6700\u597d\u8fd8\u662f\u5b9a\u4e49\u6210\u5e38\u89c4(\u5d4c\u5957)\u51fd\u6570.  \u5bf9\u4e8e\u5e38\u89c1\u7684\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff0c\u4f7f\u7528 ``operator`` \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u4ee5\u4ee3\u66fflambda\u51fd\u6570. \u4f8b\u5982, \u63a8\u8350\u4f7f\u7528 ``operator.mul`` , \u800c\u4e0d\u662f ``lambda x, y: x * y`` .", 
            "title": "Lambda\u51fd\u6570"
        }, 
        {
            "location": "/python_rules/#_8", 
            "text": ".. tip::\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570  \u5b9a\u4e49:\n    \u6761\u4ef6\u8868\u8fbe\u5f0f\u662f\u5bf9\u4e8eif\u8bed\u53e5\u7684\u4e00\u79cd\u66f4\u4e3a\u7b80\u77ed\u7684\u53e5\u6cd5\u89c4\u5219. \u4f8b\u5982:  x = 1 if cond else 2  .  \u4f18\u70b9:\n    \u6bd4if\u8bed\u53e5\u66f4\u52a0\u7b80\u77ed\u548c\u65b9\u4fbf.  \u7f3a\u70b9:\n    \u6bd4if\u8bed\u53e5\u96be\u4e8e\u9605\u8bfb. \u5982\u679c\u8868\u8fbe\u5f0f\u5f88\u957f\uff0c \u96be\u4e8e\u5b9a\u4f4d\u6761\u4ef6.  \u7ed3\u8bba:\n    \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570. \u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528\u5b8c\u6574\u7684if\u8bed\u53e5.", 
            "title": "\u6761\u4ef6\u8868\u8fbe\u5f0f"
        }, 
        {
            "location": "/python_rules/#_9", 
            "text": ".. tip::\n    \u9002\u7528\u4e8e\u5927\u90e8\u5206\u60c5\u51b5.  \u5b9a\u4e49:\n    \u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u6307\u5b9a\u53d8\u91cf\u7684\u503c, \u4f8b\u5982,  def foo(a, b = 0):  . \u5982\u679c\u8c03\u7528foo\u65f6\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570, \u5219b\u88ab\u8bbe\u4e3a0. \u5982\u679c\u5e26\u4e24\u4e2a\u53c2\u6570, \u5219b\u7684\u503c\u7b49\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570.  \u4f18\u70b9:\n    \u4f60\u7ecf\u5e38\u4f1a\u78b0\u5230\u4e00\u4e9b\u4f7f\u7528\u5927\u91cf\u9ed8\u8ba4\u503c\u7684\u51fd\u6570, \u4f46\u5076\u5c14(\u6bd4\u8f83\u5c11\u89c1)\u4f60\u60f3\u8981\u8986\u76d6\u8fd9\u4e9b\u9ed8\u8ba4\u503c. \u9ed8\u8ba4\u53c2\u6570\u503c\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u8fd9\u4ef6\u4e8b, \u4f60\u4e0d\u9700\u8981\u4e3a\u8fd9\u4e9b\u7f55\u89c1\u7684\u4f8b\u5916\u5b9a\u4e49\u5927\u91cf\u51fd\u6570. \u540c\u65f6, Python\u4e5f\u4e0d\u652f\u6301\u91cd\u8f7d\u65b9\u6cd5\u548c\u51fd\u6570, \u9ed8\u8ba4\u53c2\u6570\u662f\u4e00\u79cd\"\u4eff\u9020\"\u91cd\u8f7d\u884c\u4e3a\u7684\u7b80\u5355\u65b9\u5f0f.  \u7f3a\u70b9:\n    \u9ed8\u8ba4\u53c2\u6570\u53ea\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u6c42\u503c\u4e00\u6b21. \u5982\u679c\u53c2\u6570\u662f\u5217\u8868\u6216\u5b57\u5178\u4e4b\u7c7b\u7684\u53ef\u53d8\u7c7b\u578b, \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898. \u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u5bf9\u8c61(\u4f8b\u5982\u5411\u5217\u8868\u8ffd\u52a0\u9879), \u9ed8\u8ba4\u503c\u5c31\u88ab\u4fee\u6539\u4e86.  \u7ed3\u8bba:\n    \u9f13\u52b1\u4f7f\u7528, \u4e0d\u8fc7\u6709\u5982\u4e0b\u6ce8\u610f\u4e8b\u9879:  \u4e0d\u8981\u5728\u51fd\u6570\u6216\u65b9\u6cd5\u5b9a\u4e49\u4e2d\u4f7f\u7528\u53ef\u53d8\u5bf9\u8c61\u4f5c\u4e3a\u9ed8\u8ba4\u503c.\n\n.. code-block:: python\n\n    Yes: def foo(a, b=None):\n             if b is None:\n                 b = []\n\n.. code-block:: python\n\n    No:  def foo(a, b=[]):\n             ...\n    No:  def foo(a, b=time.time()):  # The time the module was loaded???\n             ...\n    No:  def foo(a, b=FLAGS.my_thing):  # sys.argv has not yet been parsed...\n             ...", 
            "title": "\u9ed8\u8ba4\u53c2\u6570\u503c"
        }, 
        {
            "location": "/python_rules/#properties", 
            "text": ".. tip::\n    \u8bbf\u95ee\u548c\u8bbe\u7f6e\u6570\u636e\u6210\u5458\u65f6, \u4f60\u901a\u5e38\u4f1a\u4f7f\u7528\u7b80\u5355, \u8f7b\u91cf\u7ea7\u7684\u8bbf\u95ee\u548c\u8bbe\u7f6e\u51fd\u6570. \u5efa\u8bae\u7528\u5c5e\u6027\uff08properties\uff09\u6765\u4ee3\u66ff\u5b83\u4eec.  \u5b9a\u4e49:\n    \u4e00\u79cd\u7528\u4e8e\u5305\u88c5\u65b9\u6cd5\u8c03\u7528\u7684\u65b9\u5f0f. \u5f53\u8fd0\u7b97\u91cf\u4e0d\u5927, \u5b83\u662f\u83b7\u53d6\u548c\u8bbe\u7f6e\u5c5e\u6027(attribute)\u7684\u6807\u51c6\u65b9\u5f0f.  \u4f18\u70b9:\n    \u901a\u8fc7\u6d88\u9664\u7b80\u5355\u7684\u5c5e\u6027(attribute)\u8bbf\u95ee\u65f6\u663e\u5f0f\u7684get\u548cset\u65b9\u6cd5\u8c03\u7528, \u53ef\u8bfb\u6027\u63d0\u9ad8\u4e86. \u5141\u8bb8\u61d2\u60f0\u7684\u8ba1\u7b97. \u7528Pythonic\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\u7c7b\u7684\u63a5\u53e3. \u5c31\u6027\u80fd\u800c\u8a00, \u5f53\u76f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u662f\u5408\u7406\u7684, \u6dfb\u52a0\u8bbf\u95ee\u65b9\u6cd5\u5c31\u663e\u5f97\u7410\u788e\u800c\u65e0\u610f\u4e49. \u4f7f\u7528\u5c5e\u6027(properties)\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898. \u5c06\u6765\u4e5f\u53ef\u4ee5\u5728\u4e0d\u7834\u574f\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\u5c06\u8bbf\u95ee\u65b9\u6cd5\u52a0\u4e0a.  \u7f3a\u70b9:\n    \u5c5e\u6027(properties)\u662f\u5728get\u548cset\u65b9\u6cd5\u58f0\u660e\u540e\u6307\u5b9a, \u8fd9\u9700\u8981\u4f7f\u7528\u8005\u5728\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u4e2d\u6ce8\u610f: set\u548cget\u662f\u7528\u4e8e\u5c5e\u6027(properties)\u7684(\u9664\u4e86\u7528  @property  \u88c5\u9970\u5668\u521b\u5efa\u7684\u53ea\u8bfb\u5c5e\u6027).  \u5fc5\u987b\u7ee7\u627f\u81eaobject\u7c7b. \u53ef\u80fd\u9690\u85cf\u6bd4\u5982\u64cd\u4f5c\u7b26\u91cd\u8f7d\u4e4b\u7c7b\u7684\u526f\u4f5c\u7528. \u7ee7\u627f\u65f6\u53ef\u80fd\u4f1a\u8ba9\u4eba\u56f0\u60d1.  \u7ed3\u8bba:\n    \u4f60\u901a\u5e38\u4e60\u60ef\u4e8e\u4f7f\u7528\u8bbf\u95ee\u6216\u8bbe\u7f6e\u65b9\u6cd5\u6765\u8bbf\u95ee\u6216\u8bbe\u7f6e\u6570\u636e, \u5b83\u4eec\u7b80\u5355\u800c\u8f7b\u91cf. \u4e0d\u8fc7\u6211\u4eec\u5efa\u8bae\u4f60\u5728\u65b0\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u5c5e\u6027. \u53ea\u8bfb\u5c5e\u6027\u5e94\u8be5\u7528  @property   \u88c5\u9970\u5668  http://google-styleguide.googlecode.com/svn/trunk/pyguide.html#Function_and_Method_Decorators _ \u6765\u521b\u5efa.  \u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u8986\u76d6\u5c5e\u6027, \u90a3\u4e48\u5c5e\u6027\u7684\u7ee7\u627f\u53ef\u80fd\u770b\u4e0a\u53bb\u4e0d\u660e\u663e. \u56e0\u6b64\u4f7f\u7528\u8005\u5fc5\u987b\u786e\u4fdd\u8bbf\u95ee\u65b9\u6cd5\u95f4\u63a5\u88ab\u8c03\u7528, \u4ee5\u4fdd\u8bc1\u5b50\u7c7b\u4e2d\u7684\u91cd\u8f7d\u65b9\u6cd5\u88ab\u5c5e\u6027\u8c03\u7528(\u4f7f\u7528\u6a21\u677f\u65b9\u6cd5\u8bbe\u8ba1\u6a21\u5f0f).\n\n.. code-block:: python\n\n    Yes: import math\n\n         class Square(object):\n             \"\"\"A square with two properties: a writable area and a read-only perimeter.\n\n             To use:\n               sq = Square(3)\n               sq.area\n             9\n               sq.perimeter\n             12\n               sq.area = 16\n               sq.side\n             4\n               sq.perimeter\n             16\n             \"\"\"\n\n             def __init__(self, side):\n                 self.side = side\n\n             def __get_area(self):\n                 \"\"\"Calculates the 'area' property.\"\"\"\n                 return self.side ** 2\n\n             def ___get_area(self):\n                 \"\"\"Indirect accessor for 'area' property.\"\"\"\n                 return self.__get_area()\n\n             def __set_area(self, area):\n                 \"\"\"Sets the 'area' property.\"\"\"\n                 self.side = math.sqrt(area)\n\n             def ___set_area(self, area):\n                 \"\"\"Indirect setter for 'area' property.\"\"\"\n                 self._SetArea(area)\n\n             area = property(___get_area, ___set_area,\n                             doc=\"\"\"Gets or sets the area of the square.\"\"\")\n\n             @property\n             def perimeter(self):\n                 return self.side * 4\n\n\n(\u8bd1\u8005\u6ce8: \u8001\u5b9e\u8bf4, \u6211\u89c9\u5f97\u8fd9\u6bb5\u793a\u4f8b\u4ee3\u7801\u5f88\u4e0d\u6070\u5f53, \u6709\u5fc5\u8981\u8fd9\u4e48\u86cb\u75bc\u5417?)", 
            "title": "\u5c5e\u6027(properties)"
        }, 
        {
            "location": "/python_rules/#truefalse", 
            "text": ".. tip::\n    \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0ffalse  \u5b9a\u4e49:\n    Python\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u5c06\u67d0\u4e9b\u503c\u6c42\u503c\u4e3afalse. \u6309\u7b80\u5355\u7684\u76f4\u89c9\u6765\u8bb2, \u5c31\u662f\u6240\u6709\u7684\"\u7a7a\"\u503c\u90fd\u88ab\u8ba4\u4e3a\u662ffalse. \u56e0\u6b640\uff0c None, [], {}, \"\" \u90fd\u88ab\u8ba4\u4e3a\u662ffalse.  \u4f18\u70b9:\n    \u4f7f\u7528Python\u5e03\u5c14\u503c\u7684\u6761\u4ef6\u8bed\u53e5\u66f4\u6613\u8bfb\u4e5f\u66f4\u4e0d\u6613\u72af\u9519. \u5927\u90e8\u5206\u60c5\u51b5\u4e0b, \u4e5f\u66f4\u5feb.  \u7f3a\u70b9:\n    \u5bf9C/C++\u5f00\u53d1\u4eba\u5458\u6765\u8bf4, \u53ef\u80fd\u770b\u8d77\u6765\u6709\u70b9\u602a.  \u7ed3\u8bba:\n    \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0f\u7684false, \u4f8b\u5982: \u4f7f\u7528  if foo:  \u800c\u4e0d\u662f  if foo != []:  . \u4e0d\u8fc7\u8fd8\u662f\u6709\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\u9700\u8981\u4f60\u94ed\u8bb0\u5728\u5fc3:  #. \u6c38\u8fdc\u4e0d\u8981\u7528==\u6216\u8005!=\u6765\u6bd4\u8f83\u5355\u4ef6, \u6bd4\u5982None. \u4f7f\u7528is\u6216\u8005is not.\n#. \u6ce8\u610f: \u5f53\u4f60\u5199\u4e0b ``if x:`` \u65f6, \u4f60\u5176\u5b9e\u8868\u793a\u7684\u662f ``if x is not None`` . \u4f8b\u5982: \u5f53\u4f60\u8981\u6d4b\u8bd5\u4e00\u4e2a\u9ed8\u8ba4\u503c\u662fNone\u7684\u53d8\u91cf\u6216\u53c2\u6570\u662f\u5426\u88ab\u8bbe\u4e3a\u5176\u5b83\u503c. \u8fd9\u4e2a\u503c\u5728\u5e03\u5c14\u8bed\u4e49\u4e0b\u53ef\u80fd\u662ffalse!\n#. \u6c38\u8fdc\u4e0d\u8981\u7528==\u5c06\u4e00\u4e2a\u5e03\u5c14\u91cf\u4e0efalse\u76f8\u6bd4\u8f83. \u4f7f\u7528 ``if not x:`` \u4ee3\u66ff. \u5982\u679c\u4f60\u9700\u8981\u533a\u5206false\u548cNone, \u4f60\u5e94\u8be5\u7528\u50cf ``if not x and x is not None:`` \u8fd9\u6837\u7684\u8bed\u53e5.\n#. \u5bf9\u4e8e\u5e8f\u5217(\u5b57\u7b26\u4e32, \u5217\u8868, \u5143\u7ec4), \u8981\u6ce8\u610f\u7a7a\u5e8f\u5217\u662ffalse. \u56e0\u6b64 ``if not seq:`` \u6216\u8005 ``if seq:`` \u6bd4 ``if len(seq):`` \u6216 ``if not len(seq):`` \u8981\u66f4\u597d.\n#. \u5904\u7406\u6574\u6570\u65f6, \u4f7f\u7528\u9690\u5f0ffalse\u53ef\u80fd\u4f1a\u5f97\u4e0d\u507f\u5931(\u5373\u4e0d\u5c0f\u5fc3\u5c06None\u5f53\u505a0\u6765\u5904\u7406). \u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u77e5\u662f\u6574\u578b(\u4e14\u4e0d\u662flen()\u7684\u8fd4\u56de\u7ed3\u679c)\u7684\u503c\u4e0e0\u6bd4\u8f83.\n\n    .. code-block:: python\n\n        Yes: if not users:\n                 print 'no users'\n\n             if foo == 0:\n                 self.handle_zero()\n\n             if i % 10 == 0:\n                 self.handle_multiple_of_ten()\n\n    .. code-block:: python\n\n        No:  if len(users) == 0:\n                 print 'no users'\n\n             if foo is not None and not foo:\n                 self.handle_zero()\n\n             if not i % 10:\n                 self.handle_multiple_of_ten()\n\n#. \u6ce8\u610f'0'(\u5b57\u7b26\u4e32)\u4f1a\u88ab\u5f53\u505atrue.", 
            "title": "True/False\u7684\u6c42\u503c"
        }, 
        {
            "location": "/python_rules/#_10", 
            "text": ".. tip::\n    \u5c3d\u53ef\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u53d6\u4ee3\u5b57\u7b26\u4e32\u6a21\u5757. \u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u53d6\u4ee3apply(). \u4f7f\u7528\u5217\u8868\u63a8\u5bfc, for\u5faa\u73af\u53d6\u4ee3filter(), map()\u4ee5\u53careduce().  \u5b9a\u4e49:\n    \u5f53\u524d\u7248\u672c\u7684Python\u63d0\u4f9b\u4e86\u5927\u5bb6\u901a\u5e38\u66f4\u559c\u6b22\u7684\u66ff\u4ee3\u54c1.  \u7ed3\u8bba:\n    \u6211\u4eec\u4e0d\u4f7f\u7528\u4e0d\u652f\u6301\u8fd9\u4e9b\u7279\u6027\u7684Python\u7248\u672c, \u6240\u4ee5\u6ca1\u7406\u7531\u4e0d\u7528\u65b0\u7684\u65b9\u5f0f.  .. code-block:: python\n\n    Yes: words = foo.split(':')\n\n         [x[1] for x in my_list if x[2] == 5]\n\n         map(math.sqrt, data)    # Ok. No inlined lambda expression.\n\n         fn(*args, **kwargs)\n\n.. code-block:: python\n\n    No:  words = string.split(foo, ':')\n\n         map(lambda x: x[1], filter(lambda x: x[2] == 5, my_list))\n\n         apply(fn, args, kwargs)", 
            "title": "\u8fc7\u65f6\u7684\u8bed\u8a00\u7279\u6027"
        }, 
        {
            "location": "/python_rules/#lexical-scoping", 
            "text": ".. tip::\n    \u63a8\u8350\u4f7f\u7528  \u5b9a\u4e49:\n    \u5d4c\u5957\u7684Python\u51fd\u6570\u53ef\u4ee5\u5f15\u7528\u5916\u5c42\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf, \u4f46\u662f\u4e0d\u80fd\u591f\u5bf9\u5b83\u4eec\u8d4b\u503c. \u53d8\u91cf\u7ed1\u5b9a\u7684\u89e3\u6790\u662f\u4f7f\u7528\u8bcd\u6cd5\u4f5c\u7528\u57df, \u4e5f\u5c31\u662f\u57fa\u4e8e\u9759\u6001\u7684\u7a0b\u5e8f\u6587\u672c. \u5bf9\u4e00\u4e2a\u5757\u4e2d\u7684\u67d0\u4e2a\u540d\u79f0\u7684\u4efb\u4f55\u8d4b\u503c\u90fd\u4f1a\u5bfc\u81f4Python\u5c06\u5bf9\u8be5\u540d\u79f0\u7684\u5168\u90e8\u5f15\u7528\u5f53\u505a\u5c40\u90e8\u53d8\u91cf, \u751a\u81f3\u662f\u8d4b\u503c\u524d\u7684\u5904\u7406. \u5982\u679c\u78b0\u5230global\u58f0\u660e, \u8be5\u540d\u79f0\u5c31\u4f1a\u88ab\u89c6\u4f5c\u5168\u5c40\u53d8\u91cf.  \u4e00\u4e2a\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u7684\u4f8b\u5b50:\n\n.. code-block:: python\n\n    def get_adder(summand1):\n        \"\"\"Returns a function that adds numbers to a given number.\"\"\"\n        def adder(summand2):\n            return summand1 + summand2\n\n        return adder\n\n(\u8bd1\u8005\u6ce8: \u8fd9\u4e2a\u4f8b\u5b50\u6709\u70b9\u8be1\u5f02, \u4f60\u5e94\u8be5\u8fd9\u6837\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570: ``sum = get_adder(summand1)(summand2)`` )  \u4f18\u70b9:\n    \u901a\u5e38\u53ef\u4ee5\u5e26\u6765\u66f4\u52a0\u6e05\u6670, \u4f18\u96c5\u7684\u4ee3\u7801. \u5c24\u5176\u4f1a\u8ba9\u6709\u7ecf\u9a8c\u7684Lisp\u548cScheme(\u8fd8\u6709Haskell, ML\u7b49)\u7a0b\u5e8f\u5458\u611f\u5230\u6b23\u6170.  \u7f3a\u70b9:\n    \u53ef\u80fd\u5bfc\u81f4\u8ba9\u4eba\u8ff7\u60d1\u7684bug. \u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f9d\u636e  PEP-0227  http://www.python.org/dev/peps/pep-0227/ _ \u7684\u4f8b\u5b50:  .. code-block:: python\n\n    i = 4\n    def foo(x):\n        def bar():\n            print i,\n        # ...\n        # A bunch of code here\n        # ...\n        for i in x:  # Ah, i *is* local to Foo, so this is what Bar sees\n            print i,\n        bar()\n\n\u56e0\u6b64 ``foo([1, 2, 3])`` \u4f1a\u6253\u5370 ``1 2 3 3`` , \u4e0d\u662f ``1 2 3 4`` .\n\n(\u8bd1\u8005\u6ce8: x\u662f\u4e00\u4e2a\u5217\u8868, for\u5faa\u73af\u5176\u5b9e\u662f\u5c06x\u4e2d\u7684\u503c\u4f9d\u6b21\u8d4b\u7ed9i.\u8fd9\u6837\u5bf9i\u7684\u8d4b\u503c\u5c31\u9690\u5f0f\u7684\u53d1\u751f\u4e86, \u6574\u4e2afoo\u51fd\u6570\u4f53\u4e2d\u7684i\u90fd\u4f1a\u88ab\u5f53\u505a\u5c40\u90e8\u53d8\u91cf, \u5305\u62ecbar()\u4e2d\u7684\u90a3\u4e2a. \u8fd9\u4e00\u70b9\u4e0eC++\u4e4b\u7c7b\u7684\u9759\u6001\u8bed\u8a00\u8fd8\u662f\u6709\u5f88\u5927\u5dee\u522b\u7684.)  \u7ed3\u8bba:\n    \u9f13\u52b1\u4f7f\u7528.", 
            "title": "\u8bcd\u6cd5\u4f5c\u7528\u57df(Lexical Scoping)"
        }, 
        {
            "location": "/python_rules/#_11", 
            "text": ".. tip::\n    \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668  \u5b9a\u4e49:\n     \u7528\u4e8e\u51fd\u6570\u53ca\u65b9\u6cd5\u7684\u88c5\u9970\u5668  https://docs.python.org/release/2.4.3/whatsnew/node6.html _ (\u4e5f\u5c31\u662f@\u6807\u8bb0). \u6700\u5e38\u89c1\u7684\u88c5\u9970\u5668\u662f@classmethod \u548c@staticmethod, \u7528\u4e8e\u5c06\u5e38\u89c4\u51fd\u6570\u8f6c\u6362\u6210\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5. \u4e0d\u8fc7, \u88c5\u9970\u5668\u8bed\u6cd5\u4e5f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u88c5\u9970\u5668. \u7279\u522b\u5730, \u5bf9\u4e8e\u67d0\u4e2a\u51fd\u6570  my_decorator  , \u4e0b\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u662f\u7b49\u6548\u7684:  .. code-block:: python\n\n     class C(object):\n        @my_decorator\n        def method(self):\n            # method body ...\n\n.. code-block:: python\n\n    class C(object):\n        def method(self):\n            # method body ...\n        method = my_decorator(method)  \u4f18\u70b9:\n    \u4f18\u96c5\u7684\u5728\u51fd\u6570\u4e0a\u6307\u5b9a\u4e00\u4e9b\u8f6c\u6362. \u8be5\u8f6c\u6362\u53ef\u80fd\u51cf\u5c11\u4e00\u4e9b\u91cd\u590d\u4ee3\u7801, \u4fdd\u6301\u5df2\u6709\u51fd\u6570\u4e0d\u53d8(enforce invariants), \u7b49.  \u7f3a\u70b9:\n    \u88c5\u9970\u5668\u53ef\u4ee5\u5728\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u4e0a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c, \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8ba9\u4eba\u60ca\u5f02\u7684\u9690\u85cf\u884c\u4e3a. \u800c\u4e14, \u88c5\u9970\u5668\u5728\u5bfc\u5165\u65f6\u6267\u884c. \u4ece\u88c5\u9970\u5668\u4ee3\u7801\u7684\u5931\u8d25\u4e2d\u6062\u590d\u66f4\u52a0\u4e0d\u53ef\u80fd.  \u7ed3\u8bba:\n    \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668. \u88c5\u9970\u5668\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u4e00\u6837\u7684\u5bfc\u5165\u548c\u547d\u540d\u89c4\u5219. \u88c5\u9970\u5668\u7684python\u6587\u6863\u5e94\u8be5\u6e05\u6670\u7684\u8bf4\u660e\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668. \u8bf7\u4e3a\u88c5\u9970\u5668\u7f16\u5199\u5355\u5143\u6d4b\u8bd5.  \u907f\u514d\u88c5\u9970\u5668\u81ea\u8eab\u5bf9\u5916\u754c\u7684\u4f9d\u8d56(\u5373\u4e0d\u8981\u4f9d\u8d56\u4e8e\u6587\u4ef6, socket, \u6570\u636e\u5e93\u8fde\u63a5\u7b49), \u56e0\u4e3a\u88c5\u9970\u5668\u8fd0\u884c\u65f6\u8fd9\u4e9b\u8d44\u6e90\u53ef\u80fd\u4e0d\u53ef\u7528(\u7531 ``pydoc`` \u6216\u5176\u5b83\u5de5\u5177\u5bfc\u5165). \u5e94\u8be5\u4fdd\u8bc1\u4e00\u4e2a\u7528\u6709\u6548\u53c2\u6570\u8c03\u7528\u7684\u88c5\u9970\u5668\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u662f\u6210\u529f\u7684.\n\n\u88c5\u9970\u5668\u662f\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\"\u9876\u7ea7\u4ee3\u7801\". \u53c2\u8003\u540e\u9762\u5173\u4e8e :ref:`Main  main ` \u7684\u8bdd\u9898.", 
            "title": "\u51fd\u6570\u4e0e\u65b9\u6cd5\u88c5\u9970\u5668"
        }, 
        {
            "location": "/python_rules/#_12", 
            "text": ".. tip::\n    \u4e0d\u8981\u4f9d\u8d56\u5185\u5efa\u7c7b\u578b\u7684\u539f\u5b50\u6027.  \u867d\u7136Python\u7684\u5185\u5efa\u7c7b\u578b\u4f8b\u5982\u5b57\u5178\u770b\u4e0a\u53bb\u62e5\u6709\u539f\u5b50\u64cd\u4f5c, \u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u5f62\u4e0b\u5b83\u4eec\u4ecd\u7136\u4e0d\u662f\u539f\u5b50\u7684(\u5373: \u5982\u679c hash \u6216 eq \u88ab\u5b9e\u73b0\u4e3aPython\u65b9\u6cd5)\u4e14\u5b83\u4eec\u7684\u539f\u5b50\u6027\u662f\u9760\u4e0d\u4f4f\u7684. \u4f60\u4e5f\u4e0d\u80fd\u6307\u671b\u539f\u5b50\u53d8\u91cf\u8d4b\u503c(\u56e0\u4e3a\u8fd9\u4e2a\u53cd\u8fc7\u6765\u4f9d\u8d56\u5b57\u5178).  \u4f18\u5148\u4f7f\u7528Queue\u6a21\u5757\u7684  Queue  \u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u7ebf\u7a0b\u95f4\u7684\u6570\u636e\u901a\u4fe1\u65b9\u5f0f. \u53e6\u5916, \u4f7f\u7528threading\u6a21\u5757\u53ca\u5176\u9501\u539f\u8bed(locking primitives). \u4e86\u89e3\u6761\u4ef6\u53d8\u91cf\u7684\u5408\u9002\u4f7f\u7528\u65b9\u5f0f, \u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528  threading.Condition  \u6765\u53d6\u4ee3\u4f4e\u7ea7\u522b\u7684\u9501\u4e86.", 
            "title": "\u7ebf\u7a0b"
        }, 
        {
            "location": "/python_rules/#_13", 
            "text": ".. tip::\n    \u907f\u514d\u4f7f\u7528\u8fd9\u4e9b\u7279\u6027  \u5b9a\u4e49:\n    Python\u662f\u4e00\u79cd\u5f02\u5e38\u7075\u6d3b\u7684\u8bed\u8a00, \u5b83\u4e3a\u4f60\u63d0\u4f9b\u4e86\u5f88\u591a\u82b1\u54e8\u7684\u7279\u6027, \u8bf8\u5982\u5143\u7c7b(metaclasses), \u5b57\u8282\u7801\u8bbf\u95ee, \u4efb\u610f\u7f16\u8bd1(on-the-fly compilation), \u52a8\u6001\u7ee7\u627f, \u5bf9\u8c61\u7236\u7c7b\u91cd\u5b9a\u4e49(object reparenting), \u5bfc\u5165\u9ed1\u5ba2(import hacks), \u53cd\u5c04, \u7cfb\u7edf\u5185\u4fee\u6539(modification of system internals), \u7b49\u7b49.  \u4f18\u70b9:\n    \u5f3a\u5927\u7684\u8bed\u8a00\u7279\u6027, \u80fd\u8ba9\u4f60\u7684\u4ee3\u7801\u66f4\u7d27\u51d1.  \u7f3a\u70b9:\n    \u4f7f\u7528\u8fd9\u4e9b\u5f88\"\u9177\"\u7684\u7279\u6027\u5341\u5206\u8bf1\u4eba, \u4f46\u4e0d\u662f\u7edd\u5bf9\u5fc5\u8981. \u4f7f\u7528\u5947\u6280\u6deb\u5de7\u7684\u4ee3\u7801\u5c06\u66f4\u52a0\u96be\u4ee5\u9605\u8bfb\u548c\u8c03\u8bd5. \u5f00\u59cb\u53ef\u80fd\u8fd8\u597d(\u5bf9\u539f\u4f5c\u8005\u800c\u8a00), \u4f46\u5f53\u4f60\u56de\u987e\u4ee3\u7801, \u5b83\u4eec\u53ef\u80fd\u4f1a\u6bd4\u90a3\u4e9b\u7a0d\u957f\u4e00\u70b9\u4f46\u662f\u5f88\u76f4\u63a5\u7684\u4ee3\u7801\u66f4\u52a0\u96be\u4ee5\u7406\u89e3.  \u7ed3\u8bba:\n    \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u907f\u514d\u8fd9\u4e9b\u7279\u6027.", 
            "title": "\u5a01\u529b\u8fc7\u5927\u7684\u7279\u6027"
        }, 
        {
            "location": "/python_style_rules/", 
            "text": "Python\u98ce\u683c\u89c4\u8303\n\n\n\u5206\u53f7\n\n\n.. tip::\n    \u4e0d\u8981\u5728\u884c\u5c3e\u52a0\u5206\u53f7, \u4e5f\u4e0d\u8981\u7528\u5206\u53f7\u5c06\u4e24\u6761\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c.\n\n\n.. _line_length:\n\n\n\u884c\u957f\u5ea6\n\n\n.. tip::\n    \u6bcf\u884c\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\n\n\n\u4f8b\u5916:\n\n\n. \u957f\u7684\u5bfc\u5165\u6a21\u5757\u8bed\u53e5\n\n\n. \u6ce8\u91ca\u91cc\u7684URL\n\n\n\u4e0d\u8981\u4f7f\u7528\u53cd\u659c\u6760\u8fde\u63a5\u884c.\n\n\nPython\u4f1a\u5c06 \n\u5706\u62ec\u53f7, \u4e2d\u62ec\u53f7\u548c\u82b1\u62ec\u53f7\u4e2d\u7684\u884c\u9690\u5f0f\u7684\u8fde\u63a5\u8d77\u6765 \nhttp://docs.python.org/2/reference/lexical_analysis.html#implicit-line-joining\n_ , \u4f60\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7279\u70b9. \u5982\u679c\u9700\u8981, \u4f60\u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u5916\u56f4\u589e\u52a0\u4e00\u5bf9\u989d\u5916\u7684\u5706\u62ec\u53f7.\n\n\n.. code-block:: python\n\n\nYes: foo_bar(self, width, height, color='black', design=None, x='foo',\n             emphasis=None, highlight=0)\n\n     if (width == 0 and height == 0 and\n         color == 'red' and emphasis == 'strong'):\n\n\n\n\u5982\u679c\u4e00\u4e2a\u6587\u672c\u5b57\u7b26\u4e32\u5728\u4e00\u884c\u653e\u4e0d\u4e0b, \u53ef\u4ee5\u4f7f\u7528\u5706\u62ec\u53f7\u6765\u5b9e\u73b0\u9690\u5f0f\u884c\u8fde\u63a5:\n\n\n.. code-block:: python\n\n\nx = ('This will build a very long long '\n     'long long long long long long string')\n\n\n\n\u5728\u6ce8\u91ca\u4e2d\uff0c\u5982\u679c\u5fc5\u8981\uff0c\u5c06\u957f\u7684URL\u653e\u5728\u4e00\u884c\u4e0a\u3002\n\n\n.. code-block:: python\n\n\nYes:  # See details at\n      # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html\n\n\n\n.. code-block:: python\n\n\nNo:  # See details at\n     # http://www.example.com/us/developer/documentation/api/content/\\\n     # v2.0/csv_file_name_extension_full_specification.html\n\n\n\n\u6ce8\u610f\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u5143\u7d20\u7f29\u8fdb; \u4f60\u53ef\u4ee5\u5728\u672c\u6587\u7684 :ref:\n\u7f29\u8fdb \nindentation\n \u90e8\u5206\u627e\u5230\u89e3\u91ca.\n\n\n\u62ec\u53f7\n\n\n.. tip::\n    \u5b81\u7f3a\u6bcb\u6ee5\u7684\u4f7f\u7528\u62ec\u53f7\n\n\n\u9664\u975e\u662f\u7528\u4e8e\u5b9e\u73b0\u884c\u8fde\u63a5, \u5426\u5219\u4e0d\u8981\u5728\u8fd4\u56de\u8bed\u53e5\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d\u4f7f\u7528\u62ec\u53f7. \u4e0d\u8fc7\u5728\u5143\u7ec4\u4e24\u8fb9\u4f7f\u7528\u62ec\u53f7\u662f\u53ef\u4ee5\u7684.\n\n\n.. code-block:: python\n\n\nYes: if foo:\n         bar()\n     while x:\n         x = bar()\n     if x and y:\n         bar()\n     if not x:\n         bar()\n     return foo\n     for (x, y) in dict.items(): ...\n\n\n\n.. code-block:: python\n\n\nNo:  if (x):\n         bar()\n     if not(x):\n         bar()\n     return (foo)\n\n\n\n.. _indentation:\n\n\n\u7f29\u8fdb\n\n\n.. tip::\n    \u75284\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\u4ee3\u7801\n\n\n\u7edd\u5bf9\u4e0d\u8981\u7528tab, \u4e5f\u4e0d\u8981tab\u548c\u7a7a\u683c\u6df7\u7528. \u5bf9\u4e8e\u884c\u8fde\u63a5\u7684\u60c5\u51b5, \u4f60\u5e94\u8be5\u8981\u4e48\u5782\u76f4\u5bf9\u9f50\u6362\u884c\u7684\u5143\u7d20(\u89c1 :ref:\n\u884c\u957f\u5ea6 \nline_length\n \u90e8\u5206\u7684\u793a\u4f8b), \u6216\u8005\u4f7f\u75284\u7a7a\u683c\u7684\u60ac\u6302\u5f0f\u7f29\u8fdb(\u8fd9\u65f6\u7b2c\u4e00\u884c\u4e0d\u5e94\u8be5\u6709\u53c2\u6570):\n\n\n.. code-block:: python\n\n\nYes:   # Aligned with opening delimiter\n          foo = long_function_name(var_one, var_two,\n                                   var_three, var_four)\n\n\n      # Aligned with opening delimiter in a dictionary\n      foo = {\n          long_dictionary_key: value1 +\n                               value2,\n          ...\n      }\n\n      # 4-space hanging indent; nothing on first line\n      foo = long_function_name(\n          var_one, var_two, var_three,\n          var_four)\n\n      # 4-space hanging indent in a dictionary\n      foo = {\n          long_dictionary_key:\n              long_dictionary_value,\n          ...\n      }\n\n\n\n.. code-block:: python\n\n\nNo:    # Stuff on first line forbidden\n      foo = long_function_name(var_one, var_two,\n          var_three, var_four)\n\n      # 2-space hanging indent forbidden\n      foo = long_function_name(\n        var_one, var_two, var_three,\n        var_four)\n\n      # No hanging indent in a dictionary\n      foo = {\n          long_dictionary_key:\n              long_dictionary_value,\n              ...\n      }\n\n\n\n\u7a7a\u884c\n\n\n.. tip::\n    \u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c, \u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c\n\n\n\u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c, \u6bd4\u5982\u51fd\u6570\u6216\u8005\u7c7b\u5b9a\u4e49. \u65b9\u6cd5\u5b9a\u4e49, \u7c7b\u5b9a\u4e49\u4e0e\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e4b\u95f4, \u90fd\u5e94\u8be5\u7a7a\u4e00\u884c. \u51fd\u6570\u6216\u65b9\u6cd5\u4e2d, \u67d0\u4e9b\u5730\u65b9\u8981\u662f\u4f60\u89c9\u5f97\u5408\u9002, \u5c31\u7a7a\u4e00\u884c.\n\n\n\u7a7a\u683c\n\n\n.. tip::\n    \u6309\u7167\u6807\u51c6\u7684\u6392\u7248\u89c4\u8303\u6765\u4f7f\u7528\u6807\u70b9\u4e24\u8fb9\u7684\u7a7a\u683c\n\n\n\u62ec\u53f7\u5185\u4e0d\u8981\u6709\u7a7a\u683c.\n\n\n.. code-block:: python\n\n\nYes: spam(ham[1], {eggs: 2}, [])\n\n\n\n.. code-block:: python\n\n\nNo:  spam( ham[ 1 ], { eggs: 2 }, [ ] )\n\n\n\n\u4e0d\u8981\u5728\u9017\u53f7, \u5206\u53f7, \u5192\u53f7\u524d\u9762\u52a0\u7a7a\u683c, \u4f46\u5e94\u8be5\u5728\u5b83\u4eec\u540e\u9762\u52a0(\u9664\u4e86\u5728\u884c\u5c3e).\n\n\n.. code-block:: python\n\n\nYes: if x == 4:\n         print x, y\n     x, y = y, x\n\n\n\n.. code-block:: python\n\n\nNo:  if x == 4 :\n         print x , y\n     x , y = y , x\n\n\n\n\u53c2\u6570\u5217\u8868, \u7d22\u5f15\u6216\u5207\u7247\u7684\u5de6\u62ec\u53f7\u524d\u4e0d\u5e94\u52a0\u7a7a\u683c.\n\n\n.. code-block:: python\n\n\nYes: spam(1)\n\n\n\n.. code-block:: python\n\n\nno: spam (1)\n\n\n\n.. code-block:: python\n\n\nYes: dict['key'] = list[index]\n\n\n\n.. code-block:: python\n\n\nNo:  dict ['key'] = list [index]\n\n\n\n\u5728\u4e8c\u5143\u64cd\u4f5c\u7b26\u4e24\u8fb9\u90fd\u52a0\u4e0a\u4e00\u4e2a\u7a7a\u683c, \u6bd4\u5982\u8d4b\u503c(=), \u6bd4\u8f83(==, \n, \n, !=, \n, \n=, \n=, in, not in, is, is not), \u5e03\u5c14(and, or, not).  \u81f3\u4e8e\u7b97\u672f\u64cd\u4f5c\u7b26\u4e24\u8fb9\u7684\u7a7a\u683c\u8be5\u5982\u4f55\u4f7f\u7528, \u9700\u8981\u4f60\u81ea\u5df1\u597d\u597d\u5224\u65ad. \u4e0d\u8fc7\u4e24\u4fa7\u52a1\u5fc5\u8981\u4fdd\u6301\u4e00\u81f4.\n\n\n.. code-block:: python\n\n\nYes: x == 1\n\n\n\n.. code-block:: python\n\n\nNo:  x\n1\n\n\n\n\u5f53'='\u7528\u4e8e\u6307\u793a\u5173\u952e\u5b57\u53c2\u6570\u6216\u9ed8\u8ba4\u53c2\u6570\u503c\u65f6, \u4e0d\u8981\u5728\u5176\u4e24\u4fa7\u4f7f\u7528\u7a7a\u683c.\n\n\n.. code-block:: python\n\n\nYes: def complex(real, imag=0.0): return magic(r=real, i=imag)\n\n\n\n.. code-block:: python\n\n\nNo:  def complex(real, imag = 0.0): return magic(r = real, i = imag)\n\n\n\n\u4e0d\u8981\u7528\u7a7a\u683c\u6765\u5782\u76f4\u5bf9\u9f50\u591a\u884c\u95f4\u7684\u6807\u8bb0, \u56e0\u4e3a\u8fd9\u4f1a\u6210\u4e3a\u7ef4\u62a4\u7684\u8d1f\u62c5(\u9002\u7528\u4e8e:, #, =\u7b49):\n\n\n.. code-block:: python\n\n\nYes:\n     foo = 1000  # comment\n     long_name = 2  # comment that should not be aligned\n\n     dictionary = {\n         \"foo\": 1,\n         \"long_name\": 2,\n         }\n\n\n\n.. code-block:: python\n\n\nNo:\n     foo       = 1000  # comment\n     long_name = 2     # comment that should not be aligned\n\n     dictionary = {\n         \"foo\"      : 1,\n         \"long_name\": 2,\n         }\n\n\n\nShebang\n\n\n.. tip::\n    \u5927\u90e8\u5206.py\u6587\u4ef6\u4e0d\u5fc5\u4ee5#!\u4f5c\u4e3a\u6587\u4ef6\u7684\u5f00\u59cb. \u6839\u636e \nPEP-394 \nhttp://www.python.org/dev/peps/pep-0394/\n_ , \u7a0b\u5e8f\u7684main\u6587\u4ef6\u5e94\u8be5\u4ee5 #!/usr/bin/python2\u6216\u8005 #!/usr/bin/python3\u5f00\u59cb.\n\n\n(\u8bd1\u8005\u6ce8: \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d, \nShebang \nhttp://en.wikipedia.org/wiki/Shebang_(Unix)\n_ (\u4e5f\u79f0\u4e3aHashbang)\u662f\u4e00\u4e2a\u7531\u4e95\u53f7\u548c\u53f9\u53f7\u6784\u6210\u7684\u5b57\u7b26\u4e32\u884c(#!), \u5176\u51fa\u73b0\u5728\u6587\u672c\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u7684\u524d\u4e24\u4e2a\u5b57\u7b26. \u5728\u6587\u4ef6\u4e2d\u5b58\u5728Shebang\u7684\u60c5\u51b5\u4e0b, \u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u7684\u7a0b\u5e8f\u8f7d\u5165\u5668\u4f1a\u5206\u6790Shebang\u540e\u7684\u5185\u5bb9, \u5c06\u8fd9\u4e9b\u5185\u5bb9\u4f5c\u4e3a\u89e3\u91ca\u5668\u6307\u4ee4, \u5e76\u8c03\u7528\u8be5\u6307\u4ee4, \u5e76\u5c06\u8f7d\u6709Shebang\u7684\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u8be5\u89e3\u91ca\u5668\u7684\u53c2\u6570. \u4f8b\u5982, \u4ee5\u6307\u4ee4#!/bin/sh\u5f00\u5934\u7684\u6587\u4ef6\u5728\u6267\u884c\u65f6\u4f1a\u5b9e\u9645\u8c03\u7528/bin/sh\u7a0b\u5e8f.)\n\n\n!\u5148\u7528\u4e8e\u5e2e\u52a9\u5185\u6838\u627e\u5230Python\u89e3\u91ca\u5668, \u4f46\u662f\u5728\u5bfc\u5165\u6a21\u5757\u65f6, \u5c06\u4f1a\u88ab\u5ffd\u7565. \u56e0\u6b64\u53ea\u6709\u88ab\u76f4\u63a5\u6267\u884c\u7684\u6587\u4ef6\u4e2d\u624d\u6709\u5fc5\u8981\u52a0\u5165#!.\n\n\n.. _comments:\n\n\n\u6ce8\u91ca\n\n\n.. tip::\n    \u786e\u4fdd\u5bf9\u6a21\u5757, \u51fd\u6570, \u65b9\u6cd5\u548c\u884c\u5185\u6ce8\u91ca\u4f7f\u7528\u6b63\u786e\u7684\u98ce\u683c\n\n\n\u6587\u6863\u5b57\u7b26\u4e32\n\n\nPython\u6709\u4e00\u79cd\u72ec\u4e00\u65e0\u4e8c\u7684\u7684\u6ce8\u91ca\u65b9\u5f0f: \u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32. \u6587\u6863\u5b57\u7b26\u4e32\u662f\u5305, \u6a21\u5757, \u7c7b\u6216\u51fd\u6570\u91cc\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5. \u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684__doc__\u6210\u5458\u88ab\u81ea\u52a8\u63d0\u53d6, \u5e76\u4e14\u88abpydoc\u6240\u7528. (\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6a21\u5757\u4e0a\u8fd0\u884cpydoc\u8bd5\u4e00\u628a, \u770b\u770b\u5b83\u957f\u4ec0\u4e48\u6837). \u6211\u4eec\u5bf9\u6587\u6863\u5b57\u7b26\u4e32\u7684\u60ef\u4f8b\u662f\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\"\"\"( `PEP-257 \nhttp://www.python.org/dev/peps/pep-0257/\n`_ ). \u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u8fd9\u6837\u7ec4\u7ec7: \u9996\u5148\u662f\u4e00\u884c\u4ee5\u53e5\u53f7, \u95ee\u53f7\u6216\u60ca\u53f9\u53f7\u7ed3\u5c3e\u7684\u6982\u8ff0(\u6216\u8005\u8be5\u6587\u6863\u5b57\u7b26\u4e32\u5355\u7eaf\u53ea\u6709\u4e00\u884c). \u63a5\u7740\u662f\u4e00\u4e2a\u7a7a\u884c. \u63a5\u7740\u662f\u6587\u6863\u5b57\u7b26\u4e32\u5269\u4e0b\u7684\u90e8\u5206, \u5b83\u5e94\u8be5\u4e0e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u5bf9\u9f50. \u4e0b\u9762\u6709\u66f4\u591a\u6587\u6863\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5316\u89c4\u8303.\n\n\n\n\u6a21\u5757\n\n\n\u6bcf\u4e2a\u6587\u4ef6\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u8bb8\u53ef\u6837\u677f. \u6839\u636e\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef(\u4f8b\u5982, Apache 2.0, BSD, LGPL, GPL), \u9009\u62e9\u5408\u9002\u7684\u6837\u677f.\n\n\n\n\u51fd\u6570\u548c\u65b9\u6cd5\n\n\n\u4e0b\u6587\u6240\u6307\u7684\u51fd\u6570,\u5305\u62ec\u51fd\u6570, \u65b9\u6cd5, \u4ee5\u53ca\u751f\u6210\u5668.\n\n\u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u6587\u6863\u5b57\u7b26\u4e32, \u9664\u975e\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6:\n\n#. \u5916\u90e8\u4e0d\u53ef\u89c1\n#. \u975e\u5e38\u77ed\u5c0f\n#. \u7b80\u5355\u660e\u4e86\n\n\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u5305\u542b\u51fd\u6570\u505a\u4ec0\u4e48, \u4ee5\u53ca\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8be6\u7ec6\u63cf\u8ff0. \u901a\u5e38, \u4e0d\u5e94\u8be5\u63cf\u8ff0\"\u600e\u4e48\u505a\", \u9664\u975e\u662f\u4e00\u4e9b\u590d\u6742\u7684\u7b97\u6cd5. \u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u63d0\u4f9b\u8db3\u591f\u7684\u4fe1\u606f, \u5f53\u522b\u4eba\u7f16\u5199\u4ee3\u7801\u8c03\u7528\u8be5\u51fd\u6570\u65f6, \u4ed6\u4e0d\u9700\u8981\u770b\u4e00\u884c\u4ee3\u7801, \u53ea\u8981\u770b\u6587\u6863\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5\u4e86. \u5bf9\u4e8e\u590d\u6742\u7684\u4ee3\u7801, \u5728\u4ee3\u7801\u65c1\u8fb9\u52a0\u6ce8\u91ca\u4f1a\u6bd4\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u66f4\u6709\u610f\u4e49.\n\n\u5173\u4e8e\u51fd\u6570\u7684\u51e0\u4e2a\u65b9\u9762\u5e94\u8be5\u5728\u7279\u5b9a\u7684\u5c0f\u8282\u4e2d\u8fdb\u884c\u63cf\u8ff0\u8bb0\u5f55\uff0c \u8fd9\u51e0\u4e2a\u65b9\u9762\u5982\u4e0b\u6587\u6240\u8ff0. \u6bcf\u8282\u5e94\u8be5\u4ee5\u4e00\u4e2a\u6807\u9898\u884c\u5f00\u59cb. \u6807\u9898\u884c\u4ee5\u5192\u53f7\u7ed3\u5c3e. \u9664\u6807\u9898\u884c\u5916, \u8282\u7684\u5176\u4ed6\u5185\u5bb9\u5e94\u88ab\u7f29\u8fdb2\u4e2a\u7a7a\u683c.\n\nArgs:\n    \u5217\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57, \u5e76\u5728\u540d\u5b57\u540e\u4f7f\u7528\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c, \u5206\u9694\u5bf9\u8be5\u53c2\u6570\u7684\u63cf\u8ff0.\u5982\u679c\u63cf\u8ff0\u592a\u957f\u8d85\u8fc7\u4e86\u5355\u884c80\u5b57\u7b26,\u4f7f\u75282\u6216\u80054\u4e2a\u7a7a\u683c\u7684\u60ac\u6302\u7f29\u8fdb(\u4e0e\u6587\u4ef6\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4e00\u81f4).\n    \u63cf\u8ff0\u5e94\u8be5\u5305\u62ec\u6240\u9700\u7684\u7c7b\u578b\u548c\u542b\u4e49.\n    \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u53d7*foo(\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5217\u8868)\u6216\u8005**bar (\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570), \u5e94\u8be5\u8be6\u7ec6\u5217\u51fa*foo\u548c**bar.\n\nReturns: (\u6216\u8005 Yields: \u7528\u4e8e\u751f\u6210\u5668)\n    \u63cf\u8ff0\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8bed\u4e49. \u5982\u679c\u51fd\u6570\u8fd4\u56deNone, \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7701\u7565.\n\nRaises:\n    \u5217\u51fa\u4e0e\u63a5\u53e3\u6709\u5173\u7684\u6240\u6709\u5f02\u5e38.\n\n.. code-block:: python\n\n    def fetch_bigtable_rows(big_table, keys, other_silly_variable=None):\n        \"\"\"Fetches rows from a Bigtable.\n\n        Retrieves rows pertaining to the given keys from the Table instance\n        represented by big_table.  Silly things may happen if\n        other_silly_variable is not None.\n\n        Args:\n            big_table: An open Bigtable Table instance.\n            keys: A sequence of strings representing the key of each table row\n                to fetch.\n            other_silly_variable: Another optional variable, that has a much\n                longer name than the other args, and which does nothing.\n\n        Returns:\n            A dict mapping keys to the corresponding table row data\n            fetched. Each row is represented as a tuple of strings. For\n            example:\n\n            {'Serak': ('Rigel VII', 'Preparer'),\n             'Zim': ('Irk', 'Invader'),\n             'Lrrr': ('Omicron Persei 8', 'Emperor')}\n\n            If a key from the keys argument is missing from the dictionary,\n            then that row was not found in the table.\n\n        Raises:\n            IOError: An error occurred accessing the bigtable.Table object.\n        \"\"\"\n        pass\n\n\n\n\u7c7b\n\n\n\u7c7b\u5e94\u8be5\u5728\u5176\u5b9a\u4e49\u4e0b\u6709\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u8be5\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32. \u5982\u679c\u4f60\u7684\u7c7b\u6709\u516c\u5171\u5c5e\u6027(Attributes), \u90a3\u4e48\u6587\u6863\u4e2d\u5e94\u8be5\u6709\u4e00\u4e2a\u5c5e\u6027(Attributes)\u6bb5. \u5e76\u4e14\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u53c2\u6570\u76f8\u540c\u7684\u683c\u5f0f.\n\n.. code-block:: python\n\n    class SampleClass(object):\n        \"\"\"Summary of class here.\n\n        Longer class information....\n        Longer class information....\n\n        Attributes:\n            likes_spam: A boolean indicating if we like SPAM or not.\n            eggs: An integer count of the eggs we have laid.\n        \"\"\"\n\n        def __init__(self, likes_spam=False):\n            \"\"\"Inits SampleClass with blah.\"\"\"\n            self.likes_spam = likes_spam\n            self.eggs = 0\n\n        def public_method(self):\n            \"\"\"Performs operation blah.\"\"\"\n\n\n\n\u5757\u6ce8\u91ca\u548c\u884c\u6ce8\u91ca\n\n\n\u6700\u9700\u8981\u5199\u6ce8\u91ca\u7684\u662f\u4ee3\u7801\u4e2d\u90a3\u4e9b\u6280\u5de7\u6027\u7684\u90e8\u5206. \u5982\u679c\u4f60\u5728\u4e0b\u6b21 `\u4ee3\u7801\u5ba1\u67e5 \nhttp://en.wikipedia.org/wiki/Code_review\n`_ \u7684\u65f6\u5019\u5fc5\u987b\u89e3\u91ca\u4e00\u4e0b, \u90a3\u4e48\u4f60\u5e94\u8be5\u73b0\u5728\u5c31\u7ed9\u5b83\u5199\u6ce8\u91ca. \u5bf9\u4e8e\u590d\u6742\u7684\u64cd\u4f5c, \u5e94\u8be5\u5728\u5176\u64cd\u4f5c\u5f00\u59cb\u524d\u5199\u4e0a\u82e5\u5e72\u884c\u6ce8\u91ca. \u5bf9\u4e8e\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u4ee3\u7801, \u5e94\u5728\u5176\u884c\u5c3e\u6dfb\u52a0\u6ce8\u91ca.\n\n.. code-block:: python\n\n    # We use a weighted dictionary search to find out where i is in\n    # the array.  We extrapolate position based on the largest num\n    # in the array and the array size and then do binary search to\n    # get the exact number.\n\n    if i \n (i-1) == 0:        # true iff i is a power of 2\n\n\u4e3a\u4e86\u63d0\u9ad8\u53ef\u8bfb\u6027, \u6ce8\u91ca\u5e94\u8be5\u81f3\u5c11\u79bb\u5f00\u4ee3\u78012\u4e2a\u7a7a\u683c.\n\n\u53e6\u4e00\u65b9\u9762, \u7edd\u4e0d\u8981\u63cf\u8ff0\u4ee3\u7801. \u5047\u8bbe\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u6bd4\u4f60\u66f4\u61c2Python, \u4ed6\u53ea\u662f\u4e0d\u77e5\u9053\u4f60\u7684\u4ee3\u7801\u8981\u505a\u4ec0\u4e48.\n\n.. code-block:: python\n\n    # BAD COMMENT: Now go through the b array and make sure whenever i occurs\n    # the next element is i+1\n\n\n\n\u7c7b\n\n\n.. tip::\n    \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u7ee7\u627f\u81ea\u5176\u5b83\u7c7b, \u5c31\u663e\u5f0f\u7684\u4eceobject\u7ee7\u627f. \u5d4c\u5957\u7c7b\u4e5f\u4e00\u6837.\n\n\n.. code-block:: python\n\n\nYes: class SampleClass(object):\n         pass\n\n\n     class OuterClass(object):\n\n         class InnerClass(object):\n             pass\n\n\n     class ChildClass(ParentClass):\n         \"\"\"Explicitly inherits from another class already.\"\"\"\n\n\n\n.. code-block:: python\n\n\nNo: class SampleClass:\n        pass\n\n\n    class OuterClass:\n\n        class InnerClass:\n            pass\n\n\n\n\u7ee7\u627f\u81ea \nobject\n \u662f\u4e3a\u4e86\u4f7f\u5c5e\u6027(properties)\u6b63\u5e38\u5de5\u4f5c, \u5e76\u4e14\u8fd9\u6837\u53ef\u4ee5\u4fdd\u62a4\u4f60\u7684\u4ee3\u7801, \u4f7f\u5176\u4e0d\u53d7 \nPEP-3000 \nhttp://www.python.org/dev/peps/pep-3000/\n_ \u7684\u4e00\u4e2a\u7279\u6b8a\u7684\u6f5c\u5728\u4e0d\u517c\u5bb9\u6027\u5f71\u54cd. \u8fd9\u6837\u505a\u4e5f\u5b9a\u4e49\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5, \u8fd9\u4e9b\u65b9\u6cd5\u5b9e\u73b0\u4e86\u5bf9\u8c61\u7684\u9ed8\u8ba4\u8bed\u4e49, \u5305\u62ec \n__new__, __init__, __delattr__, __getattribute__, __setattr__, __hash__, __repr__, and __str__\n .\n\n\n\u5b57\u7b26\u4e32\n\n\n.. tip::\n    \u5373\u4f7f\u53c2\u6570\u90fd\u662f\u5b57\u7b26\u4e32, \u4f7f\u7528%\u64cd\u4f5c\u7b26\u6216\u8005\u683c\u5f0f\u5316\u65b9\u6cd5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32. \u4e0d\u8fc7\u4e5f\u4e0d\u80fd\u4e00\u6982\u800c\u8bba, \u4f60\u9700\u8981\u5728+\u548c%\u4e4b\u95f4\u597d\u597d\u5224\u5b9a.\n\n\n.. code-block:: python\n\n\nYes: x = a + b\n     x = '%s, %s!' % (imperative, expletive)\n     x = '{}, {}!'.format(imperative, expletive)\n     x = 'name: %s; score: %d' % (name, n)\n     x = 'name: {}; score: {}'.format(name, n)\n\n\n\n.. code-block:: python\n\n\nNo: x = '%s%s' % (a, b)  # use + in this case\n    x = '{}{}'.format(a, b)  # use + in this case\n    x = imperative + ', ' + expletive + '!'\n    x = 'name: ' + name + '; score: ' + str(n)\n\n\n\n\u907f\u514d\u5728\u5faa\u73af\u4e2d\u7528+\u548c+=\u64cd\u4f5c\u7b26\u6765\u7d2f\u52a0\u5b57\u7b26\u4e32. \u7531\u4e8e\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684, \u8fd9\u6837\u505a\u4f1a\u521b\u5efa\u4e0d\u5fc5\u8981\u7684\u4e34\u65f6\u5bf9\u8c61, \u5e76\u4e14\u5bfc\u81f4\u4e8c\u6b21\u65b9\u800c\u4e0d\u662f\u7ebf\u6027\u7684\u8fd0\u884c\u65f6\u95f4. \u4f5c\u4e3a\u66ff\u4ee3\u65b9\u6848, \u4f60\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5b50\u4e32\u52a0\u5165\u5217\u8868, \u7136\u540e\u5728\u5faa\u73af\u7ed3\u675f\u540e\u7528 \n.join\n \u8fde\u63a5\u5217\u8868. (\u4e5f\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5b50\u4e32\u5199\u5165\u4e00\u4e2a \ncStringIO.StringIO\n \u7f13\u5b58\u4e2d.)\n\n\n.. code-block:: python\n\n\nYes: items = ['\ntable\n']\n     for last_name, first_name in employee_list:\n         items.append('\ntr\ntd\n%s, %s\n/td\n/tr\n' % (last_name, first_name))\n     items.append('\n/table\n')\n     employee_table = ''.join(items)\n\n\n\n.. code-block:: python\n\n\nNo: employee_table = '\ntable\n'\n    for last_name, first_name in employee_list:\n        employee_table += '\ntr\ntd\n%s, %s\n/td\n/tr\n' % (last_name, first_name)\n    employee_table += '\n/table\n'\n\n\n\n\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d, \u4fdd\u6301\u4f7f\u7528\u5b57\u7b26\u4e32\u5f15\u53f7\u7684\u4e00\u81f4\u6027. \u4f7f\u7528\u5355\u5f15\u53f7'\u6216\u8005\u53cc\u5f15\u53f7\"\u4e4b\u4e00\u7528\u4ee5\u5f15\u7528\u5b57\u7b26\u4e32, \u5e76\u5728\u540c\u4e00\u6587\u4ef6\u4e2d\u6cbf\u7528. \u5728\u5b57\u7b26\u4e32\u5185\u53ef\u4ee5\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u5f15\u53f7, \u4ee5\u907f\u514d\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528. GPyLint\u5df2\u7ecf\u52a0\u5165\u4e86\u8fd9\u4e00\u68c0\u67e5.\n\n\n(\u8bd1\u8005\u6ce8:GPyLint\u7591\u4e3a\u7b14\u8bef, \u5e94\u4e3aPyLint.)\n\n\n.. code-block:: python\n\n\nYes:\n        Python('Why are you hiding your eyes?')\n        Gollum(\"I'm scared of lint errors.\")\n        Narrator('\"Good!\" thought a happy Python reviewer.')\n\n\n.. code-block:: python\n\n\nNo:\n        Python(\"Why are you hiding your eyes?\")\n        Gollum('The lint. It burns. It burns us.')\n        Gollum(\"Always the great lint. Watching. Watching.\")\n\n\n\u4e3a\u591a\u884c\u5b57\u7b26\u4e32\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\"\"\"\u800c\u975e\u4e09\u91cd\u5355\u5f15\u53f7'''. \u5f53\u4e14\u4ec5\u5f53\u9879\u76ee\u4e2d\u4f7f\u7528\u5355\u5f15\u53f7'\u6765\u5f15\u7528\u5b57\u7b26\u4e32\u65f6, \u624d\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e09\u91cd'''\u4e3a\u975e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u591a\u884c\u5b57\u7b26\u4e32\u6765\u6807\u8bc6\u5f15\u7528. \u6587\u6863\u5b57\u7b26\u4e32\u5fc5\u987b\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\"\"\". \u4e0d\u8fc7\u8981\u6ce8\u610f, \u901a\u5e38\u7528\u9690\u5f0f\u884c\u8fde\u63a5\u66f4\u6e05\u6670, \u56e0\u4e3a\u591a\u884c\u5b57\u7b26\u4e32\u4e0e\u7a0b\u5e8f\u5176\u4ed6\u90e8\u5206\u7684\u7f29\u8fdb\u65b9\u5f0f\u4e0d\u4e00\u81f4.\n\n\n.. code-block:: python\n\n\nYes:\n    print (\"This is much nicer.\\n\"\n           \"Do it this way.\\n\")\n\n\n\n.. code-block:: python\n\n\nNo:\n      print \"\"\"This is pretty ugly.\n  Don't do this.\n  \"\"\"\n\n\n\n\u6587\u4ef6\u548csockets\n\n\n.. tip::\n    \u5728\u6587\u4ef6\u548csockets\u7ed3\u675f\u65f6, \u663e\u5f0f\u7684\u5173\u95ed\u5b83.\n\n\n\u9664\u6587\u4ef6\u5916, sockets\u6216\u5176\u4ed6\u7c7b\u4f3c\u6587\u4ef6\u7684\u5bf9\u8c61\u5728\u6ca1\u6709\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\u6253\u5f00, \u4f1a\u6709\u8bb8\u591a\u526f\u4f5c\u7528, \u4f8b\u5982:\n\n\n. \u5b83\u4eec\u53ef\u80fd\u4f1a\u6d88\u8017\u6709\u9650\u7684\u7cfb\u7edf\u8d44\u6e90, \u5982\u6587\u4ef6\u63cf\u8ff0\u7b26. \u5982\u679c\u8fd9\u4e9b\u8d44\u6e90\u5728\u4f7f\u7528\u540e\u6ca1\u6709\u53ca\u65f6\u5f52\u8fd8\u7cfb\u7edf, \u90a3\u4e48\u7528\u4e8e\u5904\u7406\u8fd9\u4e9b\u5bf9\u8c61\u7684\u4ee3\u7801\u4f1a\u5c06\u8d44\u6e90\u6d88\u8017\u6b86\u5c3d.\n\n\n. \u6301\u6709\u6587\u4ef6\u5c06\u4f1a\u963b\u6b62\u5bf9\u4e8e\u6587\u4ef6\u7684\u5176\u4ed6\u8bf8\u5982\u79fb\u52a8\u3001\u5220\u9664\u4e4b\u7c7b\u7684\u64cd\u4f5c.\n\n\n. \u4ec5\u4ec5\u662f\u4ece\u903b\u8f91\u4e0a\u5173\u95ed\u6587\u4ef6\u548csockets, \u90a3\u4e48\u5b83\u4eec\u4ecd\u7136\u53ef\u80fd\u4f1a\u88ab\u5176\u5171\u4eab\u7684\u7a0b\u5e8f\u5728\u65e0\u610f\u4e2d\u8fdb\u884c\u8bfb\u6216\u8005\u5199\u64cd\u4f5c. \u53ea\u6709\u5f53\u5b83\u4eec\u771f\u6b63\u88ab\u5173\u95ed\u540e, \u5bf9\u4e8e\u5b83\u4eec\u5c1d\u8bd5\u8fdb\u884c\u8bfb\u6216\u8005\u5199\u64cd\u4f5c\u5c06\u4f1a\u8dd1\u51fa\u5f02\u5e38, \u5e76\u4f7f\u5f97\u95ee\u9898\u5feb\u901f\u663e\u73b0\u51fa\u6765.\n\n\n\u800c\u4e14, \u5e7b\u60f3\u5f53\u6587\u4ef6\u5bf9\u8c61\u6790\u6784\u65f6, \u6587\u4ef6\u548csockets\u4f1a\u81ea\u52a8\u5173\u95ed, \u8bd5\u56fe\u5c06\u6587\u4ef6\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u548c\u6587\u4ef6\u7684\u72b6\u6001\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\u60f3\u6cd5, \u90fd\u662f\u4e0d\u73b0\u5b9e\u7684. \u56e0\u4e3a\u6709\u5982\u4e0b\u539f\u56e0:\n\n\n. \u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\u53ef\u4ee5\u786e\u4fdd\u8fd0\u884c\u73af\u5883\u4f1a\u771f\u6b63\u7684\u6267\u884c\u6587\u4ef6\u7684\u6790\u6784. \u4e0d\u540c\u7684Python\u5b9e\u73b0\u91c7\u7528\u4e0d\u540c\u7684\u5185\u5b58\u7ba1\u7406\u6280\u672f, \u6bd4\u5982\u5ef6\u65f6\u5783\u573e\u5904\u7406\u673a\u5236. \u5ef6\u65f6\u5783\u573e\u5904\u7406\u673a\u5236\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5bf9\u8c61\u751f\u547d\u5468\u671f\u88ab\u4efb\u610f\u65e0\u9650\u5236\u7684\u5ef6\u957f.\n\n\n. \u5bf9\u4e8e\u6587\u4ef6\u610f\u5916\u7684\u5f15\u7528,\u4f1a\u5bfc\u81f4\u5bf9\u4e8e\u6587\u4ef6\u7684\u6301\u6709\u65f6\u95f4\u8d85\u51fa\u9884\u671f(\u6bd4\u5982\u5bf9\u4e8e\u5f02\u5e38\u7684\u8ddf\u8e2a, \u5305\u542b\u6709\u5168\u5c40\u53d8\u91cf\u7b49).\n\n\n\u63a8\u8350\u4f7f\u7528 \n\"with\"\u8bed\u53e5 \nhttp://docs.python.org/reference/compound_stmts.html#the-with-statement\n_ \u4ee5\u7ba1\u7406\u6587\u4ef6:\n\n\n.. code-block:: python\n\n\n  with open(\"hello.txt\") as hello_file:\n      for line in hello_file:\n          print line\n\n\n\n\u5bf9\u4e8e\u4e0d\u652f\u6301\u4f7f\u7528\"with\"\u8bed\u53e5\u7684\u7c7b\u4f3c\u6587\u4ef6\u7684\u5bf9\u8c61,\u4f7f\u7528 contextlib.closing():\n\n\n.. code-block:: python\n\n\n  import contextlib\n\n  with contextlib.closing(urllib.urlopen(\"http://www.python.org/\")) as front_page:\n      for line in front_page:\n          print line\n\n\n\nLegacy AppEngine \u4e2dPython 2.5\u7684\u4ee3\u7801\u5982\u4f7f\u7528\"with\"\u8bed\u53e5, \u9700\u8981\u6dfb\u52a0 \"from \nfuture\n import with_statement\".\n\n\nTODO\u6ce8\u91ca\n\n\n.. tip::\n    \u4e3a\u4e34\u65f6\u4ee3\u7801\u4f7f\u7528TODO\u6ce8\u91ca, \u5b83\u662f\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848. \u4e0d\u7b97\u5b8c\u7f8e, \u4f46\u591f\u597d\u4e86.\n\n\nTODO\u6ce8\u91ca\u5e94\u8be5\u5728\u6240\u6709\u5f00\u5934\u5904\u5305\u542b\"TODO\"\u5b57\u7b26\u4e32, \u7d27\u8ddf\u7740\u662f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4f60\u7684\u540d\u5b57, email\u5730\u5740\u6216\u5176\u5b83\u6807\u8bc6\u7b26. \u7136\u540e\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5192\u53f7. \u63a5\u7740\u5fc5\u987b\u6709\u4e00\u884c\u6ce8\u91ca, \u89e3\u91ca\u8981\u505a\u4ec0\u4e48. \u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u7edf\u4e00\u7684TODO\u683c\u5f0f, \u8fd9\u6837\u6dfb\u52a0\u6ce8\u91ca\u7684\u4eba\u5c31\u53ef\u4ee5\u641c\u7d22\u5230(\u5e76\u53ef\u4ee5\u6309\u9700\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282). \u5199\u4e86TODO\u6ce8\u91ca\u5e76\u4e0d\u4fdd\u8bc1\u5199\u7684\u4eba\u4f1a\u4eb2\u81ea\u89e3\u51b3\u95ee\u9898. \u5f53\u4f60\u5199\u4e86\u4e00\u4e2aTODO, \u8bf7\u6ce8\u4e0a\u4f60\u7684\u540d\u5b57.\n\n\n.. code-block:: python\n\n\n# TODO(kl@gmail.com): Use a \"*\" here for string repetition.\n# TODO(Zeke) Change this to use relations.\n\n\n\n\u5982\u679c\u4f60\u7684TODO\u662f\"\u5c06\u6765\u505a\u67d0\u4e8b\"\u7684\u5f62\u5f0f, \u90a3\u4e48\u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u65e5\u671f(\"2009\u5e7411\u6708\u89e3\u51b3\")\u6216\u8005\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6(\"\u7b49\u5230\u6240\u6709\u7684\u5ba2\u6237\u90fd\u53ef\u4ee5\u5904\u7406XML\u8bf7\u6c42\u5c31\u79fb\u9664\u8fd9\u4e9b\u4ee3\u7801\").\n\n\n\u5bfc\u5165\u683c\u5f0f\n\n\n.. tip::\n    \u6bcf\u4e2a\u5bfc\u5165\u5e94\u8be5\u72ec\u5360\u4e00\u884c\n\n\n.. code-block:: python\n\n\nYes: import os\n     import sys\n\n\n\n.. code-block:: python\n\n\nNo:  import os, sys\n\n\n\n\u5bfc\u5165\u603b\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u9876\u90e8, \u4f4d\u4e8e\u6a21\u5757\u6ce8\u91ca\u548c\u6587\u6863\u5b57\u7b26\u4e32\u4e4b\u540e, \u6a21\u5757\u5168\u5c40\u53d8\u91cf\u548c\u5e38\u91cf\u4e4b\u524d.  \u5bfc\u5165\u5e94\u8be5\u6309\u7167\u4ece\u6700\u901a\u7528\u5230\u6700\u4e0d\u901a\u7528\u7684\u987a\u5e8f\u5206\u7ec4:\n\n\n. \u6807\u51c6\u5e93\u5bfc\u5165\n\n\n. \u7b2c\u4e09\u65b9\u5e93\u5bfc\u5165\n\n\n. \u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u5bfc\u5165\n\n\n\u6bcf\u79cd\u5206\u7ec4\u4e2d,  \u5e94\u8be5\u6839\u636e\u6bcf\u4e2a\u6a21\u5757\u7684\u5b8c\u6574\u5305\u8def\u5f84\u6309\u5b57\u5178\u5e8f\u6392\u5e8f, \u5ffd\u7565\u5927\u5c0f\u5199.\n\n\n.. code-block:: python\n\n\nimport foo\nfrom foo import bar\nfrom foo.bar import baz\nfrom foo.bar import Quux\nfrom Foob import ar\n\n\n\n\u8bed\u53e5\n\n\n.. tip::\n    \u901a\u5e38\u6bcf\u4e2a\u8bed\u53e5\u5e94\u8be5\u72ec\u5360\u4e00\u884c\n\n\n\u4e0d\u8fc7, \u5982\u679c\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u6d4b\u8bd5\u8bed\u53e5\u5728\u4e00\u884c\u653e\u5f97\u4e0b, \u4f60\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u653e\u5728\u540c\u4e00\u884c.  \u5982\u679c\u662fif\u8bed\u53e5, \u53ea\u6709\u5728\u6ca1\u6709else\u65f6\u624d\u80fd\u8fd9\u6837\u505a. \u7279\u522b\u5730, \u7edd\u4e0d\u8981\u5bf9 \ntry/except\n \u8fd9\u6837\u505a, \u56e0\u4e3atry\u548cexcept\u4e0d\u80fd\u653e\u5728\u540c\u4e00\u884c.\n\n\n.. code-block:: python\n\n\nYes:\n\n  if foo: bar(foo)\n\n\n\n.. code-block:: python\n\n\nNo:\n\n  if foo: bar(foo)\n  else:   baz(foo)\n\n  try:               bar(foo)\n  except ValueError: baz(foo)\n\n  try:\n      bar(foo)\n  except ValueError: baz(foo)\n\n\n\n\u8bbf\u95ee\u63a7\u5236\n\n\n.. tip::\n    \u5728Python\u4e2d, \u5bf9\u4e8e\u7410\u788e\u53c8\u4e0d\u592a\u91cd\u8981\u7684\u8bbf\u95ee\u51fd\u6570, \u4f60\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u516c\u6709\u53d8\u91cf\u6765\u53d6\u4ee3\u5b83\u4eec, \u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u989d\u5916\u7684\u51fd\u6570\u8c03\u7528\u5f00\u9500. \u5f53\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u65f6, \u4f60\u53ef\u4ee5\u7528\u5c5e\u6027(property)\u6765\u4fdd\u6301\u8bed\u6cd5\u7684\u4e00\u81f4\u6027.\n\n\n(\u8bd1\u8005\u6ce8: \u91cd\u89c6\u5c01\u88c5\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u5458\u770b\u5230\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u5f88\u53cd\u611f, \u56e0\u4e3a\u4ed6\u4eec\u4e00\u76f4\u88ab\u6559\u80b2: \u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u5fc5\u987b\u662f\u79c1\u6709\u7684! \u5176\u5b9e, \u90a3\u771f\u7684\u662f\u6709\u70b9\u9ebb\u70e6\u554a. \u8bd5\u7740\u53bb\u63a5\u53d7Pythonic\u54f2\u5b66\u5427)\n\n\n\n\u53e6\u4e00\u65b9\u9762, \u5982\u679c\u8bbf\u95ee\u66f4\u590d\u6742, \u6216\u8005\u53d8\u91cf\u7684\u8bbf\u95ee\u5f00\u9500\u5f88\u663e\u8457, \u90a3\u4e48\u4f60\u5e94\u8be5\u4f7f\u7528\u50cf \nget_foo()\n \u548c \nset_foo()\n \u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528. \u5982\u679c\u4e4b\u524d\u7684\u4ee3\u7801\u884c\u4e3a\u5141\u8bb8\u901a\u8fc7\u5c5e\u6027(property)\u8bbf\u95ee , \u90a3\u4e48\u5c31\u4e0d\u8981\u5c06\u65b0\u7684\u8bbf\u95ee\u51fd\u6570\u4e0e\u5c5e\u6027\u7ed1\u5b9a. \u8fd9\u6837, \u4efb\u4f55\u8bd5\u56fe\u901a\u8fc7\u8001\u65b9\u6cd5\u8bbf\u95ee\u53d8\u91cf\u7684\u4ee3\u7801\u5c31\u6ca1\u6cd5\u8fd0\u884c, \u4f7f\u7528\u8005\u4e5f\u5c31\u4f1a\u610f\u8bc6\u5230\u590d\u6742\u6027\u53d1\u751f\u4e86\u53d8\u5316.\n\n\n\u547d\u540d\n\n\n.. tip::\n    module_name, package_name, ClassName, method_name, ExceptionName, function_name, GLOBAL_VAR_NAME, instance_var_name, function_parameter_name, local_var_name.\n\n\n\u5e94\u8be5\u907f\u514d\u7684\u540d\u79f0\n\n\n#. \u5355\u5b57\u7b26\u540d\u79f0, \u9664\u4e86\u8ba1\u6570\u5668\u548c\u8fed\u4ee3\u5668.\n#. \u5305/\u6a21\u5757\u540d\u4e2d\u7684\u8fde\u5b57\u7b26(-)\n#. \u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u5e76\u7ed3\u5c3e\u7684\u540d\u79f0(Python\u4fdd\u7559, \u4f8b\u5982__init__)\n\n\n\n\u547d\u540d\u7ea6\u5b9a\n\n\n#. \u6240\u8c13\"\u5185\u90e8(Internal)\"\u8868\u793a\u4ec5\u6a21\u5757\u5185\u53ef\u7528, \u6216\u8005, \u5728\u7c7b\u5185\u662f\u4fdd\u62a4\u6216\u79c1\u6709\u7684.\n#. \u7528\u5355\u4e0b\u5212\u7ebf(_)\u5f00\u5934\u8868\u793a\u6a21\u5757\u53d8\u91cf\u6216\u51fd\u6570\u662fprotected\u7684(\u4f7f\u7528import * from\u65f6\u4e0d\u4f1a\u5305\u542b).\n#. \u7528\u53cc\u4e0b\u5212\u7ebf(__)\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u8868\u793a\u7c7b\u5185\u79c1\u6709.\n#. \u5c06\u76f8\u5173\u7684\u7c7b\u548c\u9876\u7ea7\u51fd\u6570\u653e\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u91cc. \u4e0d\u50cfJava, \u6ca1\u5fc5\u8981\u9650\u5236\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6a21\u5757.\n#. \u5bf9\u7c7b\u540d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd(\u5982CapWords, \u5373Pascal\u98ce\u683c), \u4f46\u662f\u6a21\u5757\u540d\u5e94\u8be5\u7528\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f(\u5982lower_with_under.py). \u5c3d\u7ba1\u5df2\u7ecf\u6709\u5f88\u591a\u73b0\u5b58\u7684\u6a21\u5757\u4f7f\u7528\u7c7b\u4f3c\u4e8eCapWords.py\u8fd9\u6837\u7684\u547d\u540d, \u4f46\u73b0\u5728\u5df2\u7ecf\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a, \u56e0\u4e3a\u5982\u679c\u6a21\u5757\u540d\u78b0\u5de7\u548c\u7c7b\u540d\u4e00\u81f4, \u8fd9\u4f1a\u8ba9\u4eba\u56f0\u6270.\n\n\n\nPython\u4e4b\u7236Guido\u63a8\u8350\u7684\u89c4\u8303\n\n\n===========================    ====================    ======================================================================\nType                           Public                  Internal\n===========================    ====================    ======================================================================\nModules                        lower_with_under        _lower_with_under\nPackages                       lower_with_under\nClasses                        CapWords                _CapWords\nExceptions                     CapWords\nFunctions                      lower_with_under()      _lower_with_under()\nGlobal/Class Constants         CAPS_WITH_UNDER         _CAPS_WITH_UNDER\nGlobal/Class Variables         lower_with_under        _lower_with_under\nInstance Variables             lower_with_under        _lower_with_under (protected) or \nlower_with_under (private)\nMethod Names                   lower_with_under()      _lower_with_under() (protected) or \nlower_with_under() (private)\nFunction/Method Parameters     lower_with_under\nLocal Variables                lower_with_under\n===========================    ====================    ======================================================================\n\n\n.. _main:\n\n\nMain\n\n\n.. tip::\n    \u5373\u4f7f\u662f\u4e00\u4e2a\u6253\u7b97\u88ab\u7528\u4f5c\u811a\u672c\u7684\u6587\u4ef6, \u4e5f\u5e94\u8be5\u662f\u53ef\u5bfc\u5165\u7684. \u5e76\u4e14\u7b80\u5355\u7684\u5bfc\u5165\u4e0d\u5e94\u8be5\u5bfc\u81f4\u8fd9\u4e2a\u811a\u672c\u7684\u4e3b\u529f\u80fd(main functionality)\u88ab\u6267\u884c, \u8fd9\u662f\u4e00\u79cd\u526f\u4f5c\u7528. \u4e3b\u529f\u80fd\u5e94\u8be5\u653e\u5728\u4e00\u4e2amain()\u51fd\u6570\u4e2d.\n\n\n\u5728Python\u4e2d, pydoc\u4ee5\u53ca\u5355\u5143\u6d4b\u8bd5\u8981\u6c42\u6a21\u5757\u5fc5\u987b\u662f\u53ef\u5bfc\u5165\u7684. \u4f60\u7684\u4ee3\u7801\u5e94\u8be5\u5728\u6267\u884c\u4e3b\u7a0b\u5e8f\u524d\u603b\u662f\u68c0\u67e5 \nif __name__ == '__main__'\n , \u8fd9\u6837\u5f53\u6a21\u5757\u88ab\u5bfc\u5165\u65f6\u4e3b\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c.\n\n\n.. code-block:: python\n\n\ndef main():\n      ...\n\nif __name__ == '__main__':\n    main()\n\n\n\n\u6240\u6709\u7684\u9876\u7ea7\u4ee3\u7801\u5728\u6a21\u5757\u5bfc\u5165\u65f6\u90fd\u4f1a\u88ab\u6267\u884c. \u8981\u5c0f\u5fc3\u4e0d\u8981\u53bb\u8c03\u7528\u51fd\u6570, \u521b\u5efa\u5bf9\u8c61, \u6216\u8005\u6267\u884c\u90a3\u4e9b\u4e0d\u5e94\u8be5\u5728\u4f7f\u7528pydoc\u65f6\u6267\u884c\u7684\u64cd\u4f5c.", 
            "title": "Python\u98ce\u683c\u89c4\u8303"
        }, 
        {
            "location": "/python_style_rules/#python", 
            "text": "", 
            "title": "Python\u98ce\u683c\u89c4\u8303"
        }, 
        {
            "location": "/python_style_rules/#_1", 
            "text": ".. tip::\n    \u4e0d\u8981\u5728\u884c\u5c3e\u52a0\u5206\u53f7, \u4e5f\u4e0d\u8981\u7528\u5206\u53f7\u5c06\u4e24\u6761\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c.  .. _line_length:", 
            "title": "\u5206\u53f7"
        }, 
        {
            "location": "/python_style_rules/#_2", 
            "text": ".. tip::\n    \u6bcf\u884c\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26  \u4f8b\u5916:", 
            "title": "\u884c\u957f\u5ea6"
        }, 
        {
            "location": "/python_style_rules/#_3", 
            "text": "", 
            "title": ". \u957f\u7684\u5bfc\u5165\u6a21\u5757\u8bed\u53e5"
        }, 
        {
            "location": "/python_style_rules/#url", 
            "text": "\u4e0d\u8981\u4f7f\u7528\u53cd\u659c\u6760\u8fde\u63a5\u884c.  Python\u4f1a\u5c06  \u5706\u62ec\u53f7, \u4e2d\u62ec\u53f7\u548c\u82b1\u62ec\u53f7\u4e2d\u7684\u884c\u9690\u5f0f\u7684\u8fde\u63a5\u8d77\u6765  http://docs.python.org/2/reference/lexical_analysis.html#implicit-line-joining _ , \u4f60\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7279\u70b9. \u5982\u679c\u9700\u8981, \u4f60\u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u5916\u56f4\u589e\u52a0\u4e00\u5bf9\u989d\u5916\u7684\u5706\u62ec\u53f7.  .. code-block:: python  Yes: foo_bar(self, width, height, color='black', design=None, x='foo',\n             emphasis=None, highlight=0)\n\n     if (width == 0 and height == 0 and\n         color == 'red' and emphasis == 'strong'):  \u5982\u679c\u4e00\u4e2a\u6587\u672c\u5b57\u7b26\u4e32\u5728\u4e00\u884c\u653e\u4e0d\u4e0b, \u53ef\u4ee5\u4f7f\u7528\u5706\u62ec\u53f7\u6765\u5b9e\u73b0\u9690\u5f0f\u884c\u8fde\u63a5:  .. code-block:: python  x = ('This will build a very long long '\n     'long long long long long long string')  \u5728\u6ce8\u91ca\u4e2d\uff0c\u5982\u679c\u5fc5\u8981\uff0c\u5c06\u957f\u7684URL\u653e\u5728\u4e00\u884c\u4e0a\u3002  .. code-block:: python  Yes:  # See details at\n      # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html  .. code-block:: python  No:  # See details at\n     # http://www.example.com/us/developer/documentation/api/content/\\\n     # v2.0/csv_file_name_extension_full_specification.html  \u6ce8\u610f\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u5143\u7d20\u7f29\u8fdb; \u4f60\u53ef\u4ee5\u5728\u672c\u6587\u7684 :ref: \u7f29\u8fdb  indentation  \u90e8\u5206\u627e\u5230\u89e3\u91ca.", 
            "title": ". \u6ce8\u91ca\u91cc\u7684URL"
        }, 
        {
            "location": "/python_style_rules/#_4", 
            "text": ".. tip::\n    \u5b81\u7f3a\u6bcb\u6ee5\u7684\u4f7f\u7528\u62ec\u53f7  \u9664\u975e\u662f\u7528\u4e8e\u5b9e\u73b0\u884c\u8fde\u63a5, \u5426\u5219\u4e0d\u8981\u5728\u8fd4\u56de\u8bed\u53e5\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d\u4f7f\u7528\u62ec\u53f7. \u4e0d\u8fc7\u5728\u5143\u7ec4\u4e24\u8fb9\u4f7f\u7528\u62ec\u53f7\u662f\u53ef\u4ee5\u7684.  .. code-block:: python  Yes: if foo:\n         bar()\n     while x:\n         x = bar()\n     if x and y:\n         bar()\n     if not x:\n         bar()\n     return foo\n     for (x, y) in dict.items(): ...  .. code-block:: python  No:  if (x):\n         bar()\n     if not(x):\n         bar()\n     return (foo)  .. _indentation:", 
            "title": "\u62ec\u53f7"
        }, 
        {
            "location": "/python_style_rules/#_5", 
            "text": ".. tip::\n    \u75284\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\u4ee3\u7801  \u7edd\u5bf9\u4e0d\u8981\u7528tab, \u4e5f\u4e0d\u8981tab\u548c\u7a7a\u683c\u6df7\u7528. \u5bf9\u4e8e\u884c\u8fde\u63a5\u7684\u60c5\u51b5, \u4f60\u5e94\u8be5\u8981\u4e48\u5782\u76f4\u5bf9\u9f50\u6362\u884c\u7684\u5143\u7d20(\u89c1 :ref: \u884c\u957f\u5ea6  line_length  \u90e8\u5206\u7684\u793a\u4f8b), \u6216\u8005\u4f7f\u75284\u7a7a\u683c\u7684\u60ac\u6302\u5f0f\u7f29\u8fdb(\u8fd9\u65f6\u7b2c\u4e00\u884c\u4e0d\u5e94\u8be5\u6709\u53c2\u6570):  .. code-block:: python  Yes:   # Aligned with opening delimiter\n          foo = long_function_name(var_one, var_two,\n                                   var_three, var_four)        # Aligned with opening delimiter in a dictionary\n      foo = {\n          long_dictionary_key: value1 +\n                               value2,\n          ...\n      }\n\n      # 4-space hanging indent; nothing on first line\n      foo = long_function_name(\n          var_one, var_two, var_three,\n          var_four)\n\n      # 4-space hanging indent in a dictionary\n      foo = {\n          long_dictionary_key:\n              long_dictionary_value,\n          ...\n      }  .. code-block:: python  No:    # Stuff on first line forbidden\n      foo = long_function_name(var_one, var_two,\n          var_three, var_four)\n\n      # 2-space hanging indent forbidden\n      foo = long_function_name(\n        var_one, var_two, var_three,\n        var_four)\n\n      # No hanging indent in a dictionary\n      foo = {\n          long_dictionary_key:\n              long_dictionary_value,\n              ...\n      }", 
            "title": "\u7f29\u8fdb"
        }, 
        {
            "location": "/python_style_rules/#_6", 
            "text": ".. tip::\n    \u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c, \u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c  \u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c, \u6bd4\u5982\u51fd\u6570\u6216\u8005\u7c7b\u5b9a\u4e49. \u65b9\u6cd5\u5b9a\u4e49, \u7c7b\u5b9a\u4e49\u4e0e\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e4b\u95f4, \u90fd\u5e94\u8be5\u7a7a\u4e00\u884c. \u51fd\u6570\u6216\u65b9\u6cd5\u4e2d, \u67d0\u4e9b\u5730\u65b9\u8981\u662f\u4f60\u89c9\u5f97\u5408\u9002, \u5c31\u7a7a\u4e00\u884c.", 
            "title": "\u7a7a\u884c"
        }, 
        {
            "location": "/python_style_rules/#_7", 
            "text": ".. tip::\n    \u6309\u7167\u6807\u51c6\u7684\u6392\u7248\u89c4\u8303\u6765\u4f7f\u7528\u6807\u70b9\u4e24\u8fb9\u7684\u7a7a\u683c  \u62ec\u53f7\u5185\u4e0d\u8981\u6709\u7a7a\u683c.  .. code-block:: python  Yes: spam(ham[1], {eggs: 2}, [])  .. code-block:: python  No:  spam( ham[ 1 ], { eggs: 2 }, [ ] )  \u4e0d\u8981\u5728\u9017\u53f7, \u5206\u53f7, \u5192\u53f7\u524d\u9762\u52a0\u7a7a\u683c, \u4f46\u5e94\u8be5\u5728\u5b83\u4eec\u540e\u9762\u52a0(\u9664\u4e86\u5728\u884c\u5c3e).  .. code-block:: python  Yes: if x == 4:\n         print x, y\n     x, y = y, x  .. code-block:: python  No:  if x == 4 :\n         print x , y\n     x , y = y , x  \u53c2\u6570\u5217\u8868, \u7d22\u5f15\u6216\u5207\u7247\u7684\u5de6\u62ec\u53f7\u524d\u4e0d\u5e94\u52a0\u7a7a\u683c.  .. code-block:: python  Yes: spam(1)  .. code-block:: python  no: spam (1)  .. code-block:: python  Yes: dict['key'] = list[index]  .. code-block:: python  No:  dict ['key'] = list [index]  \u5728\u4e8c\u5143\u64cd\u4f5c\u7b26\u4e24\u8fb9\u90fd\u52a0\u4e0a\u4e00\u4e2a\u7a7a\u683c, \u6bd4\u5982\u8d4b\u503c(=), \u6bd4\u8f83(==,  ,  , !=,  ,  =,  =, in, not in, is, is not), \u5e03\u5c14(and, or, not).  \u81f3\u4e8e\u7b97\u672f\u64cd\u4f5c\u7b26\u4e24\u8fb9\u7684\u7a7a\u683c\u8be5\u5982\u4f55\u4f7f\u7528, \u9700\u8981\u4f60\u81ea\u5df1\u597d\u597d\u5224\u65ad. \u4e0d\u8fc7\u4e24\u4fa7\u52a1\u5fc5\u8981\u4fdd\u6301\u4e00\u81f4.  .. code-block:: python  Yes: x == 1  .. code-block:: python  No:  x 1  \u5f53'='\u7528\u4e8e\u6307\u793a\u5173\u952e\u5b57\u53c2\u6570\u6216\u9ed8\u8ba4\u53c2\u6570\u503c\u65f6, \u4e0d\u8981\u5728\u5176\u4e24\u4fa7\u4f7f\u7528\u7a7a\u683c.  .. code-block:: python  Yes: def complex(real, imag=0.0): return magic(r=real, i=imag)  .. code-block:: python  No:  def complex(real, imag = 0.0): return magic(r = real, i = imag)  \u4e0d\u8981\u7528\u7a7a\u683c\u6765\u5782\u76f4\u5bf9\u9f50\u591a\u884c\u95f4\u7684\u6807\u8bb0, \u56e0\u4e3a\u8fd9\u4f1a\u6210\u4e3a\u7ef4\u62a4\u7684\u8d1f\u62c5(\u9002\u7528\u4e8e:, #, =\u7b49):  .. code-block:: python  Yes:\n     foo = 1000  # comment\n     long_name = 2  # comment that should not be aligned\n\n     dictionary = {\n         \"foo\": 1,\n         \"long_name\": 2,\n         }  .. code-block:: python  No:\n     foo       = 1000  # comment\n     long_name = 2     # comment that should not be aligned\n\n     dictionary = {\n         \"foo\"      : 1,\n         \"long_name\": 2,\n         }", 
            "title": "\u7a7a\u683c"
        }, 
        {
            "location": "/python_style_rules/#shebang", 
            "text": ".. tip::\n    \u5927\u90e8\u5206.py\u6587\u4ef6\u4e0d\u5fc5\u4ee5#!\u4f5c\u4e3a\u6587\u4ef6\u7684\u5f00\u59cb. \u6839\u636e  PEP-394  http://www.python.org/dev/peps/pep-0394/ _ , \u7a0b\u5e8f\u7684main\u6587\u4ef6\u5e94\u8be5\u4ee5 #!/usr/bin/python2\u6216\u8005 #!/usr/bin/python3\u5f00\u59cb.  (\u8bd1\u8005\u6ce8: \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d,  Shebang  http://en.wikipedia.org/wiki/Shebang_(Unix) _ (\u4e5f\u79f0\u4e3aHashbang)\u662f\u4e00\u4e2a\u7531\u4e95\u53f7\u548c\u53f9\u53f7\u6784\u6210\u7684\u5b57\u7b26\u4e32\u884c(#!), \u5176\u51fa\u73b0\u5728\u6587\u672c\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u7684\u524d\u4e24\u4e2a\u5b57\u7b26. \u5728\u6587\u4ef6\u4e2d\u5b58\u5728Shebang\u7684\u60c5\u51b5\u4e0b, \u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u7684\u7a0b\u5e8f\u8f7d\u5165\u5668\u4f1a\u5206\u6790Shebang\u540e\u7684\u5185\u5bb9, \u5c06\u8fd9\u4e9b\u5185\u5bb9\u4f5c\u4e3a\u89e3\u91ca\u5668\u6307\u4ee4, \u5e76\u8c03\u7528\u8be5\u6307\u4ee4, \u5e76\u5c06\u8f7d\u6709Shebang\u7684\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u8be5\u89e3\u91ca\u5668\u7684\u53c2\u6570. \u4f8b\u5982, \u4ee5\u6307\u4ee4#!/bin/sh\u5f00\u5934\u7684\u6587\u4ef6\u5728\u6267\u884c\u65f6\u4f1a\u5b9e\u9645\u8c03\u7528/bin/sh\u7a0b\u5e8f.)", 
            "title": "Shebang"
        }, 
        {
            "location": "/python_style_rules/#python_1", 
            "text": ".. _comments:", 
            "title": "!\u5148\u7528\u4e8e\u5e2e\u52a9\u5185\u6838\u627e\u5230Python\u89e3\u91ca\u5668, \u4f46\u662f\u5728\u5bfc\u5165\u6a21\u5757\u65f6, \u5c06\u4f1a\u88ab\u5ffd\u7565. \u56e0\u6b64\u53ea\u6709\u88ab\u76f4\u63a5\u6267\u884c\u7684\u6587\u4ef6\u4e2d\u624d\u6709\u5fc5\u8981\u52a0\u5165#!."
        }, 
        {
            "location": "/python_style_rules/#_8", 
            "text": ".. tip::\n    \u786e\u4fdd\u5bf9\u6a21\u5757, \u51fd\u6570, \u65b9\u6cd5\u548c\u884c\u5185\u6ce8\u91ca\u4f7f\u7528\u6b63\u786e\u7684\u98ce\u683c  \u6587\u6863\u5b57\u7b26\u4e32  Python\u6709\u4e00\u79cd\u72ec\u4e00\u65e0\u4e8c\u7684\u7684\u6ce8\u91ca\u65b9\u5f0f: \u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32. \u6587\u6863\u5b57\u7b26\u4e32\u662f\u5305, \u6a21\u5757, \u7c7b\u6216\u51fd\u6570\u91cc\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5. \u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684__doc__\u6210\u5458\u88ab\u81ea\u52a8\u63d0\u53d6, \u5e76\u4e14\u88abpydoc\u6240\u7528. (\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6a21\u5757\u4e0a\u8fd0\u884cpydoc\u8bd5\u4e00\u628a, \u770b\u770b\u5b83\u957f\u4ec0\u4e48\u6837). \u6211\u4eec\u5bf9\u6587\u6863\u5b57\u7b26\u4e32\u7684\u60ef\u4f8b\u662f\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\"\"\"( `PEP-257  http://www.python.org/dev/peps/pep-0257/ `_ ). \u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u8fd9\u6837\u7ec4\u7ec7: \u9996\u5148\u662f\u4e00\u884c\u4ee5\u53e5\u53f7, \u95ee\u53f7\u6216\u60ca\u53f9\u53f7\u7ed3\u5c3e\u7684\u6982\u8ff0(\u6216\u8005\u8be5\u6587\u6863\u5b57\u7b26\u4e32\u5355\u7eaf\u53ea\u6709\u4e00\u884c). \u63a5\u7740\u662f\u4e00\u4e2a\u7a7a\u884c. \u63a5\u7740\u662f\u6587\u6863\u5b57\u7b26\u4e32\u5269\u4e0b\u7684\u90e8\u5206, \u5b83\u5e94\u8be5\u4e0e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u5bf9\u9f50. \u4e0b\u9762\u6709\u66f4\u591a\u6587\u6863\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5316\u89c4\u8303.  \u6a21\u5757  \u6bcf\u4e2a\u6587\u4ef6\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u8bb8\u53ef\u6837\u677f. \u6839\u636e\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef(\u4f8b\u5982, Apache 2.0, BSD, LGPL, GPL), \u9009\u62e9\u5408\u9002\u7684\u6837\u677f.  \u51fd\u6570\u548c\u65b9\u6cd5  \u4e0b\u6587\u6240\u6307\u7684\u51fd\u6570,\u5305\u62ec\u51fd\u6570, \u65b9\u6cd5, \u4ee5\u53ca\u751f\u6210\u5668.\n\n\u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u6587\u6863\u5b57\u7b26\u4e32, \u9664\u975e\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6:\n\n#. \u5916\u90e8\u4e0d\u53ef\u89c1\n#. \u975e\u5e38\u77ed\u5c0f\n#. \u7b80\u5355\u660e\u4e86\n\n\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u5305\u542b\u51fd\u6570\u505a\u4ec0\u4e48, \u4ee5\u53ca\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8be6\u7ec6\u63cf\u8ff0. \u901a\u5e38, \u4e0d\u5e94\u8be5\u63cf\u8ff0\"\u600e\u4e48\u505a\", \u9664\u975e\u662f\u4e00\u4e9b\u590d\u6742\u7684\u7b97\u6cd5. \u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u63d0\u4f9b\u8db3\u591f\u7684\u4fe1\u606f, \u5f53\u522b\u4eba\u7f16\u5199\u4ee3\u7801\u8c03\u7528\u8be5\u51fd\u6570\u65f6, \u4ed6\u4e0d\u9700\u8981\u770b\u4e00\u884c\u4ee3\u7801, \u53ea\u8981\u770b\u6587\u6863\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5\u4e86. \u5bf9\u4e8e\u590d\u6742\u7684\u4ee3\u7801, \u5728\u4ee3\u7801\u65c1\u8fb9\u52a0\u6ce8\u91ca\u4f1a\u6bd4\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u66f4\u6709\u610f\u4e49.\n\n\u5173\u4e8e\u51fd\u6570\u7684\u51e0\u4e2a\u65b9\u9762\u5e94\u8be5\u5728\u7279\u5b9a\u7684\u5c0f\u8282\u4e2d\u8fdb\u884c\u63cf\u8ff0\u8bb0\u5f55\uff0c \u8fd9\u51e0\u4e2a\u65b9\u9762\u5982\u4e0b\u6587\u6240\u8ff0. \u6bcf\u8282\u5e94\u8be5\u4ee5\u4e00\u4e2a\u6807\u9898\u884c\u5f00\u59cb. \u6807\u9898\u884c\u4ee5\u5192\u53f7\u7ed3\u5c3e. \u9664\u6807\u9898\u884c\u5916, \u8282\u7684\u5176\u4ed6\u5185\u5bb9\u5e94\u88ab\u7f29\u8fdb2\u4e2a\u7a7a\u683c.\n\nArgs:\n    \u5217\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57, \u5e76\u5728\u540d\u5b57\u540e\u4f7f\u7528\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c, \u5206\u9694\u5bf9\u8be5\u53c2\u6570\u7684\u63cf\u8ff0.\u5982\u679c\u63cf\u8ff0\u592a\u957f\u8d85\u8fc7\u4e86\u5355\u884c80\u5b57\u7b26,\u4f7f\u75282\u6216\u80054\u4e2a\u7a7a\u683c\u7684\u60ac\u6302\u7f29\u8fdb(\u4e0e\u6587\u4ef6\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4e00\u81f4).\n    \u63cf\u8ff0\u5e94\u8be5\u5305\u62ec\u6240\u9700\u7684\u7c7b\u578b\u548c\u542b\u4e49.\n    \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u53d7*foo(\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5217\u8868)\u6216\u8005**bar (\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570), \u5e94\u8be5\u8be6\u7ec6\u5217\u51fa*foo\u548c**bar.\n\nReturns: (\u6216\u8005 Yields: \u7528\u4e8e\u751f\u6210\u5668)\n    \u63cf\u8ff0\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8bed\u4e49. \u5982\u679c\u51fd\u6570\u8fd4\u56deNone, \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7701\u7565.\n\nRaises:\n    \u5217\u51fa\u4e0e\u63a5\u53e3\u6709\u5173\u7684\u6240\u6709\u5f02\u5e38.\n\n.. code-block:: python\n\n    def fetch_bigtable_rows(big_table, keys, other_silly_variable=None):\n        \"\"\"Fetches rows from a Bigtable.\n\n        Retrieves rows pertaining to the given keys from the Table instance\n        represented by big_table.  Silly things may happen if\n        other_silly_variable is not None.\n\n        Args:\n            big_table: An open Bigtable Table instance.\n            keys: A sequence of strings representing the key of each table row\n                to fetch.\n            other_silly_variable: Another optional variable, that has a much\n                longer name than the other args, and which does nothing.\n\n        Returns:\n            A dict mapping keys to the corresponding table row data\n            fetched. Each row is represented as a tuple of strings. For\n            example:\n\n            {'Serak': ('Rigel VII', 'Preparer'),\n             'Zim': ('Irk', 'Invader'),\n             'Lrrr': ('Omicron Persei 8', 'Emperor')}\n\n            If a key from the keys argument is missing from the dictionary,\n            then that row was not found in the table.\n\n        Raises:\n            IOError: An error occurred accessing the bigtable.Table object.\n        \"\"\"\n        pass  \u7c7b  \u7c7b\u5e94\u8be5\u5728\u5176\u5b9a\u4e49\u4e0b\u6709\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u8be5\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32. \u5982\u679c\u4f60\u7684\u7c7b\u6709\u516c\u5171\u5c5e\u6027(Attributes), \u90a3\u4e48\u6587\u6863\u4e2d\u5e94\u8be5\u6709\u4e00\u4e2a\u5c5e\u6027(Attributes)\u6bb5. \u5e76\u4e14\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u53c2\u6570\u76f8\u540c\u7684\u683c\u5f0f.\n\n.. code-block:: python\n\n    class SampleClass(object):\n        \"\"\"Summary of class here.\n\n        Longer class information....\n        Longer class information....\n\n        Attributes:\n            likes_spam: A boolean indicating if we like SPAM or not.\n            eggs: An integer count of the eggs we have laid.\n        \"\"\"\n\n        def __init__(self, likes_spam=False):\n            \"\"\"Inits SampleClass with blah.\"\"\"\n            self.likes_spam = likes_spam\n            self.eggs = 0\n\n        def public_method(self):\n            \"\"\"Performs operation blah.\"\"\"  \u5757\u6ce8\u91ca\u548c\u884c\u6ce8\u91ca  \u6700\u9700\u8981\u5199\u6ce8\u91ca\u7684\u662f\u4ee3\u7801\u4e2d\u90a3\u4e9b\u6280\u5de7\u6027\u7684\u90e8\u5206. \u5982\u679c\u4f60\u5728\u4e0b\u6b21 `\u4ee3\u7801\u5ba1\u67e5  http://en.wikipedia.org/wiki/Code_review `_ \u7684\u65f6\u5019\u5fc5\u987b\u89e3\u91ca\u4e00\u4e0b, \u90a3\u4e48\u4f60\u5e94\u8be5\u73b0\u5728\u5c31\u7ed9\u5b83\u5199\u6ce8\u91ca. \u5bf9\u4e8e\u590d\u6742\u7684\u64cd\u4f5c, \u5e94\u8be5\u5728\u5176\u64cd\u4f5c\u5f00\u59cb\u524d\u5199\u4e0a\u82e5\u5e72\u884c\u6ce8\u91ca. \u5bf9\u4e8e\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u4ee3\u7801, \u5e94\u5728\u5176\u884c\u5c3e\u6dfb\u52a0\u6ce8\u91ca.\n\n.. code-block:: python\n\n    # We use a weighted dictionary search to find out where i is in\n    # the array.  We extrapolate position based on the largest num\n    # in the array and the array size and then do binary search to\n    # get the exact number.\n\n    if i   (i-1) == 0:        # true iff i is a power of 2\n\n\u4e3a\u4e86\u63d0\u9ad8\u53ef\u8bfb\u6027, \u6ce8\u91ca\u5e94\u8be5\u81f3\u5c11\u79bb\u5f00\u4ee3\u78012\u4e2a\u7a7a\u683c.\n\n\u53e6\u4e00\u65b9\u9762, \u7edd\u4e0d\u8981\u63cf\u8ff0\u4ee3\u7801. \u5047\u8bbe\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u6bd4\u4f60\u66f4\u61c2Python, \u4ed6\u53ea\u662f\u4e0d\u77e5\u9053\u4f60\u7684\u4ee3\u7801\u8981\u505a\u4ec0\u4e48.\n\n.. code-block:: python\n\n    # BAD COMMENT: Now go through the b array and make sure whenever i occurs\n    # the next element is i+1", 
            "title": "\u6ce8\u91ca"
        }, 
        {
            "location": "/python_style_rules/#_9", 
            "text": ".. tip::\n    \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u7ee7\u627f\u81ea\u5176\u5b83\u7c7b, \u5c31\u663e\u5f0f\u7684\u4eceobject\u7ee7\u627f. \u5d4c\u5957\u7c7b\u4e5f\u4e00\u6837.  .. code-block:: python  Yes: class SampleClass(object):\n         pass\n\n\n     class OuterClass(object):\n\n         class InnerClass(object):\n             pass\n\n\n     class ChildClass(ParentClass):\n         \"\"\"Explicitly inherits from another class already.\"\"\"  .. code-block:: python  No: class SampleClass:\n        pass\n\n\n    class OuterClass:\n\n        class InnerClass:\n            pass  \u7ee7\u627f\u81ea  object  \u662f\u4e3a\u4e86\u4f7f\u5c5e\u6027(properties)\u6b63\u5e38\u5de5\u4f5c, \u5e76\u4e14\u8fd9\u6837\u53ef\u4ee5\u4fdd\u62a4\u4f60\u7684\u4ee3\u7801, \u4f7f\u5176\u4e0d\u53d7  PEP-3000  http://www.python.org/dev/peps/pep-3000/ _ \u7684\u4e00\u4e2a\u7279\u6b8a\u7684\u6f5c\u5728\u4e0d\u517c\u5bb9\u6027\u5f71\u54cd. \u8fd9\u6837\u505a\u4e5f\u5b9a\u4e49\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u65b9\u6cd5, \u8fd9\u4e9b\u65b9\u6cd5\u5b9e\u73b0\u4e86\u5bf9\u8c61\u7684\u9ed8\u8ba4\u8bed\u4e49, \u5305\u62ec  __new__, __init__, __delattr__, __getattribute__, __setattr__, __hash__, __repr__, and __str__  .", 
            "title": "\u7c7b"
        }, 
        {
            "location": "/python_style_rules/#_10", 
            "text": ".. tip::\n    \u5373\u4f7f\u53c2\u6570\u90fd\u662f\u5b57\u7b26\u4e32, \u4f7f\u7528%\u64cd\u4f5c\u7b26\u6216\u8005\u683c\u5f0f\u5316\u65b9\u6cd5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32. \u4e0d\u8fc7\u4e5f\u4e0d\u80fd\u4e00\u6982\u800c\u8bba, \u4f60\u9700\u8981\u5728+\u548c%\u4e4b\u95f4\u597d\u597d\u5224\u5b9a.  .. code-block:: python  Yes: x = a + b\n     x = '%s, %s!' % (imperative, expletive)\n     x = '{}, {}!'.format(imperative, expletive)\n     x = 'name: %s; score: %d' % (name, n)\n     x = 'name: {}; score: {}'.format(name, n)  .. code-block:: python  No: x = '%s%s' % (a, b)  # use + in this case\n    x = '{}{}'.format(a, b)  # use + in this case\n    x = imperative + ', ' + expletive + '!'\n    x = 'name: ' + name + '; score: ' + str(n)  \u907f\u514d\u5728\u5faa\u73af\u4e2d\u7528+\u548c+=\u64cd\u4f5c\u7b26\u6765\u7d2f\u52a0\u5b57\u7b26\u4e32. \u7531\u4e8e\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684, \u8fd9\u6837\u505a\u4f1a\u521b\u5efa\u4e0d\u5fc5\u8981\u7684\u4e34\u65f6\u5bf9\u8c61, \u5e76\u4e14\u5bfc\u81f4\u4e8c\u6b21\u65b9\u800c\u4e0d\u662f\u7ebf\u6027\u7684\u8fd0\u884c\u65f6\u95f4. \u4f5c\u4e3a\u66ff\u4ee3\u65b9\u6848, \u4f60\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5b50\u4e32\u52a0\u5165\u5217\u8868, \u7136\u540e\u5728\u5faa\u73af\u7ed3\u675f\u540e\u7528  .join  \u8fde\u63a5\u5217\u8868. (\u4e5f\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5b50\u4e32\u5199\u5165\u4e00\u4e2a  cStringIO.StringIO  \u7f13\u5b58\u4e2d.)  .. code-block:: python  Yes: items = [' table ']\n     for last_name, first_name in employee_list:\n         items.append(' tr td %s, %s /td /tr ' % (last_name, first_name))\n     items.append(' /table ')\n     employee_table = ''.join(items)  .. code-block:: python  No: employee_table = ' table '\n    for last_name, first_name in employee_list:\n        employee_table += ' tr td %s, %s /td /tr ' % (last_name, first_name)\n    employee_table += ' /table '  \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d, \u4fdd\u6301\u4f7f\u7528\u5b57\u7b26\u4e32\u5f15\u53f7\u7684\u4e00\u81f4\u6027. \u4f7f\u7528\u5355\u5f15\u53f7'\u6216\u8005\u53cc\u5f15\u53f7\"\u4e4b\u4e00\u7528\u4ee5\u5f15\u7528\u5b57\u7b26\u4e32, \u5e76\u5728\u540c\u4e00\u6587\u4ef6\u4e2d\u6cbf\u7528. \u5728\u5b57\u7b26\u4e32\u5185\u53ef\u4ee5\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u5f15\u53f7, \u4ee5\u907f\u514d\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528. GPyLint\u5df2\u7ecf\u52a0\u5165\u4e86\u8fd9\u4e00\u68c0\u67e5.  (\u8bd1\u8005\u6ce8:GPyLint\u7591\u4e3a\u7b14\u8bef, \u5e94\u4e3aPyLint.)  .. code-block:: python  Yes:\n        Python('Why are you hiding your eyes?')\n        Gollum(\"I'm scared of lint errors.\")\n        Narrator('\"Good!\" thought a happy Python reviewer.')  .. code-block:: python  No:\n        Python(\"Why are you hiding your eyes?\")\n        Gollum('The lint. It burns. It burns us.')\n        Gollum(\"Always the great lint. Watching. Watching.\")  \u4e3a\u591a\u884c\u5b57\u7b26\u4e32\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\"\"\"\u800c\u975e\u4e09\u91cd\u5355\u5f15\u53f7'''. \u5f53\u4e14\u4ec5\u5f53\u9879\u76ee\u4e2d\u4f7f\u7528\u5355\u5f15\u53f7'\u6765\u5f15\u7528\u5b57\u7b26\u4e32\u65f6, \u624d\u53ef\u80fd\u4f1a\u4f7f\u7528\u4e09\u91cd'''\u4e3a\u975e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u591a\u884c\u5b57\u7b26\u4e32\u6765\u6807\u8bc6\u5f15\u7528. \u6587\u6863\u5b57\u7b26\u4e32\u5fc5\u987b\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\"\"\". \u4e0d\u8fc7\u8981\u6ce8\u610f, \u901a\u5e38\u7528\u9690\u5f0f\u884c\u8fde\u63a5\u66f4\u6e05\u6670, \u56e0\u4e3a\u591a\u884c\u5b57\u7b26\u4e32\u4e0e\u7a0b\u5e8f\u5176\u4ed6\u90e8\u5206\u7684\u7f29\u8fdb\u65b9\u5f0f\u4e0d\u4e00\u81f4.  .. code-block:: python  Yes:\n    print (\"This is much nicer.\\n\"\n           \"Do it this way.\\n\")  .. code-block:: python  No:\n      print \"\"\"This is pretty ugly.\n  Don't do this.\n  \"\"\"", 
            "title": "\u5b57\u7b26\u4e32"
        }, 
        {
            "location": "/python_style_rules/#sockets", 
            "text": ".. tip::\n    \u5728\u6587\u4ef6\u548csockets\u7ed3\u675f\u65f6, \u663e\u5f0f\u7684\u5173\u95ed\u5b83.  \u9664\u6587\u4ef6\u5916, sockets\u6216\u5176\u4ed6\u7c7b\u4f3c\u6587\u4ef6\u7684\u5bf9\u8c61\u5728\u6ca1\u6709\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\u6253\u5f00, \u4f1a\u6709\u8bb8\u591a\u526f\u4f5c\u7528, \u4f8b\u5982:", 
            "title": "\u6587\u4ef6\u548csockets"
        }, 
        {
            "location": "/python_style_rules/#_11", 
            "text": "", 
            "title": ". \u5b83\u4eec\u53ef\u80fd\u4f1a\u6d88\u8017\u6709\u9650\u7684\u7cfb\u7edf\u8d44\u6e90, \u5982\u6587\u4ef6\u63cf\u8ff0\u7b26. \u5982\u679c\u8fd9\u4e9b\u8d44\u6e90\u5728\u4f7f\u7528\u540e\u6ca1\u6709\u53ca\u65f6\u5f52\u8fd8\u7cfb\u7edf, \u90a3\u4e48\u7528\u4e8e\u5904\u7406\u8fd9\u4e9b\u5bf9\u8c61\u7684\u4ee3\u7801\u4f1a\u5c06\u8d44\u6e90\u6d88\u8017\u6b86\u5c3d."
        }, 
        {
            "location": "/python_style_rules/#_12", 
            "text": "", 
            "title": ". \u6301\u6709\u6587\u4ef6\u5c06\u4f1a\u963b\u6b62\u5bf9\u4e8e\u6587\u4ef6\u7684\u5176\u4ed6\u8bf8\u5982\u79fb\u52a8\u3001\u5220\u9664\u4e4b\u7c7b\u7684\u64cd\u4f5c."
        }, 
        {
            "location": "/python_style_rules/#sockets_1", 
            "text": "\u800c\u4e14, \u5e7b\u60f3\u5f53\u6587\u4ef6\u5bf9\u8c61\u6790\u6784\u65f6, \u6587\u4ef6\u548csockets\u4f1a\u81ea\u52a8\u5173\u95ed, \u8bd5\u56fe\u5c06\u6587\u4ef6\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u548c\u6587\u4ef6\u7684\u72b6\u6001\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\u60f3\u6cd5, \u90fd\u662f\u4e0d\u73b0\u5b9e\u7684. \u56e0\u4e3a\u6709\u5982\u4e0b\u539f\u56e0:", 
            "title": ". \u4ec5\u4ec5\u662f\u4ece\u903b\u8f91\u4e0a\u5173\u95ed\u6587\u4ef6\u548csockets, \u90a3\u4e48\u5b83\u4eec\u4ecd\u7136\u53ef\u80fd\u4f1a\u88ab\u5176\u5171\u4eab\u7684\u7a0b\u5e8f\u5728\u65e0\u610f\u4e2d\u8fdb\u884c\u8bfb\u6216\u8005\u5199\u64cd\u4f5c. \u53ea\u6709\u5f53\u5b83\u4eec\u771f\u6b63\u88ab\u5173\u95ed\u540e, \u5bf9\u4e8e\u5b83\u4eec\u5c1d\u8bd5\u8fdb\u884c\u8bfb\u6216\u8005\u5199\u64cd\u4f5c\u5c06\u4f1a\u8dd1\u51fa\u5f02\u5e38, \u5e76\u4f7f\u5f97\u95ee\u9898\u5feb\u901f\u663e\u73b0\u51fa\u6765."
        }, 
        {
            "location": "/python_style_rules/#python_2", 
            "text": "", 
            "title": ". \u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\u53ef\u4ee5\u786e\u4fdd\u8fd0\u884c\u73af\u5883\u4f1a\u771f\u6b63\u7684\u6267\u884c\u6587\u4ef6\u7684\u6790\u6784. \u4e0d\u540c\u7684Python\u5b9e\u73b0\u91c7\u7528\u4e0d\u540c\u7684\u5185\u5b58\u7ba1\u7406\u6280\u672f, \u6bd4\u5982\u5ef6\u65f6\u5783\u573e\u5904\u7406\u673a\u5236. \u5ef6\u65f6\u5783\u573e\u5904\u7406\u673a\u5236\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5bf9\u8c61\u751f\u547d\u5468\u671f\u88ab\u4efb\u610f\u65e0\u9650\u5236\u7684\u5ef6\u957f."
        }, 
        {
            "location": "/python_style_rules/#_13", 
            "text": "\u63a8\u8350\u4f7f\u7528  \"with\"\u8bed\u53e5  http://docs.python.org/reference/compound_stmts.html#the-with-statement _ \u4ee5\u7ba1\u7406\u6587\u4ef6:  .. code-block:: python    with open(\"hello.txt\") as hello_file:\n      for line in hello_file:\n          print line  \u5bf9\u4e8e\u4e0d\u652f\u6301\u4f7f\u7528\"with\"\u8bed\u53e5\u7684\u7c7b\u4f3c\u6587\u4ef6\u7684\u5bf9\u8c61,\u4f7f\u7528 contextlib.closing():  .. code-block:: python    import contextlib\n\n  with contextlib.closing(urllib.urlopen(\"http://www.python.org/\")) as front_page:\n      for line in front_page:\n          print line  Legacy AppEngine \u4e2dPython 2.5\u7684\u4ee3\u7801\u5982\u4f7f\u7528\"with\"\u8bed\u53e5, \u9700\u8981\u6dfb\u52a0 \"from  future  import with_statement\".", 
            "title": ". \u5bf9\u4e8e\u6587\u4ef6\u610f\u5916\u7684\u5f15\u7528,\u4f1a\u5bfc\u81f4\u5bf9\u4e8e\u6587\u4ef6\u7684\u6301\u6709\u65f6\u95f4\u8d85\u51fa\u9884\u671f(\u6bd4\u5982\u5bf9\u4e8e\u5f02\u5e38\u7684\u8ddf\u8e2a, \u5305\u542b\u6709\u5168\u5c40\u53d8\u91cf\u7b49)."
        }, 
        {
            "location": "/python_style_rules/#todo", 
            "text": ".. tip::\n    \u4e3a\u4e34\u65f6\u4ee3\u7801\u4f7f\u7528TODO\u6ce8\u91ca, \u5b83\u662f\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848. \u4e0d\u7b97\u5b8c\u7f8e, \u4f46\u591f\u597d\u4e86.  TODO\u6ce8\u91ca\u5e94\u8be5\u5728\u6240\u6709\u5f00\u5934\u5904\u5305\u542b\"TODO\"\u5b57\u7b26\u4e32, \u7d27\u8ddf\u7740\u662f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4f60\u7684\u540d\u5b57, email\u5730\u5740\u6216\u5176\u5b83\u6807\u8bc6\u7b26. \u7136\u540e\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5192\u53f7. \u63a5\u7740\u5fc5\u987b\u6709\u4e00\u884c\u6ce8\u91ca, \u89e3\u91ca\u8981\u505a\u4ec0\u4e48. \u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u7edf\u4e00\u7684TODO\u683c\u5f0f, \u8fd9\u6837\u6dfb\u52a0\u6ce8\u91ca\u7684\u4eba\u5c31\u53ef\u4ee5\u641c\u7d22\u5230(\u5e76\u53ef\u4ee5\u6309\u9700\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282). \u5199\u4e86TODO\u6ce8\u91ca\u5e76\u4e0d\u4fdd\u8bc1\u5199\u7684\u4eba\u4f1a\u4eb2\u81ea\u89e3\u51b3\u95ee\u9898. \u5f53\u4f60\u5199\u4e86\u4e00\u4e2aTODO, \u8bf7\u6ce8\u4e0a\u4f60\u7684\u540d\u5b57.  .. code-block:: python  # TODO(kl@gmail.com): Use a \"*\" here for string repetition.\n# TODO(Zeke) Change this to use relations.  \u5982\u679c\u4f60\u7684TODO\u662f\"\u5c06\u6765\u505a\u67d0\u4e8b\"\u7684\u5f62\u5f0f, \u90a3\u4e48\u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u65e5\u671f(\"2009\u5e7411\u6708\u89e3\u51b3\")\u6216\u8005\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6(\"\u7b49\u5230\u6240\u6709\u7684\u5ba2\u6237\u90fd\u53ef\u4ee5\u5904\u7406XML\u8bf7\u6c42\u5c31\u79fb\u9664\u8fd9\u4e9b\u4ee3\u7801\").", 
            "title": "TODO\u6ce8\u91ca"
        }, 
        {
            "location": "/python_style_rules/#_14", 
            "text": ".. tip::\n    \u6bcf\u4e2a\u5bfc\u5165\u5e94\u8be5\u72ec\u5360\u4e00\u884c  .. code-block:: python  Yes: import os\n     import sys  .. code-block:: python  No:  import os, sys  \u5bfc\u5165\u603b\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u9876\u90e8, \u4f4d\u4e8e\u6a21\u5757\u6ce8\u91ca\u548c\u6587\u6863\u5b57\u7b26\u4e32\u4e4b\u540e, \u6a21\u5757\u5168\u5c40\u53d8\u91cf\u548c\u5e38\u91cf\u4e4b\u524d.  \u5bfc\u5165\u5e94\u8be5\u6309\u7167\u4ece\u6700\u901a\u7528\u5230\u6700\u4e0d\u901a\u7528\u7684\u987a\u5e8f\u5206\u7ec4:", 
            "title": "\u5bfc\u5165\u683c\u5f0f"
        }, 
        {
            "location": "/python_style_rules/#_15", 
            "text": "", 
            "title": ". \u6807\u51c6\u5e93\u5bfc\u5165"
        }, 
        {
            "location": "/python_style_rules/#_16", 
            "text": "", 
            "title": ". \u7b2c\u4e09\u65b9\u5e93\u5bfc\u5165"
        }, 
        {
            "location": "/python_style_rules/#_17", 
            "text": "\u6bcf\u79cd\u5206\u7ec4\u4e2d,  \u5e94\u8be5\u6839\u636e\u6bcf\u4e2a\u6a21\u5757\u7684\u5b8c\u6574\u5305\u8def\u5f84\u6309\u5b57\u5178\u5e8f\u6392\u5e8f, \u5ffd\u7565\u5927\u5c0f\u5199.  .. code-block:: python  import foo\nfrom foo import bar\nfrom foo.bar import baz\nfrom foo.bar import Quux\nfrom Foob import ar", 
            "title": ". \u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u5bfc\u5165"
        }, 
        {
            "location": "/python_style_rules/#_18", 
            "text": ".. tip::\n    \u901a\u5e38\u6bcf\u4e2a\u8bed\u53e5\u5e94\u8be5\u72ec\u5360\u4e00\u884c  \u4e0d\u8fc7, \u5982\u679c\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u6d4b\u8bd5\u8bed\u53e5\u5728\u4e00\u884c\u653e\u5f97\u4e0b, \u4f60\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u653e\u5728\u540c\u4e00\u884c.  \u5982\u679c\u662fif\u8bed\u53e5, \u53ea\u6709\u5728\u6ca1\u6709else\u65f6\u624d\u80fd\u8fd9\u6837\u505a. \u7279\u522b\u5730, \u7edd\u4e0d\u8981\u5bf9  try/except  \u8fd9\u6837\u505a, \u56e0\u4e3atry\u548cexcept\u4e0d\u80fd\u653e\u5728\u540c\u4e00\u884c.  .. code-block:: python  Yes:\n\n  if foo: bar(foo)  .. code-block:: python  No:\n\n  if foo: bar(foo)\n  else:   baz(foo)\n\n  try:               bar(foo)\n  except ValueError: baz(foo)\n\n  try:\n      bar(foo)\n  except ValueError: baz(foo)", 
            "title": "\u8bed\u53e5"
        }, 
        {
            "location": "/python_style_rules/#_19", 
            "text": ".. tip::\n    \u5728Python\u4e2d, \u5bf9\u4e8e\u7410\u788e\u53c8\u4e0d\u592a\u91cd\u8981\u7684\u8bbf\u95ee\u51fd\u6570, \u4f60\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u516c\u6709\u53d8\u91cf\u6765\u53d6\u4ee3\u5b83\u4eec, \u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u989d\u5916\u7684\u51fd\u6570\u8c03\u7528\u5f00\u9500. \u5f53\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u65f6, \u4f60\u53ef\u4ee5\u7528\u5c5e\u6027(property)\u6765\u4fdd\u6301\u8bed\u6cd5\u7684\u4e00\u81f4\u6027.  (\u8bd1\u8005\u6ce8: \u91cd\u89c6\u5c01\u88c5\u7684\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u5458\u770b\u5230\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u5f88\u53cd\u611f, \u56e0\u4e3a\u4ed6\u4eec\u4e00\u76f4\u88ab\u6559\u80b2: \u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u5fc5\u987b\u662f\u79c1\u6709\u7684! \u5176\u5b9e, \u90a3\u771f\u7684\u662f\u6709\u70b9\u9ebb\u70e6\u554a. \u8bd5\u7740\u53bb\u63a5\u53d7Pythonic\u54f2\u5b66\u5427)  \u53e6\u4e00\u65b9\u9762, \u5982\u679c\u8bbf\u95ee\u66f4\u590d\u6742, \u6216\u8005\u53d8\u91cf\u7684\u8bbf\u95ee\u5f00\u9500\u5f88\u663e\u8457, \u90a3\u4e48\u4f60\u5e94\u8be5\u4f7f\u7528\u50cf  get_foo()  \u548c  set_foo()  \u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528. \u5982\u679c\u4e4b\u524d\u7684\u4ee3\u7801\u884c\u4e3a\u5141\u8bb8\u901a\u8fc7\u5c5e\u6027(property)\u8bbf\u95ee , \u90a3\u4e48\u5c31\u4e0d\u8981\u5c06\u65b0\u7684\u8bbf\u95ee\u51fd\u6570\u4e0e\u5c5e\u6027\u7ed1\u5b9a. \u8fd9\u6837, \u4efb\u4f55\u8bd5\u56fe\u901a\u8fc7\u8001\u65b9\u6cd5\u8bbf\u95ee\u53d8\u91cf\u7684\u4ee3\u7801\u5c31\u6ca1\u6cd5\u8fd0\u884c, \u4f7f\u7528\u8005\u4e5f\u5c31\u4f1a\u610f\u8bc6\u5230\u590d\u6742\u6027\u53d1\u751f\u4e86\u53d8\u5316.", 
            "title": "\u8bbf\u95ee\u63a7\u5236"
        }, 
        {
            "location": "/python_style_rules/#_20", 
            "text": ".. tip::\n    module_name, package_name, ClassName, method_name, ExceptionName, function_name, GLOBAL_VAR_NAME, instance_var_name, function_parameter_name, local_var_name.  \u5e94\u8be5\u907f\u514d\u7684\u540d\u79f0  #. \u5355\u5b57\u7b26\u540d\u79f0, \u9664\u4e86\u8ba1\u6570\u5668\u548c\u8fed\u4ee3\u5668.\n#. \u5305/\u6a21\u5757\u540d\u4e2d\u7684\u8fde\u5b57\u7b26(-)\n#. \u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u5e76\u7ed3\u5c3e\u7684\u540d\u79f0(Python\u4fdd\u7559, \u4f8b\u5982__init__)  \u547d\u540d\u7ea6\u5b9a  #. \u6240\u8c13\"\u5185\u90e8(Internal)\"\u8868\u793a\u4ec5\u6a21\u5757\u5185\u53ef\u7528, \u6216\u8005, \u5728\u7c7b\u5185\u662f\u4fdd\u62a4\u6216\u79c1\u6709\u7684.\n#. \u7528\u5355\u4e0b\u5212\u7ebf(_)\u5f00\u5934\u8868\u793a\u6a21\u5757\u53d8\u91cf\u6216\u51fd\u6570\u662fprotected\u7684(\u4f7f\u7528import * from\u65f6\u4e0d\u4f1a\u5305\u542b).\n#. \u7528\u53cc\u4e0b\u5212\u7ebf(__)\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u8868\u793a\u7c7b\u5185\u79c1\u6709.\n#. \u5c06\u76f8\u5173\u7684\u7c7b\u548c\u9876\u7ea7\u51fd\u6570\u653e\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u91cc. \u4e0d\u50cfJava, \u6ca1\u5fc5\u8981\u9650\u5236\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6a21\u5757.\n#. \u5bf9\u7c7b\u540d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd(\u5982CapWords, \u5373Pascal\u98ce\u683c), \u4f46\u662f\u6a21\u5757\u540d\u5e94\u8be5\u7528\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f(\u5982lower_with_under.py). \u5c3d\u7ba1\u5df2\u7ecf\u6709\u5f88\u591a\u73b0\u5b58\u7684\u6a21\u5757\u4f7f\u7528\u7c7b\u4f3c\u4e8eCapWords.py\u8fd9\u6837\u7684\u547d\u540d, \u4f46\u73b0\u5728\u5df2\u7ecf\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a, \u56e0\u4e3a\u5982\u679c\u6a21\u5757\u540d\u78b0\u5de7\u548c\u7c7b\u540d\u4e00\u81f4, \u8fd9\u4f1a\u8ba9\u4eba\u56f0\u6270.  Python\u4e4b\u7236Guido\u63a8\u8350\u7684\u89c4\u8303  ===========================    ====================    ======================================================================\nType                           Public                  Internal\n===========================    ====================    ======================================================================\nModules                        lower_with_under        _lower_with_under\nPackages                       lower_with_under\nClasses                        CapWords                _CapWords\nExceptions                     CapWords\nFunctions                      lower_with_under()      _lower_with_under()\nGlobal/Class Constants         CAPS_WITH_UNDER         _CAPS_WITH_UNDER\nGlobal/Class Variables         lower_with_under        _lower_with_under\nInstance Variables             lower_with_under        _lower_with_under (protected) or  lower_with_under (private)\nMethod Names                   lower_with_under()      _lower_with_under() (protected) or  lower_with_under() (private)\nFunction/Method Parameters     lower_with_under\nLocal Variables                lower_with_under\n===========================    ====================    ======================================================================  .. _main:", 
            "title": "\u547d\u540d"
        }, 
        {
            "location": "/python_style_rules/#main", 
            "text": ".. tip::\n    \u5373\u4f7f\u662f\u4e00\u4e2a\u6253\u7b97\u88ab\u7528\u4f5c\u811a\u672c\u7684\u6587\u4ef6, \u4e5f\u5e94\u8be5\u662f\u53ef\u5bfc\u5165\u7684. \u5e76\u4e14\u7b80\u5355\u7684\u5bfc\u5165\u4e0d\u5e94\u8be5\u5bfc\u81f4\u8fd9\u4e2a\u811a\u672c\u7684\u4e3b\u529f\u80fd(main functionality)\u88ab\u6267\u884c, \u8fd9\u662f\u4e00\u79cd\u526f\u4f5c\u7528. \u4e3b\u529f\u80fd\u5e94\u8be5\u653e\u5728\u4e00\u4e2amain()\u51fd\u6570\u4e2d.  \u5728Python\u4e2d, pydoc\u4ee5\u53ca\u5355\u5143\u6d4b\u8bd5\u8981\u6c42\u6a21\u5757\u5fc5\u987b\u662f\u53ef\u5bfc\u5165\u7684. \u4f60\u7684\u4ee3\u7801\u5e94\u8be5\u5728\u6267\u884c\u4e3b\u7a0b\u5e8f\u524d\u603b\u662f\u68c0\u67e5  if __name__ == '__main__'  , \u8fd9\u6837\u5f53\u6a21\u5757\u88ab\u5bfc\u5165\u65f6\u4e3b\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c.  .. code-block:: python  def main():\n      ...\n\nif __name__ == '__main__':\n    main()  \u6240\u6709\u7684\u9876\u7ea7\u4ee3\u7801\u5728\u6a21\u5757\u5bfc\u5165\u65f6\u90fd\u4f1a\u88ab\u6267\u884c. \u8981\u5c0f\u5fc3\u4e0d\u8981\u53bb\u8c03\u7528\u51fd\u6570, \u521b\u5efa\u5bf9\u8c61, \u6216\u8005\u6267\u884c\u90a3\u4e9b\u4e0d\u5e94\u8be5\u5728\u4f7f\u7528pydoc\u65f6\u6267\u884c\u7684\u64cd\u4f5c.", 
            "title": "Main"
        }, 
        {
            "location": "/test/", 
            "text": "+OPTIONS: ':nil *:t -:t ::t \n:t H:3 \\n:nil ^:t arch:headline author:t c:nil\n\n\n+OPTIONS: creator:nil d:(not \"LOGBOOK\") date:t e:t email:nil f:t inline:t\n\n\n+OPTIONS: num:t p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t timestamp:t\n\n\n+OPTIONS: title:t toc:t todo:t |:t\n\n\n+TITLE: test\n\n\n+DATE: \n2017-05-07 Sun\n\n\n+AUTHOR: weiwu\n\n\n+EMAIL: victor.wuv@gmail.com\n\n\n+LANGUAGE: en\n\n\n+SELECT_TAGS: export\n\n\n+EXCLUDE_TAGS: noexport\n\n\n+CREATOR: Emacs 24.5.1 (Org mode 8.3.4)\n\n\nHello world.", 
            "title": "test"
        }, 
        {
            "location": "/test/#options-nil-t-t-t-t-h3-nnil-t-archheadline-authort-cnil", 
            "text": "", 
            "title": "+OPTIONS: ':nil *:t -:t ::t &lt;:t H:3 \\n:nil ^:t arch:headline author:t c:nil"
        }, 
        {
            "location": "/test/#options-creatornil-dnot-logbook-datet-et-emailnil-ft-inlinet", 
            "text": "", 
            "title": "+OPTIONS: creator:nil d:(not \"LOGBOOK\") date:t e:t email:nil f:t inline:t"
        }, 
        {
            "location": "/test/#options-numt-pnil-prinil-propnil-statt-tagst-taskst-text-timestampt", 
            "text": "", 
            "title": "+OPTIONS: num:t p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t timestamp:t"
        }, 
        {
            "location": "/test/#options-titlet-toct-todot-t", 
            "text": "", 
            "title": "+OPTIONS: title:t toc:t todo:t |:t"
        }, 
        {
            "location": "/test/#title-test", 
            "text": "", 
            "title": "+TITLE: test"
        }, 
        {
            "location": "/test/#date-2017-05-07-sun", 
            "text": "", 
            "title": "+DATE: &lt;2017-05-07 Sun&gt;"
        }, 
        {
            "location": "/test/#author-weiwu", 
            "text": "", 
            "title": "+AUTHOR: weiwu"
        }, 
        {
            "location": "/test/#email-victorwuvgmailcom", 
            "text": "", 
            "title": "+EMAIL: victor.wuv@gmail.com"
        }, 
        {
            "location": "/test/#language-en", 
            "text": "", 
            "title": "+LANGUAGE: en"
        }, 
        {
            "location": "/test/#select_tags-export", 
            "text": "", 
            "title": "+SELECT_TAGS: export"
        }, 
        {
            "location": "/test/#exclude_tags-noexport", 
            "text": "", 
            "title": "+EXCLUDE_TAGS: noexport"
        }, 
        {
            "location": "/test/#creator-emacs-2451-org-mode-834", 
            "text": "Hello world.", 
            "title": "+CREATOR: Emacs 24.5.1 (Org mode 8.3.4)"
        }, 
        {
            "location": "/about/", 
            "text": "Iubet per fors superi crine\n\n\nMinima moram vulgus humus cum tuta dixerunt\n\n\nLorem \nmarkdownum aviti\n, dolore hanc tota arceat terret unguis luctus? Curaque\nhoc undique sine sanguine, senior in, atque; altera, consorte solacia. De domus\ntu dedit.\n\n\n\n\nEtsi avem Priamum? Arma artes exiguo eripere caeloque colle. Non sentit inquit\nquater discedere dolebo! Iam conabar ima apte ausis, venturaque dulces.\n\n\n\n\nRutilos renoventur miseroque possit quam\n\n\nHaud figuram, illa dat petit deserere placet, liquidas ait, meoque contrarius.\nRatione cuspide currum. Dixi perque utrumque. Adoni et capit ruricolae et\nmicante solido ore \nhabet rogis iuves\n in tardarunt quid, non non regis,\nvirago. In spectat numen, te remige Pelasgas, a feroci flores concustodita\nprecor parentem quam modo virum.\n\n\nVenientique ponti\n\n\nPerimet locum saxo; stipe ille sine semper ad vivum At sonantem vero spatiumque.\nMadidisque flamma avulsa utrumque mandata, perimunt vultumque \nutile\nEleis\n nocte, \nde laetis\n dubitat illas\nquoque: sertis adsuetos? Cuius molli per nescit tympana velaque tepentibus\nclarus inmittite et signaque.\n\n\n\n\nOre factus decet paulatimque\n\n\nRuunt praemia\n\n\nRemissis naides\n\n\nSed se te vitiatur tenent thalamos tamen\n\n\n\n\nLenaeo gerebat\n\n\nSubiectum caput: de: Megareus formam, marmoris et dolore acrior erant. Vana hos\nSolis metu ipsa tertia munimine antiquas consenuere fallis sine remis?\n\n\nEdendi inmotosque undis, habet perlucidus ter iram Glaucus potest more\nreferente! Me \ntuta\n regis, resimas ut navifragumque arbore pauca utrumque,\n\nin\n mihi simul pressa tepidique tanta\ndeposuisse aulaea. Maiores altus nato ignotis trita reminiscitur Iovem matrona\nopes clara neque, hos est causa.\n\n\nVidentur \net puerum de\n veniet nulla, nec \nnumquam\n quantas. Cadmi fusum arces\ndiffusa iuvencae vestis diffugiunt mediae secum.", 
            "title": "About"
        }, 
        {
            "location": "/about/#iubet-per-fors-superi-crine", 
            "text": "", 
            "title": "Iubet per fors superi crine"
        }, 
        {
            "location": "/about/#minima-moram-vulgus-humus-cum-tuta-dixerunt", 
            "text": "Lorem  markdownum aviti , dolore hanc tota arceat terret unguis luctus? Curaque\nhoc undique sine sanguine, senior in, atque; altera, consorte solacia. De domus\ntu dedit.   Etsi avem Priamum? Arma artes exiguo eripere caeloque colle. Non sentit inquit\nquater discedere dolebo! Iam conabar ima apte ausis, venturaque dulces.", 
            "title": "Minima moram vulgus humus cum tuta dixerunt"
        }, 
        {
            "location": "/about/#rutilos-renoventur-miseroque-possit-quam", 
            "text": "Haud figuram, illa dat petit deserere placet, liquidas ait, meoque contrarius.\nRatione cuspide currum. Dixi perque utrumque. Adoni et capit ruricolae et\nmicante solido ore  habet rogis iuves  in tardarunt quid, non non regis,\nvirago. In spectat numen, te remige Pelasgas, a feroci flores concustodita\nprecor parentem quam modo virum.", 
            "title": "Rutilos renoventur miseroque possit quam"
        }, 
        {
            "location": "/about/#venientique-ponti", 
            "text": "Perimet locum saxo; stipe ille sine semper ad vivum At sonantem vero spatiumque.\nMadidisque flamma avulsa utrumque mandata, perimunt vultumque  utile\nEleis  nocte,  de laetis  dubitat illas\nquoque: sertis adsuetos? Cuius molli per nescit tympana velaque tepentibus\nclarus inmittite et signaque.   Ore factus decet paulatimque  Ruunt praemia  Remissis naides  Sed se te vitiatur tenent thalamos tamen", 
            "title": "Venientique ponti"
        }, 
        {
            "location": "/about/#lenaeo-gerebat", 
            "text": "Subiectum caput: de: Megareus formam, marmoris et dolore acrior erant. Vana hos\nSolis metu ipsa tertia munimine antiquas consenuere fallis sine remis?  Edendi inmotosque undis, habet perlucidus ter iram Glaucus potest more\nreferente! Me  tuta  regis, resimas ut navifragumque arbore pauca utrumque, in  mihi simul pressa tepidique tanta\ndeposuisse aulaea. Maiores altus nato ignotis trita reminiscitur Iovem matrona\nopes clara neque, hos est causa.  Videntur  et puerum de  veniet nulla, nec  numquam  quantas. Cadmi fusum arces\ndiffusa iuvencae vestis diffugiunt mediae secum.", 
            "title": "Lenaeo gerebat"
        }
    ]
}