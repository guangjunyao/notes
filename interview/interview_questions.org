#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t c:nil
#+OPTIONS: creator:nil d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t
#+OPTIONS: num:t p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t timestamp:t
#+OPTIONS: title:t toc:t todo:t |:t
#+TITLES: Quant Interview Questions
#+DATE: <2018-08-29 Wed>
#+AUTHORS: weiwu
#+EMAIL: victor.wuv@gmail.com
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode 8.3.4)
#+STARTUP: latexpreview
#+SETUPFILE: ../configOrg/level1.org


* Akuna capital:
[[file:./drones_time_to_deliver.py][time_to_deliver]]

[[file:./minimize_ice_cream_shop_cost.py][minimize ice cream shop cost]]

[[file:./postfix_to_infix.py][postfix_to_infix]]

[[file:./classify_trades.py][classify trades]]

[[file:./fermat_point.py][fermat point]]

[[file:./palindromes_dates.py][palindromes dates]]

[[file:./squared_summation_of_digits.py][squared summation of digits]]

[[file:./detect_colinearity.py][detect colinearity]]

[[file:./parsing_words.py][parsing words]]

[[file:./market_equilibrium.py][market equilibrium]]


[[file:./tetris.py][tetris]]
* Turingideas
[[file:./fibonacci.py][fibonacci]]

[[file:./find_product_closest_to_M_in_array.py][find_product_closest_to_M_in_array]]

[[file:./overfitting.org][overfitting]]

[[file:./robustness.org][robustness]]

[[file:./dice_rolling.org][dice]]

[[file:./random_walk.org][random walk]]

* 中国平安
[[file:./prime_in_fibonacci.py][prime in fibonacci]]

[[file:./rotate_list_of_nodes.py][rotate the list of nodes]]

[[file:./area_of_submatrix.py][area of submatrix with all 1s]]

[[file:./pingan_interview_questions.org][面经]]

* Trexquant
[[file:./second_order_difference.py][second order difference with missing value]]

[[file:./consecutive_sum.py][consecutive sum]]

[[file:./traveling_is_fun.py][traveling is fun]]
* Goomoo
[[file:./baby_birthday_probability.org][four babies born in a year are randomly selected, what's the expected birthday for the youngest one?]]
[[file:./birthday_probability.py][monte carlo simulation]]

[[file:./expected_number_of_flips_for_two_consecutive_heads.org][expected number of flips for two consecutive heads]]

* leetcode
** 链表
*** basic:
[[file:./basic_of_node_list.py][basic of node list]]

*** practice
[[file:./max_sub_array_sum.py][maximum subarray sum]]

[[file:./minimum_in_array_after_rotation.py][minimum in array after rotation]]

[[file:./Partition_List.py][Partition List]]
** Longest Common Subsequences
[[file:./LCS.py][LCS]]
** String
[[file:./move_first_k_characters_to_the_end.py][move the first k characters to the end]]

[[file:./combination_of_all_strings.py][permutate all strings]]

[[file:./select_n_letters_from.cpp][how many combinations in n letters selected from 26 letters]]

[[file:./next_permutation.cpp][next permutation]]

[[file:./lower_case_to_upper_case.cpp][lower case to upper case]]

*** KMP
[[file:./first_match.py][position of match pattern]]

*** Manacher
** Array
[[file:./fibonacci.cpp][fibonacci]]

[[file:./fizz_buzz.cpp][fizz buzz]]

[[file:./subarray_product.cpp][sub array product less than k]]

[[file:./greatest_common_divisor.cpp][greatest common divisor]]

[[file:./test.cpp][test]]
** brute force
*** Subsets
[[file:./subsets_brute_force_1.cpp][Given a set of distinct integers, S, return all possible subsets.]]

[[file:./subsets_brute_force_recursive.cpp][Given a set of distinct integers, S, return all possible subsets recursively.]]
*** Permutations
[[file:./next_permutation_std.cpp][Given a collection of numbers, return all possible permutations.]]
** Stack and queue
[[file:./knapping_1d.py][knap in 1d array]]

[[file:./knap_1d.cpp][knap in 1d array non recursively]]
